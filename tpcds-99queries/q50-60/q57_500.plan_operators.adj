// The Round Table
digraph {
	0 [label="nodeID(0) "]
	1 [label="nodeID(1) Project [i_category#19, i_brand#15, cc_name#97, d_year#69, d_moy#71, avg_monthly_sales#1, sum_sales#0, sum_sales#143 AS psum#3, sum_sales#151 AS nsum#4]"]
	2 [label="nodeID(2) SortMergeJoin [i_category#19, i_brand#15, cc_name#97, rn#2], [i_category#535, i_brand#531, cc_name#613, (rn#642 - 1)], Inner"]
	3 [label="nodeID(3) Project [i_category#19, i_brand#15, cc_name#97, d_year#69, d_moy#71, sum_sales#0, avg_monthly_sales#1, rn#2, sum_sales#143]"]
	4 [label="nodeID(4) SortMergeJoin [i_category#19, i_brand#15, cc_name#97, rn#2], [i_category#415, i_brand#411, cc_name#493, (rn#522 + 1)], Inner"]
	5 [label="nodeID(5) Sort [i_category#19 ASC NULLS FIRST, i_brand#15 ASC NULLS FIRST, cc_name#97 ASC NULLS FIRST, rn#2 ASC NULLS FIRST], false, 0"]
	6 [label="nodeID(6) Exchange hashpartitioning(i_category#19, i_brand#15, cc_name#97, rn#2, 200), ENSURE_REQUIREMENTS, [plan_id=330]"]
	7 [label="nodeID(7) Project [i_category#19, i_brand#15, cc_name#97, d_year#69, d_moy#71, sum_sales#0, avg_monthly_sales#1, rn#2]"]
	8 [label="nodeID(8) Filter ((isnotnull(avg_monthly_sales#1) AND (avg_monthly_sales#1 > 0.0)) AND CASE WHEN (avg_monthly_sales#1 > 0.0) THEN ((abs((sum_sales#0 - avg_monthly_sales#1)) / avg_monthly_sales#1) > 0.1) END)"]
	9 [label="nodeID(9) Window [avg(_w0#137) windowspecdefinition(i_category#19, i_brand#15, cc_name#97, d_year#69, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#1], [i_category#19, i_brand#15, cc_name#97, d_year#69]"]
	10 [label="nodeID(10) Filter (isnotnull(d_year#69) AND (d_year#69 = 1999))"]
	11 [label="nodeID(11) Window [rank(d_year#69, d_moy#71) windowspecdefinition(i_category#19, i_brand#15, cc_name#97, d_year#69 ASC NULLS FIRST, d_moy#71 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#2], [i_category#19, i_brand#15, cc_name#97], [d_year#69 ASC NULLS FIRST, d_moy#71 ASC NULLS FIRST]"]
	12 [label="nodeID(12) Sort [i_category#19 ASC NULLS FIRST, i_brand#15 ASC NULLS FIRST, cc_name#97 ASC NULLS FIRST, d_year#69 ASC NULLS FIRST, d_moy#71 ASC NULLS FIRST], false, 0"]
	13 [label="nodeID(13) Exchange hashpartitioning(i_category#19, i_brand#15, cc_name#97, 200), ENSURE_REQUIREMENTS, [plan_id=301]"]
	14 [label="nodeID(14) HashAggregate(keys=[i_category#19, i_brand#15, cc_name#97, d_year#69, d_moy#71], functions=[sum(cs_sales_price#50)])"]
	15 [label="nodeID(15) Exchange hashpartitioning(i_category#19, i_brand#15, cc_name#97, d_year#69, d_moy#71, 200), ENSURE_REQUIREMENTS, [plan_id=298]"]
	16 [label="nodeID(16) HashAggregate(keys=[i_category#19, i_brand#15, cc_name#97, d_year#69, d_moy#71], functions=[partial_sum(cs_sales_price#50)])"]
	17 [label="nodeID(17) Project [i_brand#15, i_category#19, cs_sales_price#50, d_year#69, d_moy#71, cc_name#97]"]
	18 [label="nodeID(18) BroadcastHashJoin [cs_call_center_sk#40], [cc_call_center_sk#91], Inner, BuildRight, false"]
	19 [label="nodeID(19) Project [i_brand#15, i_category#19, cs_call_center_sk#40, cs_sales_price#50, d_year#69, d_moy#71]"]
	20 [label="nodeID(20) BroadcastHashJoin [cs_sold_date_sk#29], [d_date_sk#63], Inner, BuildRight, false"]
	21 [label="nodeID(21) Project [i_brand#15, i_category#19, cs_sold_date_sk#29, cs_call_center_sk#40, cs_sales_price#50]"]
	22 [label="nodeID(22) BroadcastHashJoin [i_item_sk#7], [cs_item_sk#44], Inner, BuildLeft, false"]
	23 [label="nodeID(23) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=285]"]
	24 [label="nodeID(24) Filter ((isnotnull(i_item_sk#7) AND isnotnull(i_category#19)) AND isnotnull(i_brand#15))"]
	25 [label="nodeID(25) FileScan parquet tpcds_500_parquet.item[i_item_sk#7,i_brand#15,i_category#19"]
	26 [label="nodeID(26) Filter ((isnotnull(cs_item_sk#44) AND isnotnull(cs_sold_date_sk#29)) AND isnotnull(cs_call_center_sk#40))"]
	27 [label="nodeID(27) FileScan parquet tpcds_500_parquet.catalog_sales[cs_sold_date_sk#29,cs_call_center_sk#40,cs_item_sk#44,cs_sales_price#50"]
	28 [label="nodeID(28) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=289]"]
	29 [label="nodeID(29) Filter ((((d_year#69 = 1999) OR ((d_year#69 = 1998) AND (d_moy#71 = 12))) OR ((d_year#69 = 2000) AND (d_moy#71 = 1))) AND isnotnull(d_date_sk#63))"]
	30 [label="nodeID(30) FileScan parquet tpcds_500_parquet.date_dim[d_date_sk#63,d_year#69,d_moy#71"]
	31 [label="nodeID(31) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=293]"]
	32 [label="nodeID(32) Filter (isnotnull(cc_call_center_sk#91) AND isnotnull(cc_name#97))"]
	33 [label="nodeID(33) FileScan parquet tpcds_500_parquet.call_center[cc_call_center_sk#91,cc_name#97"]
	34 [label="nodeID(34) Sort [i_category#415 ASC NULLS FIRST, i_brand#411 ASC NULLS FIRST, cc_name#493 ASC NULLS FIRST, (rn#522 + 1) ASC NULLS FIRST], false, 0"]
	35 [label="nodeID(35) Exchange hashpartitioning(i_category#415, i_brand#411, cc_name#493, (rn#522 + 1), 200), ENSURE_REQUIREMENTS, [plan_id=331]"]
	36 [label="nodeID(36) Project [i_category#415, i_brand#411, cc_name#493, sum_sales#0 AS sum_sales#143, rn#522]"]
	37 [label="nodeID(37) Window [rank(d_year#465, d_moy#467) windowspecdefinition(i_category#415, i_brand#411, cc_name#493, d_year#465 ASC NULLS FIRST, d_moy#467 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#522], [i_category#415, i_brand#411, cc_name#493], [d_year#465 ASC NULLS FIRST, d_moy#467 ASC NULLS FIRST]"]
	38 [label="nodeID(38) Sort [i_category#415 ASC NULLS FIRST, i_brand#411 ASC NULLS FIRST, cc_name#493 ASC NULLS FIRST, d_year#465 ASC NULLS FIRST, d_moy#467 ASC NULLS FIRST], false, 0"]
	39 [label="nodeID(39) Exchange hashpartitioning(i_category#415, i_brand#411, cc_name#493, 200), ENSURE_REQUIREMENTS, [plan_id=324]"]
	40 [label="nodeID(40) HashAggregate(keys=[i_category#415, i_brand#411, cc_name#493, d_year#465, d_moy#467], functions=[sum(cs_sales_price#446)])"]
	41 [label="nodeID(41) Exchange hashpartitioning(i_category#415, i_brand#411, cc_name#493, d_year#465, d_moy#467, 200), ENSURE_REQUIREMENTS, [plan_id=321]"]
	42 [label="nodeID(42) HashAggregate(keys=[i_category#415, i_brand#411, cc_name#493, d_year#465, d_moy#467], functions=[partial_sum(cs_sales_price#446)])"]
	43 [label="nodeID(43) Project [i_brand#411, i_category#415, cs_sales_price#446, d_year#465, d_moy#467, cc_name#493]"]
	44 [label="nodeID(44) BroadcastHashJoin [cs_call_center_sk#436], [cc_call_center_sk#487], Inner, BuildRight, false"]
	45 [label="nodeID(45) Project [i_brand#411, i_category#415, cs_call_center_sk#436, cs_sales_price#446, d_year#465, d_moy#467]"]
	46 [label="nodeID(46) BroadcastHashJoin [cs_sold_date_sk#425], [d_date_sk#459], Inner, BuildRight, false"]
	47 [label="nodeID(47) Project [i_brand#411, i_category#415, cs_sold_date_sk#425, cs_call_center_sk#436, cs_sales_price#446]"]
	48 [label="nodeID(48) BroadcastHashJoin [i_item_sk#403], [cs_item_sk#440], Inner, BuildLeft, false"]
	49 [label="nodeID(49) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=308]"]
	50 [label="nodeID(50) Filter ((isnotnull(i_item_sk#403) AND isnotnull(i_category#415)) AND isnotnull(i_brand#411))"]
	51 [label="nodeID(51) FileScan parquet tpcds_500_parquet.item[i_item_sk#403,i_brand#411,i_category#415"]
	52 [label="nodeID(52) Filter ((isnotnull(cs_item_sk#440) AND isnotnull(cs_sold_date_sk#425)) AND isnotnull(cs_call_center_sk#436))"]
	53 [label="nodeID(53) FileScan parquet tpcds_500_parquet.catalog_sales[cs_sold_date_sk#425,cs_call_center_sk#436,cs_item_sk#440,cs_sales_price#446"]
	54 [label="nodeID(54) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=312]"]
	55 [label="nodeID(55) Filter ((((d_year#465 = 1999) OR ((d_year#465 = 1998) AND (d_moy#467 = 12))) OR ((d_year#465 = 2000) AND (d_moy#467 = 1))) AND isnotnull(d_date_sk#459))"]
	56 [label="nodeID(56) FileScan parquet tpcds_500_parquet.date_dim[d_date_sk#459,d_year#465,d_moy#467"]
	57 [label="nodeID(57) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=316]"]
	58 [label="nodeID(58) Filter (isnotnull(cc_call_center_sk#487) AND isnotnull(cc_name#493))"]
	59 [label="nodeID(59) FileScan parquet tpcds_500_parquet.call_center[cc_call_center_sk#487,cc_name#493"]
	60 [label="nodeID(60) Sort [i_category#535 ASC NULLS FIRST, i_brand#531 ASC NULLS FIRST, cc_name#613 ASC NULLS FIRST, (rn#642 - 1) ASC NULLS FIRST], false, 0"]
	61 [label="nodeID(61) Exchange hashpartitioning(i_category#535, i_brand#531, cc_name#613, (rn#642 - 1), 200), ENSURE_REQUIREMENTS, [plan_id=358]"]
	62 [label="nodeID(62) Project [i_category#535, i_brand#531, cc_name#613, sum_sales#0 AS sum_sales#151, rn#642]"]
	63 [label="nodeID(63) Window [rank(d_year#585, d_moy#587) windowspecdefinition(i_category#535, i_brand#531, cc_name#613, d_year#585 ASC NULLS FIRST, d_moy#587 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#642], [i_category#535, i_brand#531, cc_name#613], [d_year#585 ASC NULLS FIRST, d_moy#587 ASC NULLS FIRST]"]
	64 [label="nodeID(64) Sort [i_category#535 ASC NULLS FIRST, i_brand#531 ASC NULLS FIRST, cc_name#613 ASC NULLS FIRST, d_year#585 ASC NULLS FIRST, d_moy#587 ASC NULLS FIRST], false, 0"]
	65 [label="nodeID(65) Exchange hashpartitioning(i_category#535, i_brand#531, cc_name#613, 200), ENSURE_REQUIREMENTS, [plan_id=352]"]
	66 [label="nodeID(66) HashAggregate(keys=[i_category#535, i_brand#531, cc_name#613, d_year#585, d_moy#587], functions=[sum(cs_sales_price#566)])"]
	67 [label="nodeID(67) Exchange hashpartitioning(i_category#535, i_brand#531, cc_name#613, d_year#585, d_moy#587, 200), ENSURE_REQUIREMENTS, [plan_id=349]"]
	68 [label="nodeID(68) HashAggregate(keys=[i_category#535, i_brand#531, cc_name#613, d_year#585, d_moy#587], functions=[partial_sum(cs_sales_price#566)])"]
	69 [label="nodeID(69) Project [i_brand#531, i_category#535, cs_sales_price#566, d_year#585, d_moy#587, cc_name#613]"]
	70 [label="nodeID(70) BroadcastHashJoin [cs_call_center_sk#556], [cc_call_center_sk#607], Inner, BuildRight, false"]
	71 [label="nodeID(71) Project [i_brand#531, i_category#535, cs_call_center_sk#556, cs_sales_price#566, d_year#585, d_moy#587]"]
	72 [label="nodeID(72) BroadcastHashJoin [cs_sold_date_sk#545], [d_date_sk#579], Inner, BuildRight, false"]
	73 [label="nodeID(73) Project [i_brand#531, i_category#535, cs_sold_date_sk#545, cs_call_center_sk#556, cs_sales_price#566]"]
	74 [label="nodeID(74) BroadcastHashJoin [i_item_sk#523], [cs_item_sk#560], Inner, BuildLeft, false"]
	75 [label="nodeID(75) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=336]"]
	76 [label="nodeID(76) Filter ((isnotnull(i_item_sk#523) AND isnotnull(i_category#535)) AND isnotnull(i_brand#531))"]
	77 [label="nodeID(77) FileScan parquet tpcds_500_parquet.item[i_item_sk#523,i_brand#531,i_category#535"]
	78 [label="nodeID(78) Filter ((isnotnull(cs_item_sk#560) AND isnotnull(cs_sold_date_sk#545)) AND isnotnull(cs_call_center_sk#556))"]
	79 [label="nodeID(79) FileScan parquet tpcds_500_parquet.catalog_sales[cs_sold_date_sk#545,cs_call_center_sk#556,cs_item_sk#560,cs_sales_price#566"]
	80 [label="nodeID(80) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=340]"]
	81 [label="nodeID(81) Filter ((((d_year#585 = 1999) OR ((d_year#585 = 1998) AND (d_moy#587 = 12))) OR ((d_year#585 = 2000) AND (d_moy#587 = 1))) AND isnotnull(d_date_sk#579))"]
	82 [label="nodeID(82) FileScan parquet tpcds_500_parquet.date_dim[d_date_sk#579,d_year#585,d_moy#587"]
	83 [label="nodeID(83) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=344]"]
	84 [label="nodeID(84) Filter (isnotnull(cc_call_center_sk#607) AND isnotnull(cc_name#613))"]
	85 [label="nodeID(85) FileScan parquet tpcds_500_parquet.call_center[cc_call_center_sk#607,cc_name#613"]
	1 -> 0
	2 -> 1
	3 -> 2
	4 -> 3
	5 -> 4
	6 -> 5
	7 -> 6
	8 -> 7
	9 -> 8
	10 -> 9
	11 -> 10
	12 -> 11
	13 -> 12
	14 -> 13
	15 -> 14
	16 -> 15
	17 -> 16
	18 -> 17
	19 -> 18
	20 -> 19
	21 -> 20
	22 -> 21
	23 -> 22
	24 -> 23
	25 -> 24
	26 -> 22
	27 -> 26
	28 -> 20
	29 -> 28
	30 -> 29
	31 -> 18
	32 -> 31
	33 -> 32
	34 -> 4
	35 -> 34
	36 -> 35
	37 -> 36
	38 -> 37
	39 -> 38
	40 -> 39
	41 -> 40
	42 -> 41
	43 -> 42
	44 -> 43
	45 -> 44
	46 -> 45
	47 -> 46
	48 -> 47
	49 -> 48
	50 -> 49
	51 -> 50
	52 -> 48
	53 -> 52
	54 -> 46
	55 -> 54
	56 -> 55
	57 -> 44
	58 -> 57
	59 -> 58
	60 -> 2
	61 -> 60
	62 -> 61
	63 -> 62
	64 -> 63
	65 -> 64
	66 -> 65
	67 -> 66
	68 -> 67
	69 -> 68
	70 -> 69
	71 -> 70
	72 -> 71
	73 -> 72
	74 -> 73
	75 -> 74
	76 -> 75
	77 -> 76
	78 -> 74
	79 -> 78
	80 -> 72
	81 -> 80
	82 -> 81
	83 -> 70
	84 -> 83
	85 -> 84
}
