// The Round Table
digraph {
	0 [label="nodeID(0) "]
	1 [label="nodeID(1) TakeOrderedAndProject(limit=100, orderBy=[segment#11 ASC NULLS FIRST,num_customers#0L ASC NULLS FIRST], output=[segment#11,num_customers#0L,segment_base#1])"]
	2 [label="nodeID(2) HashAggregate(keys=[segment#11], functions=[count(1)])"]
	3 [label="nodeID(3) Exchange hashpartitioning(segment#11, 200), ENSURE_REQUIREMENTS, [plan_id=250]"]
	4 [label="nodeID(4) HashAggregate(keys=[segment#11], functions=[partial_count(1)])"]
	5 [label="nodeID(5) HashAggregate(keys=[c_customer_sk#131], functions=[sum(ss_ext_sales_price#164)])"]
	6 [label="nodeID(6) HashAggregate(keys=[c_customer_sk#131], functions=[partial_sum(ss_ext_sales_price#164)])"]
	7 [label="nodeID(7) Project [c_customer_sk#131, ss_ext_sales_price#164]"]
	8 [label="nodeID(8) BroadcastHashJoin [ss_sold_date_sk#149], [d_date_sk#214], Inner, BuildRight, false"]
	9 [label="nodeID(9) Project [c_customer_sk#131, ss_sold_date_sk#149, ss_ext_sales_price#164]"]
	10 [label="nodeID(10) BroadcastHashJoin [ca_county#179, ca_state#180], [s_county#208, s_state#209], Inner, BuildRight, false"]
	11 [label="nodeID(11) Project [c_customer_sk#131, ss_sold_date_sk#149, ss_ext_sales_price#164, ca_county#179, ca_state#180]"]
	12 [label="nodeID(12) BroadcastHashJoin [c_current_addr_sk#135], [ca_address_sk#172], Inner, BuildRight, false"]
	13 [label="nodeID(13) Project [c_customer_sk#131, c_current_addr_sk#135, ss_sold_date_sk#149, ss_ext_sales_price#164]"]
	14 [label="nodeID(14) SortMergeJoin [c_customer_sk#131], [ss_customer_sk#152], Inner"]
	15 [label="nodeID(15) Sort [c_customer_sk#131 ASC NULLS FIRST], false, 0"]
	16 [label="nodeID(16) Exchange hashpartitioning(c_customer_sk#131, 200), ENSURE_REQUIREMENTS, [plan_id=228]"]
	17 [label="nodeID(17) HashAggregate(keys=[c_customer_sk#131, c_current_addr_sk#135], functions=[])"]
	18 [label="nodeID(18) Exchange hashpartitioning(c_customer_sk#131, c_current_addr_sk#135, 200), ENSURE_REQUIREMENTS, [plan_id=224]"]
	19 [label="nodeID(19) HashAggregate(keys=[c_customer_sk#131, c_current_addr_sk#135], functions=[])"]
	20 [label="nodeID(20) Project [c_customer_sk#131, c_current_addr_sk#135]"]
	21 [label="nodeID(21) BroadcastHashJoin [customer_sk#3], [c_customer_sk#131], Inner, BuildRight, false"]
	22 [label="nodeID(22) Project [customer_sk#3]"]
	23 [label="nodeID(23) BroadcastHashJoin [sold_date_sk#2], [d_date_sk#103], Inner, BuildRight, false"]
	24 [label="nodeID(24) Project [sold_date_sk#2, customer_sk#3]"]
	25 [label="nodeID(25) BroadcastHashJoin [item_sk#4], [i_item_sk#81], Inner, BuildRight, false"]
	26 [label="nodeID(26) Union"]
	27 [label="nodeID(27) Project [cs_sold_date_sk#13 AS sold_date_sk#2, cs_bill_customer_sk#16 AS customer_sk#3, cs_item_sk#28 AS item_sk#4]"]
	28 [label="nodeID(28) Filter ((isnotnull(cs_item_sk#28) AND isnotnull(cs_sold_date_sk#13)) AND isnotnull(cs_bill_customer_sk#16))"]
	29 [label="nodeID(29) FileScan parquet tpcds_100_parquet.catalog_sales[cs_sold_date_sk#13,cs_bill_customer_sk#16,cs_item_sk#28]"]
	30 [label="nodeID(30) Project [ws_sold_date_sk#47 AS sold_date_sk#5, ws_bill_customer_sk#51 AS customer_sk#6, ws_item_sk#50 AS item_sk#7]"]
	31 [label="nodeID(31) Filter ((isnotnull(ws_item_sk#50) AND isnotnull(ws_sold_date_sk#47)) AND isnotnull(ws_bill_customer_sk#51))"]
	32 [label="nodeID(32) FileScan parquet tpcds_100_parquet.web_sales[ws_sold_date_sk#47,ws_item_sk#50,ws_bill_customer_sk#51]"]
	33 [label="nodeID(33) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=211]"]
	34 [label="nodeID(34) Project [i_item_sk#81]"]
	35 [label="nodeID(35) Filter ((((isnotnull(i_category#93) AND isnotnull(i_class#91)) AND (i_category#93 = Women)) AND (i_class#91 = maternity)) AND isnotnull(i_item_sk#81))"]
	36 [label="nodeID(36) FileScan parquet tpcds_100_parquet.item[i_item_sk#81,i_class#91,i_category#93]"]
	37 [label="nodeID(37) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=215]"]
	38 [label="nodeID(38) Project [d_date_sk#103]"]
	39 [label="nodeID(39) Filter ((((isnotnull(d_moy#111) AND isnotnull(d_year#109)) AND (d_moy#111 = 12)) AND (d_year#109 = 1998)) AND isnotnull(d_date_sk#103))"]
	40 [label="nodeID(40) FileScan parquet tpcds_100_parquet.date_dim[d_date_sk#103,d_year#109,d_moy#111]"]
	41 [label="nodeID(41) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=219]"]
	42 [label="nodeID(42) Filter (isnotnull(c_customer_sk#131) AND isnotnull(c_current_addr_sk#135))"]
	43 [label="nodeID(43) FileScan parquet tpcds_100_parquet.customer[c_customer_sk#131,c_current_addr_sk#135]"]
	44 [label="nodeID(44) Sort [ss_customer_sk#152 ASC NULLS FIRST], false, 0"]
	45 [label="nodeID(45) Exchange hashpartitioning(ss_customer_sk#152, 200), ENSURE_REQUIREMENTS, [plan_id=229]"]
	46 [label="nodeID(46) Filter (isnotnull(ss_customer_sk#152) AND isnotnull(ss_sold_date_sk#149))"]
	47 [label="nodeID(47) FileScan parquet tpcds_100_parquet.store_sales[ss_sold_date_sk#149,ss_customer_sk#152,ss_ext_sales_price#164]"]
	48 [label="nodeID(48) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=235]"]
	49 [label="nodeID(49) Filter ((isnotnull(ca_address_sk#172) AND isnotnull(ca_county#179)) AND isnotnull(ca_state#180))"]
	50 [label="nodeID(50) FileScan parquet tpcds_100_parquet.customer_address[ca_address_sk#172,ca_county#179,ca_state#180]"]
	51 [label="nodeID(51) BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false], input[1, string, false]),false), [plan_id=239]"]
	52 [label="nodeID(52) Filter (isnotnull(s_county#208) AND isnotnull(s_state#209))"]
	53 [label="nodeID(53) FileScan parquet tpcds_100_parquet.store[s_county#208,s_state#209]"]
	54 [label="nodeID(54) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=243]"]
	55 [label="nodeID(55) Project [d_date_sk#214]"]
	56 [label="nodeID(56) Filter (((isnotnull(d_month_seq#217) AND (d_month_seq#217 >= Subquery subquery#9, [id=#170])) AND (d_month_seq#217 <= Subquery subquery#10, [id=#183])) AND isnotnull(d_date_sk#214))"]
	57 [label="nodeID(57) Subquery subquery#9, [id=#170]"]
	58 [label="nodeID(58) AdaptiveSparkPlan isFinalPlan=false"]
	59 [label="nodeID(59) HashAggregate(keys=[(d_month_seq + 1)#247], functions=[])"]
	60 [label="nodeID(60) Exchange hashpartitioning((d_month_seq + 1)#247, 200), ENSURE_REQUIREMENTS, [plan_id=168]"]
	61 [label="nodeID(61) HashAggregate(keys=[(d_month_seq + 1)#247], functions=[])"]
	62 [label="nodeID(62) Project [(d_month_seq#256 + 1) AS (d_month_seq + 1)#247]"]
	63 [label="nodeID(63) Filter (((isnotnull(d_year#259) AND isnotnull(d_moy#261)) AND (d_year#259 = 1998)) AND (d_moy#261 = 12))"]
	64 [label="nodeID(64) FileScan parquet tpcds_100_parquet.date_dim[d_month_seq#256,d_year#259,d_moy#261]"]
	65 [label="nodeID(65) Subquery subquery#10, [id=#183]"]
	66 [label="nodeID(66) AdaptiveSparkPlan isFinalPlan=false"]
	67 [label="nodeID(67) HashAggregate(keys=[(d_month_seq + 3)#248], functions=[])"]
	68 [label="nodeID(68) Exchange hashpartitioning((d_month_seq + 3)#248, 200), ENSURE_REQUIREMENTS, [plan_id=181]"]
	69 [label="nodeID(69) HashAggregate(keys=[(d_month_seq + 3)#248], functions=[])"]
	70 [label="nodeID(70) Project [(d_month_seq#284 + 3) AS (d_month_seq + 3)#248]"]
	71 [label="nodeID(71) Filter (((isnotnull(d_year#287) AND isnotnull(d_moy#289)) AND (d_year#287 = 1998)) AND (d_moy#289 = 12))"]
	72 [label="nodeID(72) FileScan parquet tpcds_100_parquet.date_dim[d_month_seq#284,d_year#287,d_moy#289]"]
	73 [label="nodeID(73) FileScan parquet tpcds_100_parquet.date_dim[d_date_sk#214,d_month_seq#217]"]
	1 -> 0
	2 -> 1
	3 -> 2
	4 -> 3
	5 -> 4
	6 -> 5
	7 -> 6
	8 -> 7
	9 -> 8
	10 -> 9
	11 -> 10
	12 -> 11
	13 -> 12
	14 -> 13
	15 -> 14
	16 -> 15
	17 -> 16
	18 -> 17
	19 -> 18
	20 -> 19
	21 -> 20
	22 -> 21
	23 -> 22
	24 -> 23
	25 -> 24
	26 -> 25
	27 -> 26
	28 -> 27
	29 -> 28
	30 -> 26
	31 -> 30
	32 -> 31
	33 -> 25
	34 -> 33
	35 -> 34
	36 -> 35
	37 -> 23
	38 -> 37
	39 -> 38
	40 -> 39
	41 -> 21
	42 -> 41
	43 -> 42
	44 -> 14
	45 -> 44
	46 -> 45
	47 -> 46
	48 -> 12
	49 -> 48
	50 -> 49
	51 -> 10
	52 -> 51
	53 -> 52
	54 -> 8
	55 -> 54
	56 -> 55
	57 -> 56
	58 -> 57
	59 -> 58
	60 -> 59
	61 -> 60
	62 -> 61
	63 -> 62
	64 -> 63
	65 -> 56
	66 -> 65
	67 -> 66
	68 -> 67
	69 -> 68
	70 -> 69
	71 -> 70
	72 -> 71
	73 -> 56
}
