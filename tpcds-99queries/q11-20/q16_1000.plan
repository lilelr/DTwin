== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- HashAggregate(keys=[], functions=[sum(cs_ext_ship_cost#33), sum(cs_net_profit#38), count(distinct cs_order_number#22L)])
   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=133]
      +- HashAggregate(keys=[], functions=[merge_sum(cs_ext_ship_cost#33), merge_sum(cs_net_profit#38), partial_count(distinct cs_order_number#22L)])
         +- HashAggregate(keys=[cs_order_number#22L], functions=[merge_sum(cs_ext_ship_cost#33), merge_sum(cs_net_profit#38)])
            +- HashAggregate(keys=[cs_order_number#22L], functions=[partial_sum(cs_ext_ship_cost#33), partial_sum(cs_net_profit#38)])
               +- Project [cs_order_number#22L, cs_ext_ship_cost#33, cs_net_profit#38]
                  +- BroadcastHashJoin [cs_call_center_sk#16], [cc_call_center_sk#80], Inner, BuildRight, false
                     :- Project [cs_call_center_sk#16, cs_order_number#22L, cs_ext_ship_cost#33, cs_net_profit#38]
                     :  +- BroadcastHashJoin [cs_ship_addr_sk#15], [ca_address_sk#67], Inner, BuildRight, false
                     :     :- Project [cs_ship_addr_sk#15, cs_call_center_sk#16, cs_order_number#22L, cs_ext_ship_cost#33, cs_net_profit#38]
                     :     :  +- BroadcastHashJoin [cs_ship_date_sk#7], [d_date_sk#39], Inner, BuildRight, false
                     :     :     :- SortMergeJoin [cs_order_number#22L], [cr_order_number#128L], LeftAnti
                     :     :     :  :- Project [cs_ship_date_sk#7, cs_ship_addr_sk#15, cs_call_center_sk#16, cs_order_number#22L, cs_ext_ship_cost#33, cs_net_profit#38]
                     :     :     :  :  +- SortMergeJoin [cs_order_number#22L], [cs_order_number#157L], LeftSemi, NOT (cs_warehouse_sk#19 = cs_warehouse_sk#154)
                     :     :     :  :     :- Sort [cs_order_number#22L ASC NULLS FIRST], false, 0
                     :     :     :  :     :  +- Exchange hashpartitioning(cs_order_number#22L, 200), ENSURE_REQUIREMENTS, [plan_id=106]
                     :     :     :  :     :     +- Filter ((isnotnull(cs_ship_date_sk#7) AND isnotnull(cs_ship_addr_sk#15)) AND isnotnull(cs_call_center_sk#16))
                     :     :     :  :     :        +- FileScan parquet tpcds_1000_parquet.catalog_sales[cs_ship_date_sk#7,cs_ship_addr_sk#15,cs_call_center_sk#16,cs_warehouse_sk#19,cs_order_number#22L,cs_ext_ship_cost#33,cs_net_profit#38] Batched: true, DataFilters: [isnotnull(cs_ship_date_sk#7), isnotnull(cs_ship_addr_sk#15), isnotnull(cs_call_center_sk#16)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/catalog_s..., PartitionFilters: [], PushedFilters: [IsNotNull(cs_ship_date_sk), IsNotNull(cs_ship_addr_sk), IsNotNull(cs_call_center_sk)], ReadSchema: struct<cs_ship_date_sk:int,cs_ship_addr_sk:int,cs_call_center_sk:int,cs_warehouse_sk:int,cs_order...
                     :     :     :  :     +- Sort [cs_order_number#157L ASC NULLS FIRST], false, 0
                     :     :     :  :        +- Exchange hashpartitioning(cs_order_number#157L, 200), ENSURE_REQUIREMENTS, [plan_id=107]
                     :     :     :  :           +- FileScan parquet tpcds_1000_parquet.catalog_sales[cs_warehouse_sk#154,cs_order_number#157L] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/catalog_s..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<cs_warehouse_sk:int,cs_order_number:bigint>
                     :     :     :  +- Sort [cr_order_number#128L ASC NULLS FIRST], false, 0
                     :     :     :     +- Exchange hashpartitioning(cr_order_number#128L, 200), ENSURE_REQUIREMENTS, [plan_id=114]
                     :     :     :        +- FileScan parquet tpcds_1000_parquet.catalog_returns[cr_order_number#128L] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/catalog_r..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<cr_order_number:bigint>
                     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=118]
                     :     :        +- Project [d_date_sk#39]
                     :     :           +- Filter (((isnotnull(d_date#41) AND (cast(d_date#41 as date) >= 2002-02-01)) AND (cast(d_date#41 as date) <= 2002-04-02)) AND isnotnull(d_date_sk#39))
                     :     :              +- FileScan parquet tpcds_1000_parquet.date_dim[d_date_sk#39,d_date#41] Batched: true, DataFilters: [isnotnull(d_date#41), (cast(d_date#41 as date) >= 2002-02-01), (cast(d_date#41 as date) <= 2002-..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:string>
                     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=122]
                     :        +- Project [ca_address_sk#67]
                     :           +- Filter ((isnotnull(ca_state#75) AND (ca_state#75 = GA)) AND isnotnull(ca_address_sk#67))
                     :              +- FileScan parquet tpcds_1000_parquet.customer_address[ca_address_sk#67,ca_state#75] Batched: true, DataFilters: [isnotnull(ca_state#75), (ca_state#75 = GA), isnotnull(ca_address_sk#67)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,GA), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>
                     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=126]
                        +- Project [cc_call_center_sk#80]
                           +- Filter ((isnotnull(cc_county#105) AND (cc_county#105 = Williamson County)) AND isnotnull(cc_call_center_sk#80))
                              +- FileScan parquet tpcds_1000_parquet.call_center[cc_call_center_sk#80,cc_county#105] Batched: true, DataFilters: [isnotnull(cc_county#105), (cc_county#105 = Williamson County), isnotnull(cc_call_center_sk#80)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/call_center], PartitionFilters: [], PushedFilters: [IsNotNull(cc_county), EqualTo(cc_county,Williamson County), IsNotNull(cc_call_center_sk)], ReadSchema: struct<cc_call_center_sk:int,cc_county:string>


