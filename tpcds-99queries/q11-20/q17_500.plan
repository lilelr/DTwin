== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[i_item_id#147 ASC NULLS FIRST,i_item_desc#150 ASC NULLS FIRST,s_state#141 ASC NULLS FIRST], output=[i_item_id#147,i_item_desc#150,s_state#141,store_sales_quantitycount#0L,store_sales_quantityave#1,store_sales_quantitystdev#2,store_sales_quantitycov#3,as_store_returns_quantitycount#4L,as_store_returns_quantityave#5,as_store_returns_quantitystdev#6,store_returns_quantitycov#7,catalog_sales_quantitycount#8L,catalog_sales_quantityave#9,catalog_sales_quantitystdev#10,catalog_sales_quantitycov#11])
   +- HashAggregate(keys=[i_item_id#147, i_item_desc#150, s_state#141], functions=[count(ss_quantity#22), avg(ss_quantity#22), stddev_samp(cast(ss_quantity#22 as double)), count(sr_return_quantity#45), avg(sr_return_quantity#45), stddev_samp(cast(sr_return_quantity#45 as double)), count(cs_quantity#73), avg(cs_quantity#73), stddev_samp(cast(cs_quantity#73 as double))])
      +- Exchange hashpartitioning(i_item_id#147, i_item_desc#150, s_state#141, 200), ENSURE_REQUIREMENTS, [plan_id=187]
         +- HashAggregate(keys=[i_item_id#147, i_item_desc#150, s_state#141], functions=[partial_count(ss_quantity#22), partial_avg(ss_quantity#22), partial_stddev_samp(cast(ss_quantity#22 as double)), partial_count(sr_return_quantity#45), partial_avg(sr_return_quantity#45), partial_stddev_samp(cast(sr_return_quantity#45 as double)), partial_count(cs_quantity#73), partial_avg(cs_quantity#73), partial_stddev_samp(cast(cs_quantity#73 as double))])
            +- Project [ss_quantity#22, sr_return_quantity#45, cs_quantity#73, s_state#141, i_item_id#147, i_item_desc#150]
               +- BroadcastHashJoin [ss_item_sk#14], [i_item_sk#146], Inner, BuildRight, false
                  :- Project [ss_item_sk#14, ss_quantity#22, sr_return_quantity#45, cs_quantity#73, s_state#141]
                  :  +- BroadcastHashJoin [ss_store_sk#19], [s_store_sk#117], Inner, BuildRight, false
                  :     :- Project [ss_item_sk#14, ss_store_sk#19, ss_quantity#22, sr_return_quantity#45, cs_quantity#73]
                  :     :  +- BroadcastHashJoin [cs_sold_date_sk#55], [d_date_sk#196], Inner, BuildRight, false
                  :     :     :- Project [ss_item_sk#14, ss_store_sk#19, ss_quantity#22, sr_return_quantity#45, cs_sold_date_sk#55, cs_quantity#73]
                  :     :     :  +- BroadcastHashJoin [sr_returned_date_sk#35], [d_date_sk#168], Inner, BuildRight, false
                  :     :     :     :- Project [ss_item_sk#14, ss_store_sk#19, ss_quantity#22, sr_returned_date_sk#35, sr_return_quantity#45, cs_sold_date_sk#55, cs_quantity#73]
                  :     :     :     :  +- BroadcastHashJoin [ss_sold_date_sk#12], [d_date_sk#89], Inner, BuildRight, false
                  :     :     :     :     :- Project [ss_sold_date_sk#12, ss_item_sk#14, ss_store_sk#19, ss_quantity#22, sr_returned_date_sk#35, sr_return_quantity#45, cs_sold_date_sk#55, cs_quantity#73]
                  :     :     :     :     :  +- SortMergeJoin [sr_customer_sk#38, sr_item_sk#37], [cs_bill_customer_sk#58, cs_item_sk#70], Inner
                  :     :     :     :     :     :- Sort [sr_customer_sk#38 ASC NULLS FIRST, sr_item_sk#37 ASC NULLS FIRST], false, 0
                  :     :     :     :     :     :  +- Exchange hashpartitioning(sr_customer_sk#38, sr_item_sk#37, 200), ENSURE_REQUIREMENTS, [plan_id=159]
                  :     :     :     :     :     :     +- Project [ss_sold_date_sk#12, ss_item_sk#14, ss_store_sk#19, ss_quantity#22, sr_returned_date_sk#35, sr_item_sk#37, sr_customer_sk#38, sr_return_quantity#45]
                  :     :     :     :     :     :        +- SortMergeJoin [ss_customer_sk#15, ss_item_sk#14, ss_ticket_number#21L], [sr_customer_sk#38, sr_item_sk#37, sr_ticket_number#44L], Inner
                  :     :     :     :     :     :           :- Sort [ss_customer_sk#15 ASC NULLS FIRST, ss_item_sk#14 ASC NULLS FIRST, ss_ticket_number#21L ASC NULLS FIRST], false, 0
                  :     :     :     :     :     :           :  +- Exchange hashpartitioning(ss_customer_sk#15, ss_item_sk#14, ss_ticket_number#21L, 200), ENSURE_REQUIREMENTS, [plan_id=151]
                  :     :     :     :     :     :           :     +- Filter ((((isnotnull(ss_customer_sk#15) AND isnotnull(ss_item_sk#14)) AND isnotnull(ss_ticket_number#21L)) AND isnotnull(ss_sold_date_sk#12)) AND isnotnull(ss_store_sk#19))
                  :     :     :     :     :     :           :        +- FileScan parquet tpcds_500_parquet.store_sales[ss_sold_date_sk#12,ss_item_sk#14,ss_customer_sk#15,ss_store_sk#19,ss_ticket_number#21L,ss_quantity#22] Batched: true, DataFilters: [isnotnull(ss_customer_sk#15), isnotnull(ss_item_sk#14), isnotnull(ss_ticket_number#21L), isnotnu..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_500/tpcds_parquet/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_item_sk), IsNotNull(ss_ticket_number), IsNotNull(ss_sold..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:big...
                  :     :     :     :     :     :           +- Sort [sr_customer_sk#38 ASC NULLS FIRST, sr_item_sk#37 ASC NULLS FIRST, sr_ticket_number#44L ASC NULLS FIRST], false, 0
                  :     :     :     :     :     :              +- Exchange hashpartitioning(sr_customer_sk#38, sr_item_sk#37, sr_ticket_number#44L, 200), ENSURE_REQUIREMENTS, [plan_id=152]
                  :     :     :     :     :     :                 +- Filter (((isnotnull(sr_customer_sk#38) AND isnotnull(sr_item_sk#37)) AND isnotnull(sr_ticket_number#44L)) AND isnotnull(sr_returned_date_sk#35))
                  :     :     :     :     :     :                    +- FileScan parquet tpcds_500_parquet.store_returns[sr_returned_date_sk#35,sr_item_sk#37,sr_customer_sk#38,sr_ticket_number#44L,sr_return_quantity#45] Batched: true, DataFilters: [isnotnull(sr_customer_sk#38), isnotnull(sr_item_sk#37), isnotnull(sr_ticket_number#44L), isnotnu..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_500/tpcds_parquet/store_retu..., PartitionFilters: [], PushedFilters: [IsNotNull(sr_customer_sk), IsNotNull(sr_item_sk), IsNotNull(sr_ticket_number), IsNotNull(sr_retu..., ReadSchema: struct<sr_returned_date_sk:int,sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:bigint,sr_retur...
                  :     :     :     :     :     +- Sort [cs_bill_customer_sk#58 ASC NULLS FIRST, cs_item_sk#70 ASC NULLS FIRST], false, 0
                  :     :     :     :     :        +- Exchange hashpartitioning(cs_bill_customer_sk#58, cs_item_sk#70, 200), ENSURE_REQUIREMENTS, [plan_id=160]
                  :     :     :     :     :           +- Filter ((isnotnull(cs_bill_customer_sk#58) AND isnotnull(cs_item_sk#70)) AND isnotnull(cs_sold_date_sk#55))
                  :     :     :     :     :              +- FileScan parquet tpcds_500_parquet.catalog_sales[cs_sold_date_sk#55,cs_bill_customer_sk#58,cs_item_sk#70,cs_quantity#73] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#58), isnotnull(cs_item_sk#70), isnotnull(cs_sold_date_sk#55)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_500/tpcds_parquet/catalog_sa..., PartitionFilters: [], PushedFilters: [IsNotNull(cs_bill_customer_sk), IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int>
                  :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=166]
                  :     :     :     :        +- Project [d_date_sk#89]
                  :     :     :     :           +- Filter ((isnotnull(d_quarter_name#104) AND (d_quarter_name#104 = 2001Q1)) AND isnotnull(d_date_sk#89))
                  :     :     :     :              +- FileScan parquet tpcds_500_parquet.date_dim[d_date_sk#89,d_quarter_name#104] Batched: true, DataFilters: [isnotnull(d_quarter_name#104), (d_quarter_name#104 = 2001Q1), isnotnull(d_date_sk#89)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_500/tpcds_parquet/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_quarter_name), EqualTo(d_quarter_name,2001Q1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_quarter_name:string>
                  :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=170]
                  :     :     :        +- Project [d_date_sk#168]
                  :     :     :           +- Filter (d_quarter_name#183 IN (2001Q1,2001Q2,2001Q3) AND isnotnull(d_date_sk#168))
                  :     :     :              +- FileScan parquet tpcds_500_parquet.date_dim[d_date_sk#168,d_quarter_name#183] Batched: true, DataFilters: [d_quarter_name#183 IN (2001Q1,2001Q2,2001Q3), isnotnull(d_date_sk#168)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_500/tpcds_parquet/date_dim], PartitionFilters: [], PushedFilters: [In(d_quarter_name, [2001Q1,2001Q2,2001Q3]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_quarter_name:string>
                  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=174]
                  :     :        +- Project [d_date_sk#196]
                  :     :           +- Filter (d_quarter_name#211 IN (2001Q1,2001Q2,2001Q3) AND isnotnull(d_date_sk#196))
                  :     :              +- FileScan parquet tpcds_500_parquet.date_dim[d_date_sk#196,d_quarter_name#211] Batched: true, DataFilters: [d_quarter_name#211 IN (2001Q1,2001Q2,2001Q3), isnotnull(d_date_sk#196)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_500/tpcds_parquet/date_dim], PartitionFilters: [], PushedFilters: [In(d_quarter_name, [2001Q1,2001Q2,2001Q3]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_quarter_name:string>
                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=178]
                  :        +- Filter isnotnull(s_store_sk#117)
                  :           +- FileScan parquet tpcds_500_parquet.store[s_store_sk#117,s_state#141] Batched: true, DataFilters: [isnotnull(s_store_sk#117)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_500/tpcds_parquet/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_state:string>
                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=182]
                     +- Filter isnotnull(i_item_sk#146)
                        +- FileScan parquet tpcds_500_parquet.item[i_item_sk#146,i_item_id#147,i_item_desc#150] Batched: true, DataFilters: [isnotnull(i_item_sk#146)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_500/tpcds_parquet/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string>


