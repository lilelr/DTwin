// The Round Table
digraph {
	0 [label="nodeID(0) "]
	1 [label="nodeID(1) Filter (isnotnull(paid#0) AND (paid#0 > Subquery subquery#1, [id=#227]))"]
	2 [label="nodeID(2) Subquery subquery#1, [id=#227]"]
	3 [label="nodeID(3) AdaptiveSparkPlan isFinalPlan=false"]
	4 [label="nodeID(4) HashAggregate(keys=[], functions=[avg(netpaid#2)])"]
	5 [label="nodeID(5) Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=225]"]
	6 [label="nodeID(6) HashAggregate(keys=[], functions=[partial_avg(netpaid#2)])"]
	7 [label="nodeID(7) HashAggregate(keys=[c_last_name#106, c_first_name#105, s_store_name#51, ca_state#123, s_state#70, i_color#92, i_current_price#80, i_manager_id#95, i_units#93, i_size#90], functions=[sum(ss_net_paid#23)])"]
	8 [label="nodeID(8) Exchange hashpartitioning(c_last_name#106, c_first_name#105, s_store_name#51, ca_state#123, s_state#70, i_color#92, i_current_price#80, i_manager_id#95, i_units#93, i_size#90, 200), ENSURE_REQUIREMENTS, [plan_id=221]"]
	9 [label="nodeID(9) HashAggregate(keys=[c_last_name#106, c_first_name#105, s_store_name#51, ca_state#123, s_state#70, i_color#92, knownfloatingpointnormalized(normalizenanandzero(i_current_price#80)) AS i_current_price#80, i_manager_id#95, i_units#93, i_size#90], functions=[partial_sum(ss_net_paid#23)])"]
	10 [label="nodeID(10) Project [ss_net_paid#23, s_store_name#51, s_state#70, i_current_price#80, i_size#90, i_color#92, i_units#93, i_manager_id#95, c_first_name#105, c_last_name#106, ca_state#123]"]
	11 [label="nodeID(11) BroadcastHashJoin [c_birth_country#111, s_zip#71], [upper(ca_country#125), ca_zip#124], Inner, BuildRight, false"]
	12 [label="nodeID(12) Project [ss_net_paid#23, s_store_name#51, s_state#70, s_zip#71, i_current_price#80, i_size#90, i_color#92, i_units#93, i_manager_id#95, c_first_name#105, c_last_name#106, c_birth_country#111]"]
	13 [label="nodeID(13) SortMergeJoin [ss_customer_sk#6], [c_customer_sk#97], Inner"]
	14 [label="nodeID(14) Sort [ss_customer_sk#6 ASC NULLS FIRST], false, 0"]
	15 [label="nodeID(15) Exchange hashpartitioning(ss_customer_sk#6, 200), ENSURE_REQUIREMENTS, [plan_id=209]"]
	16 [label="nodeID(16) Project [ss_customer_sk#6, ss_net_paid#23, s_store_name#51, s_state#70, s_zip#71, i_current_price#80, i_size#90, i_color#92, i_units#93, i_manager_id#95]"]
	17 [label="nodeID(17) BroadcastHashJoin [ss_item_sk#5], [i_item_sk#75], Inner, BuildRight, false"]
	18 [label="nodeID(18) Project [ss_item_sk#5, ss_customer_sk#6, ss_net_paid#23, s_store_name#51, s_state#70, s_zip#71]"]
	19 [label="nodeID(19) BroadcastHashJoin [ss_store_sk#10], [s_store_sk#46], Inner, BuildRight, false"]
	20 [label="nodeID(20) Project [ss_item_sk#5, ss_customer_sk#6, ss_store_sk#10, ss_net_paid#23]"]
	21 [label="nodeID(21) SortMergeJoin [ss_ticket_number#12L, ss_item_sk#5], [sr_ticket_number#35L, sr_item_sk#28], Inner"]
	22 [label="nodeID(22) Sort [ss_ticket_number#12L ASC NULLS FIRST, ss_item_sk#5 ASC NULLS FIRST], false, 0"]
	23 [label="nodeID(23) Exchange hashpartitioning(ss_ticket_number#12L, ss_item_sk#5, 200), ENSURE_REQUIREMENTS, [plan_id=193]"]
	24 [label="nodeID(24) Filter (((isnotnull(ss_ticket_number#12L) AND isnotnull(ss_item_sk#5)) AND isnotnull(ss_store_sk#10)) AND isnotnull(ss_customer_sk#6))"]
	25 [label="nodeID(25) FileScan parquet tpcds_100_parquet.store_sales[ss_item_sk#5,ss_customer_sk#6,ss_store_sk#10,ss_ticket_number#12L,ss_net_paid#23]"]
	26 [label="nodeID(26) Sort [sr_ticket_number#35L ASC NULLS FIRST, sr_item_sk#28 ASC NULLS FIRST], false, 0"]
	27 [label="nodeID(27) Exchange hashpartitioning(sr_ticket_number#35L, sr_item_sk#28, 200), ENSURE_REQUIREMENTS, [plan_id=194]"]
	28 [label="nodeID(28) Filter (isnotnull(sr_ticket_number#35L) AND isnotnull(sr_item_sk#28))"]
	29 [label="nodeID(29) FileScan parquet tpcds_100_parquet.store_returns[sr_item_sk#28,sr_ticket_number#35L]"]
	30 [label="nodeID(30) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=200]"]
	31 [label="nodeID(31) Project [s_store_sk#46, s_store_name#51, s_state#70, s_zip#71]"]
	32 [label="nodeID(32) Filter (((isnotnull(s_market_id#56) AND (s_market_id#56 = 8)) AND isnotnull(s_store_sk#46)) AND isnotnull(s_zip#71))"]
	33 [label="nodeID(33) FileScan parquet tpcds_100_parquet.store[s_store_sk#46,s_store_name#51,s_market_id#56,s_state#70,s_zip#71]"]
	34 [label="nodeID(34) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=204]"]
	35 [label="nodeID(35) Filter isnotnull(i_item_sk#75)"]
	36 [label="nodeID(36) FileScan parquet tpcds_100_parquet.item[i_item_sk#75,i_current_price#80,i_size#90,i_color#92,i_units#93,i_manager_id#95]"]
	37 [label="nodeID(37) Sort [c_customer_sk#97 ASC NULLS FIRST], false, 0"]
	38 [label="nodeID(38) Exchange hashpartitioning(c_customer_sk#97, 200), ENSURE_REQUIREMENTS, [plan_id=210]"]
	39 [label="nodeID(39) Filter (isnotnull(c_customer_sk#97) AND isnotnull(c_birth_country#111))"]
	40 [label="nodeID(40) FileScan parquet tpcds_100_parquet.customer[c_customer_sk#97,c_first_name#105,c_last_name#106,c_birth_country#111]"]
	41 [label="nodeID(41) BroadcastExchange HashedRelationBroadcastMode(List(upper(input[2, string, false]), input[1, string, false]),false), [plan_id=216]"]
	42 [label="nodeID(42) Filter (isnotnull(ca_country#125) AND isnotnull(ca_zip#124))"]
	43 [label="nodeID(43) FileScan parquet tpcds_100_parquet.customer_address[ca_state#123,ca_zip#124,ca_country#125]"]
	44 [label="nodeID(44) HashAggregate(keys=[c_last_name#106, c_first_name#105, s_store_name#51], functions=[sum(netpaid#2)])"]
	45 [label="nodeID(45) Exchange hashpartitioning(c_last_name#106, c_first_name#105, s_store_name#51, 200), ENSURE_REQUIREMENTS, [plan_id=278]"]
	46 [label="nodeID(46) HashAggregate(keys=[c_last_name#106, c_first_name#105, s_store_name#51], functions=[partial_sum(netpaid#2)])"]
	47 [label="nodeID(47) HashAggregate(keys=[c_last_name#106, c_first_name#105, s_store_name#51, ca_state#123, s_state#70, i_color#92, i_current_price#80, i_manager_id#95, i_units#93, i_size#90], functions=[sum(ss_net_paid#23)])"]
	48 [label="nodeID(48) Exchange hashpartitioning(c_last_name#106, c_first_name#105, s_store_name#51, ca_state#123, s_state#70, i_color#92, i_current_price#80, i_manager_id#95, i_units#93, i_size#90, 200), ENSURE_REQUIREMENTS, [plan_id=274]"]
	49 [label="nodeID(49) HashAggregate(keys=[c_last_name#106, c_first_name#105, s_store_name#51, ca_state#123, s_state#70, i_color#92, knownfloatingpointnormalized(normalizenanandzero(i_current_price#80)) AS i_current_price#80, i_manager_id#95, i_units#93, i_size#90], functions=[partial_sum(ss_net_paid#23)])"]
	50 [label="nodeID(50) Project [ss_net_paid#23, s_store_name#51, s_state#70, i_current_price#80, i_size#90, i_color#92, i_units#93, i_manager_id#95, c_first_name#105, c_last_name#106, ca_state#123]"]
	51 [label="nodeID(51) BroadcastHashJoin [c_birth_country#111, s_zip#71], [upper(ca_country#125), ca_zip#124], Inner, BuildRight, false"]
	52 [label="nodeID(52) Project [ss_net_paid#23, s_store_name#51, s_state#70, s_zip#71, i_current_price#80, i_size#90, i_color#92, i_units#93, i_manager_id#95, c_first_name#105, c_last_name#106, c_birth_country#111]"]
	53 [label="nodeID(53) SortMergeJoin [ss_customer_sk#6], [c_customer_sk#97], Inner"]
	54 [label="nodeID(54) Sort [ss_customer_sk#6 ASC NULLS FIRST], false, 0"]
	55 [label="nodeID(55) Exchange hashpartitioning(ss_customer_sk#6, 200), ENSURE_REQUIREMENTS, [plan_id=262]"]
	56 [label="nodeID(56) Project [ss_customer_sk#6, ss_net_paid#23, s_store_name#51, s_state#70, s_zip#71, i_current_price#80, i_size#90, i_color#92, i_units#93, i_manager_id#95]"]
	57 [label="nodeID(57) BroadcastHashJoin [ss_item_sk#5], [i_item_sk#75], Inner, BuildRight, false"]
	58 [label="nodeID(58) Project [ss_item_sk#5, ss_customer_sk#6, ss_net_paid#23, s_store_name#51, s_state#70, s_zip#71]"]
	59 [label="nodeID(59) BroadcastHashJoin [ss_store_sk#10], [s_store_sk#46], Inner, BuildRight, false"]
	60 [label="nodeID(60) Project [ss_item_sk#5, ss_customer_sk#6, ss_store_sk#10, ss_net_paid#23]"]
	61 [label="nodeID(61) SortMergeJoin [ss_ticket_number#12L, ss_item_sk#5], [sr_ticket_number#35L, sr_item_sk#28], Inner"]
	62 [label="nodeID(62) Sort [ss_ticket_number#12L ASC NULLS FIRST, ss_item_sk#5 ASC NULLS FIRST], false, 0"]
	63 [label="nodeID(63) Exchange hashpartitioning(ss_ticket_number#12L, ss_item_sk#5, 200), ENSURE_REQUIREMENTS, [plan_id=246]"]
	64 [label="nodeID(64) Filter (((isnotnull(ss_ticket_number#12L) AND isnotnull(ss_item_sk#5)) AND isnotnull(ss_store_sk#10)) AND isnotnull(ss_customer_sk#6))"]
	65 [label="nodeID(65) FileScan parquet tpcds_100_parquet.store_sales[ss_item_sk#5,ss_customer_sk#6,ss_store_sk#10,ss_ticket_number#12L,ss_net_paid#23]"]
	66 [label="nodeID(66) Sort [sr_ticket_number#35L ASC NULLS FIRST, sr_item_sk#28 ASC NULLS FIRST], false, 0"]
	67 [label="nodeID(67) Exchange hashpartitioning(sr_ticket_number#35L, sr_item_sk#28, 200), ENSURE_REQUIREMENTS, [plan_id=247]"]
	68 [label="nodeID(68) Filter (isnotnull(sr_ticket_number#35L) AND isnotnull(sr_item_sk#28))"]
	69 [label="nodeID(69) FileScan parquet tpcds_100_parquet.store_returns[sr_item_sk#28,sr_ticket_number#35L]"]
	70 [label="nodeID(70) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=253]"]
	71 [label="nodeID(71) Project [s_store_sk#46, s_store_name#51, s_state#70, s_zip#71]"]
	72 [label="nodeID(72) Filter (((isnotnull(s_market_id#56) AND (s_market_id#56 = 8)) AND isnotnull(s_store_sk#46)) AND isnotnull(s_zip#71))"]
	73 [label="nodeID(73) FileScan parquet tpcds_100_parquet.store[s_store_sk#46,s_store_name#51,s_market_id#56,s_state#70,s_zip#71]"]
	74 [label="nodeID(74) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=257]"]
	75 [label="nodeID(75) Filter ((isnotnull(i_color#92) AND (i_color#92 = pale)) AND isnotnull(i_item_sk#75))"]
	76 [label="nodeID(76) FileScan parquet tpcds_100_parquet.item[i_item_sk#75,i_current_price#80,i_size#90,i_color#92,i_units#93,i_manager_id#95]"]
	77 [label="nodeID(77) Sort [c_customer_sk#97 ASC NULLS FIRST], false, 0"]
	78 [label="nodeID(78) Exchange hashpartitioning(c_customer_sk#97, 200), ENSURE_REQUIREMENTS, [plan_id=263]"]
	79 [label="nodeID(79) Filter (isnotnull(c_customer_sk#97) AND isnotnull(c_birth_country#111))"]
	80 [label="nodeID(80) FileScan parquet tpcds_100_parquet.customer[c_customer_sk#97,c_first_name#105,c_last_name#106,c_birth_country#111]"]
	81 [label="nodeID(81) BroadcastExchange HashedRelationBroadcastMode(List(upper(input[2, string, false]), input[1, string, false]),false), [plan_id=269]"]
	82 [label="nodeID(82) Filter (isnotnull(ca_country#125) AND isnotnull(ca_zip#124))"]
	83 [label="nodeID(83) FileScan parquet tpcds_100_parquet.customer_address[ca_state#123,ca_zip#124,ca_country#125]"]
	1 -> 0
	2 -> 1
	3 -> 2
	4 -> 3
	5 -> 4
	6 -> 5
	7 -> 6
	8 -> 7
	9 -> 8
	10 -> 9
	11 -> 10
	12 -> 11
	13 -> 12
	14 -> 13
	15 -> 14
	16 -> 15
	17 -> 16
	18 -> 17
	19 -> 18
	20 -> 19
	21 -> 20
	22 -> 21
	23 -> 22
	24 -> 23
	25 -> 24
	26 -> 21
	27 -> 26
	28 -> 27
	29 -> 28
	30 -> 19
	31 -> 30
	32 -> 31
	33 -> 32
	34 -> 17
	35 -> 34
	36 -> 35
	37 -> 13
	38 -> 37
	39 -> 38
	40 -> 39
	41 -> 11
	42 -> 41
	43 -> 42
	44 -> 1
	45 -> 44
	46 -> 45
	47 -> 46
	48 -> 47
	49 -> 48
	50 -> 49
	51 -> 50
	52 -> 51
	53 -> 52
	54 -> 53
	55 -> 54
	56 -> 55
	57 -> 56
	58 -> 57
	59 -> 58
	60 -> 59
	61 -> 60
	62 -> 61
	63 -> 62
	64 -> 63
	65 -> 64
	66 -> 61
	67 -> 66
	68 -> 67
	69 -> 68
	70 -> 59
	71 -> 70
	72 -> 71
	73 -> 72
	74 -> 57
	75 -> 74
	76 -> 75
	77 -> 53
	78 -> 77
	79 -> 78
	80 -> 79
	81 -> 51
	82 -> 81
	83 -> 82
}
