== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Filter (isnotnull(paid#0) AND (paid#0 > Subquery subquery#1, [id=#231]))
   :  +- Subquery subquery#1, [id=#231]
   :     +- AdaptiveSparkPlan isFinalPlan=false
   :        +- HashAggregate(keys=[], functions=[avg(netpaid#2)])
   :           +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=229]
   :              +- HashAggregate(keys=[], functions=[partial_avg(netpaid#2)])
   :                 +- HashAggregate(keys=[c_last_name#106, c_first_name#105, s_store_name#51, ca_state#123, s_state#70, i_color#92, i_current_price#80, i_manager_id#95, i_units#93, i_size#90], functions=[sum(ss_net_paid#23)])
   :                    +- Exchange hashpartitioning(c_last_name#106, c_first_name#105, s_store_name#51, ca_state#123, s_state#70, i_color#92, i_current_price#80, i_manager_id#95, i_units#93, i_size#90, 200), ENSURE_REQUIREMENTS, [plan_id=225]
   :                       +- HashAggregate(keys=[c_last_name#106, c_first_name#105, s_store_name#51, ca_state#123, s_state#70, i_color#92, knownfloatingpointnormalized(normalizenanandzero(i_current_price#80)) AS i_current_price#80, i_manager_id#95, i_units#93, i_size#90], functions=[partial_sum(ss_net_paid#23)])
   :                          +- Project [ss_net_paid#23, s_store_name#51, s_state#70, i_current_price#80, i_size#90, i_color#92, i_units#93, i_manager_id#95, c_first_name#105, c_last_name#106, ca_state#123]
   :                             +- SortMergeJoin [c_birth_country#111, s_zip#71], [upper(ca_country#125), ca_zip#124], Inner
   :                                :- Sort [c_birth_country#111 ASC NULLS FIRST, s_zip#71 ASC NULLS FIRST], false, 0
   :                                :  +- Exchange hashpartitioning(c_birth_country#111, s_zip#71, 200), ENSURE_REQUIREMENTS, [plan_id=217]
   :                                :     +- Project [ss_net_paid#23, s_store_name#51, s_state#70, s_zip#71, i_current_price#80, i_size#90, i_color#92, i_units#93, i_manager_id#95, c_first_name#105, c_last_name#106, c_birth_country#111]
   :                                :        +- SortMergeJoin [ss_customer_sk#6], [c_customer_sk#97], Inner
   :                                :           :- Sort [ss_customer_sk#6 ASC NULLS FIRST], false, 0
   :                                :           :  +- Exchange hashpartitioning(ss_customer_sk#6, 200), ENSURE_REQUIREMENTS, [plan_id=209]
   :                                :           :     +- Project [ss_customer_sk#6, ss_net_paid#23, s_store_name#51, s_state#70, s_zip#71, i_current_price#80, i_size#90, i_color#92, i_units#93, i_manager_id#95]
   :                                :           :        +- BroadcastHashJoin [ss_item_sk#5], [i_item_sk#75], Inner, BuildRight, false
   :                                :           :           :- Project [ss_item_sk#5, ss_customer_sk#6, ss_net_paid#23, s_store_name#51, s_state#70, s_zip#71]
   :                                :           :           :  +- BroadcastHashJoin [ss_store_sk#10], [s_store_sk#46], Inner, BuildRight, false
   :                                :           :           :     :- Project [ss_item_sk#5, ss_customer_sk#6, ss_store_sk#10, ss_net_paid#23]
   :                                :           :           :     :  +- SortMergeJoin [ss_ticket_number#12L, ss_item_sk#5], [sr_ticket_number#35L, sr_item_sk#28], Inner
   :                                :           :           :     :     :- Sort [ss_ticket_number#12L ASC NULLS FIRST, ss_item_sk#5 ASC NULLS FIRST], false, 0
   :                                :           :           :     :     :  +- Exchange hashpartitioning(ss_ticket_number#12L, ss_item_sk#5, 200), ENSURE_REQUIREMENTS, [plan_id=193]
   :                                :           :           :     :     :     +- Filter (((isnotnull(ss_ticket_number#12L) AND isnotnull(ss_item_sk#5)) AND isnotnull(ss_store_sk#10)) AND isnotnull(ss_customer_sk#6))
   :                                :           :           :     :     :        +- FileScan parquet tpcds_1000_parquet.store_sales[ss_item_sk#5,ss_customer_sk#6,ss_store_sk#10,ss_ticket_number#12L,ss_net_paid#23] Batched: true, DataFilters: [isnotnull(ss_ticket_number#12L), isnotnull(ss_item_sk#5), isnotnull(ss_store_sk#10), isnotnull(s..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_store_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_net_paid:double>
   :                                :           :           :     :     +- Sort [sr_ticket_number#35L ASC NULLS FIRST, sr_item_sk#28 ASC NULLS FIRST], false, 0
   :                                :           :           :     :        +- Exchange hashpartitioning(sr_ticket_number#35L, sr_item_sk#28, 200), ENSURE_REQUIREMENTS, [plan_id=194]
   :                                :           :           :     :           +- Filter (isnotnull(sr_ticket_number#35L) AND isnotnull(sr_item_sk#28))
   :                                :           :           :     :              +- FileScan parquet tpcds_1000_parquet.store_returns[sr_item_sk#28,sr_ticket_number#35L] Batched: true, DataFilters: [isnotnull(sr_ticket_number#35L), isnotnull(sr_item_sk#28)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/store_ret..., PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
   :                                :           :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=200]
   :                                :           :           :        +- Project [s_store_sk#46, s_store_name#51, s_state#70, s_zip#71]
   :                                :           :           :           +- Filter (((isnotnull(s_market_id#56) AND (s_market_id#56 = 8)) AND isnotnull(s_store_sk#46)) AND isnotnull(s_zip#71))
   :                                :           :           :              +- FileScan parquet tpcds_1000_parquet.store[s_store_sk#46,s_store_name#51,s_market_id#56,s_state#70,s_zip#71] Batched: true, DataFilters: [isnotnull(s_market_id#56), (s_market_id#56 = 8), isnotnull(s_store_sk#46), isnotnull(s_zip#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_market_id), EqualTo(s_market_id,8), IsNotNull(s_store_sk), IsNotNull(s_zip)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_market_id:int,s_state:string,s_zip:string>
   :                                :           :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=204]
   :                                :           :              +- Filter isnotnull(i_item_sk#75)
   :                                :           :                 +- FileScan parquet tpcds_1000_parquet.item[i_item_sk#75,i_current_price#80,i_size#90,i_color#92,i_units#93,i_manager_id#95] Batched: true, DataFilters: [isnotnull(i_item_sk#75)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_current_price:double,i_size:string,i_color:string,i_units:string,i_manager...
   :                                :           +- Sort [c_customer_sk#97 ASC NULLS FIRST], false, 0
   :                                :              +- Exchange hashpartitioning(c_customer_sk#97, 200), ENSURE_REQUIREMENTS, [plan_id=210]
   :                                :                 +- Filter (isnotnull(c_customer_sk#97) AND isnotnull(c_birth_country#111))
   :                                :                    +- FileScan parquet tpcds_1000_parquet.customer[c_customer_sk#97,c_first_name#105,c_last_name#106,c_birth_country#111] Batched: true, DataFilters: [isnotnull(c_customer_sk#97), isnotnull(c_birth_country#111)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_birth_country)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string,c_birth_country:string>
   :                                +- Sort [upper(ca_country#125) ASC NULLS FIRST, ca_zip#124 ASC NULLS FIRST], false, 0
   :                                   +- Exchange hashpartitioning(upper(ca_country#125), ca_zip#124, 200), ENSURE_REQUIREMENTS, [plan_id=218]
   :                                      +- Filter (isnotnull(ca_country#125) AND isnotnull(ca_zip#124))
   :                                         +- FileScan parquet tpcds_1000_parquet.customer_address[ca_state#123,ca_zip#124,ca_country#125] Batched: true, DataFilters: [isnotnull(ca_country#125), isnotnull(ca_zip#124)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_country), IsNotNull(ca_zip)], ReadSchema: struct<ca_state:string,ca_zip:string,ca_country:string>
   +- HashAggregate(keys=[c_last_name#106, c_first_name#105, s_store_name#51], functions=[sum(netpaid#2)])
      +- Exchange hashpartitioning(c_last_name#106, c_first_name#105, s_store_name#51, 200), ENSURE_REQUIREMENTS, [plan_id=286]
         +- HashAggregate(keys=[c_last_name#106, c_first_name#105, s_store_name#51], functions=[partial_sum(netpaid#2)])
            +- HashAggregate(keys=[c_last_name#106, c_first_name#105, s_store_name#51, ca_state#123, s_state#70, i_color#92, i_current_price#80, i_manager_id#95, i_units#93, i_size#90], functions=[sum(ss_net_paid#23)])
               +- Exchange hashpartitioning(c_last_name#106, c_first_name#105, s_store_name#51, ca_state#123, s_state#70, i_color#92, i_current_price#80, i_manager_id#95, i_units#93, i_size#90, 200), ENSURE_REQUIREMENTS, [plan_id=282]
                  +- HashAggregate(keys=[c_last_name#106, c_first_name#105, s_store_name#51, ca_state#123, s_state#70, i_color#92, knownfloatingpointnormalized(normalizenanandzero(i_current_price#80)) AS i_current_price#80, i_manager_id#95, i_units#93, i_size#90], functions=[partial_sum(ss_net_paid#23)])
                     +- Project [ss_net_paid#23, s_store_name#51, s_state#70, i_current_price#80, i_size#90, i_color#92, i_units#93, i_manager_id#95, c_first_name#105, c_last_name#106, ca_state#123]
                        +- SortMergeJoin [c_birth_country#111, s_zip#71], [upper(ca_country#125), ca_zip#124], Inner
                           :- Sort [c_birth_country#111 ASC NULLS FIRST, s_zip#71 ASC NULLS FIRST], false, 0
                           :  +- Exchange hashpartitioning(c_birth_country#111, s_zip#71, 200), ENSURE_REQUIREMENTS, [plan_id=274]
                           :     +- Project [ss_net_paid#23, s_store_name#51, s_state#70, s_zip#71, i_current_price#80, i_size#90, i_color#92, i_units#93, i_manager_id#95, c_first_name#105, c_last_name#106, c_birth_country#111]
                           :        +- SortMergeJoin [ss_customer_sk#6], [c_customer_sk#97], Inner
                           :           :- Sort [ss_customer_sk#6 ASC NULLS FIRST], false, 0
                           :           :  +- Exchange hashpartitioning(ss_customer_sk#6, 200), ENSURE_REQUIREMENTS, [plan_id=266]
                           :           :     +- Project [ss_customer_sk#6, ss_net_paid#23, s_store_name#51, s_state#70, s_zip#71, i_current_price#80, i_size#90, i_color#92, i_units#93, i_manager_id#95]
                           :           :        +- BroadcastHashJoin [ss_item_sk#5], [i_item_sk#75], Inner, BuildRight, false
                           :           :           :- Project [ss_item_sk#5, ss_customer_sk#6, ss_net_paid#23, s_store_name#51, s_state#70, s_zip#71]
                           :           :           :  +- BroadcastHashJoin [ss_store_sk#10], [s_store_sk#46], Inner, BuildRight, false
                           :           :           :     :- Project [ss_item_sk#5, ss_customer_sk#6, ss_store_sk#10, ss_net_paid#23]
                           :           :           :     :  +- SortMergeJoin [ss_ticket_number#12L, ss_item_sk#5], [sr_ticket_number#35L, sr_item_sk#28], Inner
                           :           :           :     :     :- Sort [ss_ticket_number#12L ASC NULLS FIRST, ss_item_sk#5 ASC NULLS FIRST], false, 0
                           :           :           :     :     :  +- Exchange hashpartitioning(ss_ticket_number#12L, ss_item_sk#5, 200), ENSURE_REQUIREMENTS, [plan_id=250]
                           :           :           :     :     :     +- Filter (((isnotnull(ss_ticket_number#12L) AND isnotnull(ss_item_sk#5)) AND isnotnull(ss_store_sk#10)) AND isnotnull(ss_customer_sk#6))
                           :           :           :     :     :        +- FileScan parquet tpcds_1000_parquet.store_sales[ss_item_sk#5,ss_customer_sk#6,ss_store_sk#10,ss_ticket_number#12L,ss_net_paid#23] Batched: true, DataFilters: [isnotnull(ss_ticket_number#12L), isnotnull(ss_item_sk#5), isnotnull(ss_store_sk#10), isnotnull(s..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_store_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_net_paid:double>
                           :           :           :     :     +- Sort [sr_ticket_number#35L ASC NULLS FIRST, sr_item_sk#28 ASC NULLS FIRST], false, 0
                           :           :           :     :        +- Exchange hashpartitioning(sr_ticket_number#35L, sr_item_sk#28, 200), ENSURE_REQUIREMENTS, [plan_id=251]
                           :           :           :     :           +- Filter (isnotnull(sr_ticket_number#35L) AND isnotnull(sr_item_sk#28))
                           :           :           :     :              +- FileScan parquet tpcds_1000_parquet.store_returns[sr_item_sk#28,sr_ticket_number#35L] Batched: true, DataFilters: [isnotnull(sr_ticket_number#35L), isnotnull(sr_item_sk#28)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/store_ret..., PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
                           :           :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=257]
                           :           :           :        +- Project [s_store_sk#46, s_store_name#51, s_state#70, s_zip#71]
                           :           :           :           +- Filter (((isnotnull(s_market_id#56) AND (s_market_id#56 = 8)) AND isnotnull(s_store_sk#46)) AND isnotnull(s_zip#71))
                           :           :           :              +- FileScan parquet tpcds_1000_parquet.store[s_store_sk#46,s_store_name#51,s_market_id#56,s_state#70,s_zip#71] Batched: true, DataFilters: [isnotnull(s_market_id#56), (s_market_id#56 = 8), isnotnull(s_store_sk#46), isnotnull(s_zip#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_market_id), EqualTo(s_market_id,8), IsNotNull(s_store_sk), IsNotNull(s_zip)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_market_id:int,s_state:string,s_zip:string>
                           :           :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=261]
                           :           :              +- Filter ((isnotnull(i_color#92) AND (i_color#92 = chiffon)) AND isnotnull(i_item_sk#75))
                           :           :                 +- FileScan parquet tpcds_1000_parquet.item[i_item_sk#75,i_current_price#80,i_size#90,i_color#92,i_units#93,i_manager_id#95] Batched: true, DataFilters: [isnotnull(i_color#92), (i_color#92 = chiffon), isnotnull(i_item_sk#75)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_color), EqualTo(i_color,chiffon), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_current_price:double,i_size:string,i_color:string,i_units:string,i_manager...
                           :           +- Sort [c_customer_sk#97 ASC NULLS FIRST], false, 0
                           :              +- Exchange hashpartitioning(c_customer_sk#97, 200), ENSURE_REQUIREMENTS, [plan_id=267]
                           :                 +- Filter (isnotnull(c_customer_sk#97) AND isnotnull(c_birth_country#111))
                           :                    +- FileScan parquet tpcds_1000_parquet.customer[c_customer_sk#97,c_first_name#105,c_last_name#106,c_birth_country#111] Batched: true, DataFilters: [isnotnull(c_customer_sk#97), isnotnull(c_birth_country#111)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_birth_country)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string,c_birth_country:string>
                           +- Sort [upper(ca_country#125) ASC NULLS FIRST, ca_zip#124 ASC NULLS FIRST], false, 0
                              +- Exchange hashpartitioning(upper(ca_country#125), ca_zip#124, 200), ENSURE_REQUIREMENTS, [plan_id=275]
                                 +- Filter (isnotnull(ca_country#125) AND isnotnull(ca_zip#124))
                                    +- FileScan parquet tpcds_1000_parquet.customer_address[ca_state#123,ca_zip#124,ca_country#125] Batched: true, DataFilters: [isnotnull(ca_country#125), isnotnull(ca_zip#124)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_country), IsNotNull(ca_zip)], ReadSchema: struct<ca_state:string,ca_zip:string,ca_country:string>


