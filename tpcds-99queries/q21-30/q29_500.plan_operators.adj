// The Round Table
digraph {
	0 [label="nodeID(0) "]
	1 [label="nodeID(1) HashAggregate(keys=[i_item_id#138, i_item_desc#141, s_store_id#109, s_store_name#113], functions=[sum(ss_quantity#13), sum(sr_return_quantity#36), sum(cs_quantity#64)])"]
	2 [label="nodeID(2) Exchange hashpartitioning(i_item_id#138, i_item_desc#141, s_store_id#109, s_store_name#113, 200), ENSURE_REQUIREMENTS, [plan_id=187]"]
	3 [label="nodeID(3) HashAggregate(keys=[i_item_id#138, i_item_desc#141, s_store_id#109, s_store_name#113], functions=[partial_sum(ss_quantity#13), partial_sum(sr_return_quantity#36), partial_sum(cs_quantity#64)])"]
	4 [label="nodeID(4) Project [ss_quantity#13, sr_return_quantity#36, cs_quantity#64, s_store_id#109, s_store_name#113, i_item_id#138, i_item_desc#141]"]
	5 [label="nodeID(5) BroadcastHashJoin [ss_item_sk#5], [i_item_sk#137], Inner, BuildRight, false"]
	6 [label="nodeID(6) Project [ss_item_sk#5, ss_quantity#13, sr_return_quantity#36, cs_quantity#64, s_store_id#109, s_store_name#113]"]
	7 [label="nodeID(7) BroadcastHashJoin [ss_store_sk#10], [s_store_sk#108], Inner, BuildRight, false"]
	8 [label="nodeID(8) Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, sr_return_quantity#36, cs_quantity#64]"]
	9 [label="nodeID(9) BroadcastHashJoin [cs_sold_date_sk#46], [d_date_sk#187], Inner, BuildRight, false"]
	10 [label="nodeID(10) Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, sr_return_quantity#36, cs_sold_date_sk#46, cs_quantity#64]"]
	11 [label="nodeID(11) BroadcastHashJoin [sr_returned_date_sk#26], [d_date_sk#159], Inner, BuildRight, false"]
	12 [label="nodeID(12) Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, sr_returned_date_sk#26, sr_return_quantity#36, cs_sold_date_sk#46, cs_quantity#64]"]
	13 [label="nodeID(13) BroadcastHashJoin [ss_sold_date_sk#3], [d_date_sk#80], Inner, BuildRight, false"]
	14 [label="nodeID(14) Project [ss_sold_date_sk#3, ss_item_sk#5, ss_store_sk#10, ss_quantity#13, sr_returned_date_sk#26, sr_return_quantity#36, cs_sold_date_sk#46, cs_quantity#64]"]
	15 [label="nodeID(15) SortMergeJoin [sr_customer_sk#29, sr_item_sk#28], [cs_bill_customer_sk#49, cs_item_sk#61], Inner"]
	16 [label="nodeID(16) Sort [sr_customer_sk#29 ASC NULLS FIRST, sr_item_sk#28 ASC NULLS FIRST], false, 0"]
	17 [label="nodeID(17) Exchange hashpartitioning(sr_customer_sk#29, sr_item_sk#28, 200), ENSURE_REQUIREMENTS, [plan_id=159]"]
	18 [label="nodeID(18) Project [ss_sold_date_sk#3, ss_item_sk#5, ss_store_sk#10, ss_quantity#13, sr_returned_date_sk#26, sr_item_sk#28, sr_customer_sk#29, sr_return_quantity#36]"]
	19 [label="nodeID(19) SortMergeJoin [ss_customer_sk#6, ss_item_sk#5, ss_ticket_number#12L], [sr_customer_sk#29, sr_item_sk#28, sr_ticket_number#35L], Inner"]
	20 [label="nodeID(20) Sort [ss_customer_sk#6 ASC NULLS FIRST, ss_item_sk#5 ASC NULLS FIRST, ss_ticket_number#12L ASC NULLS FIRST], false, 0"]
	21 [label="nodeID(21) Exchange hashpartitioning(ss_customer_sk#6, ss_item_sk#5, ss_ticket_number#12L, 200), ENSURE_REQUIREMENTS, [plan_id=151]"]
	22 [label="nodeID(22) Filter ((((isnotnull(ss_customer_sk#6) AND isnotnull(ss_item_sk#5)) AND isnotnull(ss_ticket_number#12L)) AND isnotnull(ss_sold_date_sk#3)) AND isnotnull(ss_store_sk#10))"]
	23 [label="nodeID(23) FileScan parquet tpcds_500_parquet.store_sales[ss_sold_date_sk#3,ss_item_sk#5,ss_customer_sk#6,ss_store_sk#10,ss_ticket_number#12L,ss_quantity#13"]
	24 [label="nodeID(24) Sort [sr_customer_sk#29 ASC NULLS FIRST, sr_item_sk#28 ASC NULLS FIRST, sr_ticket_number#35L ASC NULLS FIRST], false, 0"]
	25 [label="nodeID(25) Exchange hashpartitioning(sr_customer_sk#29, sr_item_sk#28, sr_ticket_number#35L, 200), ENSURE_REQUIREMENTS, [plan_id=152]"]
	26 [label="nodeID(26) Filter (((isnotnull(sr_customer_sk#29) AND isnotnull(sr_item_sk#28)) AND isnotnull(sr_ticket_number#35L)) AND isnotnull(sr_returned_date_sk#26))"]
	27 [label="nodeID(27) FileScan parquet tpcds_500_parquet.store_returns[sr_returned_date_sk#26,sr_item_sk#28,sr_customer_sk#29,sr_ticket_number#35L,sr_return_quantity#36"]
	28 [label="nodeID(28) Sort [cs_bill_customer_sk#49 ASC NULLS FIRST, cs_item_sk#61 ASC NULLS FIRST], false, 0"]
	29 [label="nodeID(29) Exchange hashpartitioning(cs_bill_customer_sk#49, cs_item_sk#61, 200), ENSURE_REQUIREMENTS, [plan_id=160]"]
	30 [label="nodeID(30) Filter ((isnotnull(cs_bill_customer_sk#49) AND isnotnull(cs_item_sk#61)) AND isnotnull(cs_sold_date_sk#46))"]
	31 [label="nodeID(31) FileScan parquet tpcds_500_parquet.catalog_sales[cs_sold_date_sk#46,cs_bill_customer_sk#49,cs_item_sk#61,cs_quantity#64"]
	32 [label="nodeID(32) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=166]"]
	33 [label="nodeID(33) Project [d_date_sk#80]"]
	34 [label="nodeID(34) Filter ((((isnotnull(d_moy#88) AND isnotnull(d_year#86)) AND (d_moy#88 = 9)) AND (d_year#86 = 1999)) AND isnotnull(d_date_sk#80))"]
	35 [label="nodeID(35) FileScan parquet tpcds_500_parquet.date_dim[d_date_sk#80,d_year#86,d_moy#88"]
	36 [label="nodeID(36) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=170]"]
	37 [label="nodeID(37) Project [d_date_sk#159]"]
	38 [label="nodeID(38) Filter (((((isnotnull(d_moy#167) AND isnotnull(d_year#165)) AND (d_moy#167 >= 9)) AND (d_moy#167 <= 12)) AND (d_year#165 = 1999)) AND isnotnull(d_date_sk#159))"]
	39 [label="nodeID(39) FileScan parquet tpcds_500_parquet.date_dim[d_date_sk#159,d_year#165,d_moy#167"]
	40 [label="nodeID(40) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=174]"]
	41 [label="nodeID(41) Project [d_date_sk#187]"]
	42 [label="nodeID(42) Filter (d_year#193 IN (1999,2000,2001) AND isnotnull(d_date_sk#187))"]
	43 [label="nodeID(43) FileScan parquet tpcds_500_parquet.date_dim[d_date_sk#187,d_year#193"]
	44 [label="nodeID(44) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=178]"]
	45 [label="nodeID(45) Filter isnotnull(s_store_sk#108)"]
	46 [label="nodeID(46) FileScan parquet tpcds_500_parquet.store[s_store_sk#108,s_store_id#109,s_store_name#113"]
	47 [label="nodeID(47) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=182]"]
	48 [label="nodeID(48) Filter isnotnull(i_item_sk#137)"]
	49 [label="nodeID(49) FileScan parquet tpcds_500_parquet.item[i_item_sk#137,i_item_id#138,i_item_desc#141"]
	1 -> 0
	2 -> 1
	3 -> 2
	4 -> 3
	5 -> 4
	6 -> 5
	7 -> 6
	8 -> 7
	9 -> 8
	10 -> 9
	11 -> 10
	12 -> 11
	13 -> 12
	14 -> 13
	15 -> 14
	16 -> 15
	17 -> 16
	18 -> 17
	19 -> 18
	20 -> 19
	21 -> 20
	22 -> 21
	23 -> 22
	24 -> 19
	25 -> 24
	26 -> 25
	27 -> 26
	28 -> 15
	29 -> 28
	30 -> 29
	31 -> 30
	32 -> 13
	33 -> 32
	34 -> 33
	35 -> 34
	36 -> 11
	37 -> 36
	38 -> 37
	39 -> 38
	40 -> 9
	41 -> 40
	42 -> 41
	43 -> 42
	44 -> 7
	45 -> 44
	46 -> 45
	47 -> 5
	48 -> 47
	49 -> 48
}
