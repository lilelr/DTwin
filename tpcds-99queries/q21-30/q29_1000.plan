== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[i_item_id#138 ASC NULLS FIRST,i_item_desc#141 ASC NULLS FIRST,s_store_id#109 ASC NULLS FIRST,s_store_name#113 ASC NULLS FIRST], output=[i_item_id#138,i_item_desc#141,s_store_id#109,s_store_name#113,store_sales_quantity#0L,store_returns_quantity#1L,catalog_sales_quantity#2L])
   +- HashAggregate(keys=[i_item_id#138, i_item_desc#141, s_store_id#109, s_store_name#113], functions=[sum(ss_quantity#13), sum(sr_return_quantity#36), sum(cs_quantity#64)])
      +- Exchange hashpartitioning(i_item_id#138, i_item_desc#141, s_store_id#109, s_store_name#113, 200), ENSURE_REQUIREMENTS, [plan_id=187]
         +- HashAggregate(keys=[i_item_id#138, i_item_desc#141, s_store_id#109, s_store_name#113], functions=[partial_sum(ss_quantity#13), partial_sum(sr_return_quantity#36), partial_sum(cs_quantity#64)])
            +- Project [ss_quantity#13, sr_return_quantity#36, cs_quantity#64, s_store_id#109, s_store_name#113, i_item_id#138, i_item_desc#141]
               +- BroadcastHashJoin [ss_item_sk#5], [i_item_sk#137], Inner, BuildRight, false
                  :- Project [ss_item_sk#5, ss_quantity#13, sr_return_quantity#36, cs_quantity#64, s_store_id#109, s_store_name#113]
                  :  +- BroadcastHashJoin [ss_store_sk#10], [s_store_sk#108], Inner, BuildRight, false
                  :     :- Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, sr_return_quantity#36, cs_quantity#64]
                  :     :  +- BroadcastHashJoin [cs_sold_date_sk#46], [d_date_sk#187], Inner, BuildRight, false
                  :     :     :- Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, sr_return_quantity#36, cs_sold_date_sk#46, cs_quantity#64]
                  :     :     :  +- BroadcastHashJoin [sr_returned_date_sk#26], [d_date_sk#159], Inner, BuildRight, false
                  :     :     :     :- Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, sr_returned_date_sk#26, sr_return_quantity#36, cs_sold_date_sk#46, cs_quantity#64]
                  :     :     :     :  +- BroadcastHashJoin [ss_sold_date_sk#3], [d_date_sk#80], Inner, BuildRight, false
                  :     :     :     :     :- Project [ss_sold_date_sk#3, ss_item_sk#5, ss_store_sk#10, ss_quantity#13, sr_returned_date_sk#26, sr_return_quantity#36, cs_sold_date_sk#46, cs_quantity#64]
                  :     :     :     :     :  +- SortMergeJoin [sr_customer_sk#29, sr_item_sk#28], [cs_bill_customer_sk#49, cs_item_sk#61], Inner
                  :     :     :     :     :     :- Sort [sr_customer_sk#29 ASC NULLS FIRST, sr_item_sk#28 ASC NULLS FIRST], false, 0
                  :     :     :     :     :     :  +- Exchange hashpartitioning(sr_customer_sk#29, sr_item_sk#28, 200), ENSURE_REQUIREMENTS, [plan_id=159]
                  :     :     :     :     :     :     +- Project [ss_sold_date_sk#3, ss_item_sk#5, ss_store_sk#10, ss_quantity#13, sr_returned_date_sk#26, sr_item_sk#28, sr_customer_sk#29, sr_return_quantity#36]
                  :     :     :     :     :     :        +- SortMergeJoin [ss_customer_sk#6, ss_item_sk#5, ss_ticket_number#12L], [sr_customer_sk#29, sr_item_sk#28, sr_ticket_number#35L], Inner
                  :     :     :     :     :     :           :- Sort [ss_customer_sk#6 ASC NULLS FIRST, ss_item_sk#5 ASC NULLS FIRST, ss_ticket_number#12L ASC NULLS FIRST], false, 0
                  :     :     :     :     :     :           :  +- Exchange hashpartitioning(ss_customer_sk#6, ss_item_sk#5, ss_ticket_number#12L, 200), ENSURE_REQUIREMENTS, [plan_id=151]
                  :     :     :     :     :     :           :     +- Filter ((((isnotnull(ss_customer_sk#6) AND isnotnull(ss_item_sk#5)) AND isnotnull(ss_ticket_number#12L)) AND isnotnull(ss_sold_date_sk#3)) AND isnotnull(ss_store_sk#10))
                  :     :     :     :     :     :           :        +- FileScan parquet tpcds_1000_parquet.store_sales[ss_sold_date_sk#3,ss_item_sk#5,ss_customer_sk#6,ss_store_sk#10,ss_ticket_number#12L,ss_quantity#13] Batched: true, DataFilters: [isnotnull(ss_customer_sk#6), isnotnull(ss_item_sk#5), isnotnull(ss_ticket_number#12L), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_item_sk), IsNotNull(ss_ticket_number), IsNotNull(ss_sold..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:big...
                  :     :     :     :     :     :           +- Sort [sr_customer_sk#29 ASC NULLS FIRST, sr_item_sk#28 ASC NULLS FIRST, sr_ticket_number#35L ASC NULLS FIRST], false, 0
                  :     :     :     :     :     :              +- Exchange hashpartitioning(sr_customer_sk#29, sr_item_sk#28, sr_ticket_number#35L, 200), ENSURE_REQUIREMENTS, [plan_id=152]
                  :     :     :     :     :     :                 +- Filter (((isnotnull(sr_customer_sk#29) AND isnotnull(sr_item_sk#28)) AND isnotnull(sr_ticket_number#35L)) AND isnotnull(sr_returned_date_sk#26))
                  :     :     :     :     :     :                    +- FileScan parquet tpcds_1000_parquet.store_returns[sr_returned_date_sk#26,sr_item_sk#28,sr_customer_sk#29,sr_ticket_number#35L,sr_return_quantity#36] Batched: true, DataFilters: [isnotnull(sr_customer_sk#29), isnotnull(sr_item_sk#28), isnotnull(sr_ticket_number#35L), isnotnu..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/store_ret..., PartitionFilters: [], PushedFilters: [IsNotNull(sr_customer_sk), IsNotNull(sr_item_sk), IsNotNull(sr_ticket_number), IsNotNull(sr_retu..., ReadSchema: struct<sr_returned_date_sk:int,sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:bigint,sr_retur...
                  :     :     :     :     :     +- Sort [cs_bill_customer_sk#49 ASC NULLS FIRST, cs_item_sk#61 ASC NULLS FIRST], false, 0
                  :     :     :     :     :        +- Exchange hashpartitioning(cs_bill_customer_sk#49, cs_item_sk#61, 200), ENSURE_REQUIREMENTS, [plan_id=160]
                  :     :     :     :     :           +- Filter ((isnotnull(cs_bill_customer_sk#49) AND isnotnull(cs_item_sk#61)) AND isnotnull(cs_sold_date_sk#46))
                  :     :     :     :     :              +- FileScan parquet tpcds_1000_parquet.catalog_sales[cs_sold_date_sk#46,cs_bill_customer_sk#49,cs_item_sk#61,cs_quantity#64] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#49), isnotnull(cs_item_sk#61), isnotnull(cs_sold_date_sk#46)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/catalog_s..., PartitionFilters: [], PushedFilters: [IsNotNull(cs_bill_customer_sk), IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int>
                  :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=166]
                  :     :     :     :        +- Project [d_date_sk#80]
                  :     :     :     :           +- Filter ((((isnotnull(d_moy#88) AND isnotnull(d_year#86)) AND (d_moy#88 = 9)) AND (d_year#86 = 1999)) AND isnotnull(d_date_sk#80))
                  :     :     :     :              +- FileScan parquet tpcds_1000_parquet.date_dim[d_date_sk#80,d_year#86,d_moy#88] Batched: true, DataFilters: [isnotnull(d_moy#88), isnotnull(d_year#86), (d_moy#88 = 9), (d_year#86 = 1999), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,9), EqualTo(d_year,1999), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                  :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=170]
                  :     :     :        +- Project [d_date_sk#159]
                  :     :     :           +- Filter (((((isnotnull(d_moy#167) AND isnotnull(d_year#165)) AND (d_moy#167 >= 9)) AND (d_moy#167 <= 12)) AND (d_year#165 = 1999)) AND isnotnull(d_date_sk#159))
                  :     :     :              +- FileScan parquet tpcds_1000_parquet.date_dim[d_date_sk#159,d_year#165,d_moy#167] Batched: true, DataFilters: [isnotnull(d_moy#167), isnotnull(d_year#165), (d_moy#167 >= 9), (d_moy#167 <= 12), (d_year#165 = ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), GreaterThanOrEqual(d_moy,9), LessThanOrEqual(d_moy,12), Equ..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=174]
                  :     :        +- Project [d_date_sk#187]
                  :     :           +- Filter (d_year#193 IN (1999,2000,2001) AND isnotnull(d_date_sk#187))
                  :     :              +- FileScan parquet tpcds_1000_parquet.date_dim[d_date_sk#187,d_year#193] Batched: true, DataFilters: [d_year#193 IN (1999,2000,2001), isnotnull(d_date_sk#187)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=178]
                  :        +- Filter isnotnull(s_store_sk#108)
                  :           +- FileScan parquet tpcds_1000_parquet.store[s_store_sk#108,s_store_id#109,s_store_name#113] Batched: true, DataFilters: [isnotnull(s_store_sk#108)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string,s_store_name:string>
                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=182]
                     +- Filter isnotnull(i_item_sk#137)
                        +- FileScan parquet tpcds_1000_parquet.item[i_item_sk#137,i_item_id#138,i_item_desc#141] Batched: true, DataFilters: [isnotnull(i_item_sk#137)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string>


