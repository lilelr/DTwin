// The Round Table
digraph {
	0 [label="nodeID(0) "]
	1 [label="nodeID(1) TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#70 ASC NULLS FIRST,c_salutation#76 ASC NULLS FIRST,c_first_name#77 ASC NULLS FIRST,c_last_name#78 ASC NULLS FIRST,c_preferred_cust_flag#79 ASC NULLS FIRST,c_birth_day#80 ASC NULLS FIRST,c_birth_month#81 ASC NULLS FIRST,c_birth_year#82 ASC NULLS FIRST,c_birth_country#83 ASC NULLS FIRST,c_login#84 ASC NULLS FIRST,c_email_address#85 ASC NULLS FIRST,c_last_review_date#86 ASC NULLS FIRST,ctr_total_return#3 ASC NULLS FIRST], output=[c_customer_id#70,c_salutation#76,c_first_name#77,c_last_name#78,c_preferred_cust_flag#79,c_birth_day#80,c_birth_month#81,c_birth_year#82,c_birth_country#83,c_login#84,c_email_address#85,c_last_review_date#86,ctr_total_return#3])"]
	2 [label="nodeID(2) Project [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#3]"]
	3 [label="nodeID(3) BroadcastHashJoin [c_current_addr_sk#73], [ca_address_sk#87], Inner, BuildRight, false"]
	4 [label="nodeID(4) Project [ctr_total_return#3, c_customer_id#70, c_current_addr_sk#73, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86]"]
	5 [label="nodeID(5) SortMergeJoin [ctr_customer_sk#1], [c_customer_sk#69], Inner"]
	6 [label="nodeID(6) Sort [ctr_customer_sk#1 ASC NULLS FIRST], false, 0"]
	7 [label="nodeID(7) Exchange hashpartitioning(ctr_customer_sk#1, 200), ENSURE_REQUIREMENTS, [plan_id=215]"]
	8 [label="nodeID(8) Project [ctr_customer_sk#1, ctr_total_return#3]"]
	9 [label="nodeID(9) SortMergeJoin [ctr_state#2], [ctr_state#2#121], Inner, (ctr_total_return#3 > (avg(ctr_total_return) * 1.2)#105)"]
	10 [label="nodeID(10) Sort [ctr_state#2 ASC NULLS FIRST], false, 0"]
	11 [label="nodeID(11) Exchange hashpartitioning(ctr_state#2, 200), ENSURE_REQUIREMENTS, [plan_id=208]"]
	12 [label="nodeID(12) Filter isnotnull(ctr_total_return#3)"]
	13 [label="nodeID(13) HashAggregate(keys=[wr_returning_customer_sk#11, ca_state#64], functions=[sum(wr_return_amt#19)])"]
	14 [label="nodeID(14) Exchange hashpartitioning(wr_returning_customer_sk#11, ca_state#64, 200), ENSURE_REQUIREMENTS, [plan_id=187]"]
	15 [label="nodeID(15) HashAggregate(keys=[wr_returning_customer_sk#11, ca_state#64], functions=[partial_sum(wr_return_amt#19)])"]
	16 [label="nodeID(16) Project [wr_returning_customer_sk#11, wr_return_amt#19, ca_state#64]"]
	17 [label="nodeID(17) BroadcastHashJoin [wr_returning_addr_sk#14], [ca_address_sk#56], Inner, BuildRight, false"]
	18 [label="nodeID(18) Project [wr_returning_customer_sk#11, wr_returning_addr_sk#14, wr_return_amt#19]"]
	19 [label="nodeID(19) BroadcastHashJoin [wr_returned_date_sk#4], [d_date_sk#28], Inner, BuildRight, false"]
	20 [label="nodeID(20) Filter ((isnotnull(wr_returned_date_sk#4) AND isnotnull(wr_returning_addr_sk#14)) AND isnotnull(wr_returning_customer_sk#11))"]
	21 [label="nodeID(21) FileScan parquet tpcds_100_parquet.web_returns[wr_returned_date_sk#4,wr_returning_customer_sk#11,wr_returning_addr_sk#14,wr_return_amt#19]"]
	22 [label="nodeID(22) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=178]"]
	23 [label="nodeID(23) Project [d_date_sk#28]"]
	24 [label="nodeID(24) Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))"]
	25 [label="nodeID(25) FileScan parquet tpcds_100_parquet.date_dim[d_date_sk#28,d_year#34]"]
	26 [label="nodeID(26) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=182]"]
	27 [label="nodeID(27) Filter (isnotnull(ca_address_sk#56) AND isnotnull(ca_state#64))"]
	28 [label="nodeID(28) FileScan parquet tpcds_100_parquet.customer_address[ca_address_sk#56,ca_state#64]"]
	29 [label="nodeID(29) Sort [ctr_state#2#121 ASC NULLS FIRST], false, 0"]
	30 [label="nodeID(30) Filter isnotnull((avg(ctr_total_return) * 1.2)#105)"]
	31 [label="nodeID(31) HashAggregate(keys=[ctr_state#2], functions=[avg(ctr_total_return#3)])"]
	32 [label="nodeID(32) Exchange hashpartitioning(ctr_state#2, 200), ENSURE_REQUIREMENTS, [plan_id=203]"]
	33 [label="nodeID(33) HashAggregate(keys=[ctr_state#2], functions=[partial_avg(ctr_total_return#3)])"]
	34 [label="nodeID(34) HashAggregate(keys=[wr_returning_customer_sk#11, ca_state#64], functions=[sum(wr_return_amt#19)])"]
	35 [label="nodeID(35) Exchange hashpartitioning(wr_returning_customer_sk#11, ca_state#64, 200), ENSURE_REQUIREMENTS, [plan_id=199]"]
	36 [label="nodeID(36) HashAggregate(keys=[wr_returning_customer_sk#11, ca_state#64], functions=[partial_sum(wr_return_amt#19)])"]
	37 [label="nodeID(37) Project [wr_returning_customer_sk#11, wr_return_amt#19, ca_state#64]"]
	38 [label="nodeID(38) BroadcastHashJoin [wr_returning_addr_sk#14], [ca_address_sk#56], Inner, BuildRight, false"]
	39 [label="nodeID(39) Project [wr_returning_customer_sk#11, wr_returning_addr_sk#14, wr_return_amt#19]"]
	40 [label="nodeID(40) BroadcastHashJoin [wr_returned_date_sk#4], [d_date_sk#28], Inner, BuildRight, false"]
	41 [label="nodeID(41) Filter (isnotnull(wr_returned_date_sk#4) AND isnotnull(wr_returning_addr_sk#14))"]
	42 [label="nodeID(42) FileScan parquet tpcds_100_parquet.web_returns[wr_returned_date_sk#4,wr_returning_customer_sk#11,wr_returning_addr_sk#14,wr_return_amt#19]"]
	43 [label="nodeID(43) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=190]"]
	44 [label="nodeID(44) Project [d_date_sk#28]"]
	45 [label="nodeID(45) Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))"]
	46 [label="nodeID(46) FileScan parquet tpcds_100_parquet.date_dim[d_date_sk#28,d_year#34]"]
	47 [label="nodeID(47) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=194]"]
	48 [label="nodeID(48) Filter (isnotnull(ca_address_sk#56) AND isnotnull(ca_state#64))"]
	49 [label="nodeID(49) FileScan parquet tpcds_100_parquet.customer_address[ca_address_sk#56,ca_state#64]"]
	50 [label="nodeID(50) Sort [c_customer_sk#69 ASC NULLS FIRST], false, 0"]
	51 [label="nodeID(51) Exchange hashpartitioning(c_customer_sk#69, 200), ENSURE_REQUIREMENTS, [plan_id=216]"]
	52 [label="nodeID(52) Filter (isnotnull(c_customer_sk#69) AND isnotnull(c_current_addr_sk#73))"]
	53 [label="nodeID(53) FileScan parquet tpcds_100_parquet.customer[c_customer_sk#69,c_customer_id#70,c_current_addr_sk#73,c_salutation#76,c_first_name#77,c_last_name#78,c_preferred_cust_flag#79,c_birth_day#80,c_birth_month#81,c_birth_year#82,c_birth_country#83,c_login#84,c_email_address#85,c_last_review_date#86]"]
	54 [label="nodeID(54) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=222]"]
	55 [label="nodeID(55) Project [ca_address_sk#87]"]
	56 [label="nodeID(56) Filter ((isnotnull(ca_state#95) AND (ca_state#95 = GA)) AND isnotnull(ca_address_sk#87))"]
	57 [label="nodeID(57) FileScan parquet tpcds_100_parquet.customer_address[ca_address_sk#87,ca_state#95]"]
	1 -> 0
	2 -> 1
	3 -> 2
	4 -> 3
	5 -> 4
	6 -> 5
	7 -> 6
	8 -> 7
	9 -> 8
	10 -> 9
	11 -> 10
	12 -> 11
	13 -> 12
	14 -> 13
	15 -> 14
	16 -> 15
	17 -> 16
	18 -> 17
	19 -> 18
	20 -> 19
	21 -> 20
	22 -> 19
	23 -> 22
	24 -> 23
	25 -> 24
	26 -> 17
	27 -> 26
	28 -> 27
	29 -> 9
	30 -> 29
	31 -> 30
	32 -> 31
	33 -> 32
	34 -> 33
	35 -> 34
	36 -> 35
	37 -> 36
	38 -> 37
	39 -> 38
	40 -> 39
	41 -> 40
	42 -> 41
	43 -> 40
	44 -> 43
	45 -> 44
	46 -> 45
	47 -> 38
	48 -> 47
	49 -> 48
	50 -> 5
	51 -> 50
	52 -> 51
	53 -> 52
	54 -> 3
	55 -> 54
	56 -> 55
	57 -> 56
}
