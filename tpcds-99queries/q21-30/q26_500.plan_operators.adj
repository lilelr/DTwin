// The Round Table
digraph {
	0 [label="nodeID(0) "]
	1 [label="nodeID(1) HashAggregate(keys=[i_item_id#76], functions=[avg(cs_quantity#22), avg(cs_list_price#24), avg(cs_coupon_amt#31), avg(cs_sales_price#25)])"]
	2 [label="nodeID(2) Exchange hashpartitioning(i_item_id#76, 200), ENSURE_REQUIREMENTS, [plan_id=113]"]
	3 [label="nodeID(3) HashAggregate(keys=[i_item_id#76], functions=[partial_avg(cs_quantity#22), partial_avg(cs_list_price#24), partial_avg(cs_coupon_amt#31), partial_avg(cs_sales_price#25)])"]
	4 [label="nodeID(4) Project [cs_quantity#22, cs_list_price#24, cs_sales_price#25, cs_coupon_amt#31, i_item_id#76]"]
	5 [label="nodeID(5) BroadcastHashJoin [cs_promo_sk#20], [p_promo_sk#97], Inner, BuildRight, false"]
	6 [label="nodeID(6) Project [cs_promo_sk#20, cs_quantity#22, cs_list_price#24, cs_sales_price#25, cs_coupon_amt#31, i_item_id#76]"]
	7 [label="nodeID(7) BroadcastHashJoin [cs_item_sk#19], [i_item_sk#75], Inner, BuildRight, false"]
	8 [label="nodeID(8) Project [cs_item_sk#19, cs_promo_sk#20, cs_quantity#22, cs_list_price#24, cs_sales_price#25, cs_coupon_amt#31]"]
	9 [label="nodeID(9) BroadcastHashJoin [cs_sold_date_sk#4], [d_date_sk#47], Inner, BuildRight, false"]
	10 [label="nodeID(10) Project [cs_sold_date_sk#4, cs_item_sk#19, cs_promo_sk#20, cs_quantity#22, cs_list_price#24, cs_sales_price#25, cs_coupon_amt#31]"]
	11 [label="nodeID(11) BroadcastHashJoin [cs_bill_cdemo_sk#8], [cd_demo_sk#38], Inner, BuildRight, false"]
	12 [label="nodeID(12) Filter (((isnotnull(cs_bill_cdemo_sk#8) AND isnotnull(cs_sold_date_sk#4)) AND isnotnull(cs_item_sk#19)) AND isnotnull(cs_promo_sk#20))"]
	13 [label="nodeID(13) FileScan parquet tpcds_500_parquet.catalog_sales[cs_sold_date_sk#4,cs_bill_cdemo_sk#8,cs_item_sk#19,cs_promo_sk#20,cs_quantity#22,cs_list_price#24,cs_sales_price#25,cs_coupon_amt#31"]
	14 [label="nodeID(14) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=96]"]
	15 [label="nodeID(15) Project [cd_demo_sk#38]"]
	16 [label="nodeID(16) Filter ((((((isnotnull(cd_gender#39) AND isnotnull(cd_marital_status#40)) AND isnotnull(cd_education_status#41)) AND (cd_gender#39 = M)) AND (cd_marital_status#40 = S)) AND (cd_education_status#41 = College)) AND isnotnull(cd_demo_sk#38))"]
	17 [label="nodeID(17) FileScan parquet tpcds_500_parquet.customer_demographics[cd_demo_sk#38,cd_gender#39,cd_marital_status#40,cd_education_status#41"]
	18 [label="nodeID(18) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=100]"]
	19 [label="nodeID(19) Project [d_date_sk#47]"]
	20 [label="nodeID(20) Filter ((isnotnull(d_year#53) AND (d_year#53 = 2000)) AND isnotnull(d_date_sk#47))"]
	21 [label="nodeID(21) FileScan parquet tpcds_500_parquet.date_dim[d_date_sk#47,d_year#53"]
	22 [label="nodeID(22) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=104]"]
	23 [label="nodeID(23) Filter isnotnull(i_item_sk#75)"]
	24 [label="nodeID(24) FileScan parquet tpcds_500_parquet.item[i_item_sk#75,i_item_id#76"]
	25 [label="nodeID(25) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=108]"]
	26 [label="nodeID(26) Project [p_promo_sk#97]"]
	27 [label="nodeID(27) Filter (((p_channel_email#106 = N) OR (p_channel_event#111 = N)) AND isnotnull(p_promo_sk#97))"]
	28 [label="nodeID(28) FileScan parquet tpcds_500_parquet.promotion[p_promo_sk#97,p_channel_email#106,p_channel_event#111"]
	1 -> 0
	2 -> 1
	3 -> 2
	4 -> 3
	5 -> 4
	6 -> 5
	7 -> 6
	8 -> 7
	9 -> 8
	10 -> 9
	11 -> 10
	12 -> 11
	13 -> 12
	14 -> 11
	15 -> 14
	16 -> 15
	17 -> 16
	18 -> 9
	19 -> 18
	20 -> 19
	21 -> 20
	22 -> 7
	23 -> 22
	24 -> 23
	25 -> 5
	26 -> 25
	27 -> 26
	28 -> 27
}
