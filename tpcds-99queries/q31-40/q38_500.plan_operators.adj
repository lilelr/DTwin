// The Round Table
digraph {
	0 [label="nodeID(0) "]
	1 [label="nodeID(1) Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=246]"]
	2 [label="nodeID(2) HashAggregate(keys=[], functions=[partial_count(1)])"]
	3 [label="nodeID(3) Project"]
	4 [label="nodeID(4) SortMergeJoin [coalesce(c_last_name#61, ), isnull(c_last_name#61), coalesce(c_first_name#60, ), isnull(c_first_name#60), coalesce(d_date#26, ), isnull(d_date#26)], [coalesce(c_last_name#221, ), isnull(c_last_name#221), coalesce(c_first_name#220, ), isnull(c_first_name#220), coalesce(d_date#186, ), isnull(d_date#186)], LeftSemi"]
	5 [label="nodeID(5) SortMergeJoin [coalesce(c_last_name#61, ), isnull(c_last_name#61), coalesce(c_first_name#60, ), isnull(c_first_name#60), coalesce(d_date#26, ), isnull(d_date#26)], [coalesce(c_last_name#175, ), isnull(c_last_name#175), coalesce(c_first_name#174, ), isnull(c_first_name#174), coalesce(d_date#140, ), isnull(d_date#140)], LeftSemi"]
	6 [label="nodeID(6) Sort [coalesce(c_last_name#61, ) ASC NULLS FIRST, isnull(c_last_name#61) ASC NULLS FIRST, coalesce(c_first_name#60, ) ASC NULLS FIRST, isnull(c_first_name#60) ASC NULLS FIRST, coalesce(d_date#26, ) ASC NULLS FIRST, isnull(d_date#26) ASC NULLS FIRST], false, 0"]
	7 [label="nodeID(7) Exchange hashpartitioning(coalesce(c_last_name#61, ), isnull(c_last_name#61), coalesce(c_first_name#60, ), isnull(c_first_name#60), coalesce(d_date#26, ), isnull(d_date#26), 200), ENSURE_REQUIREMENTS, [plan_id=218]"]
	8 [label="nodeID(8) HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[])"]
	9 [label="nodeID(9) Exchange hashpartitioning(c_last_name#61, c_first_name#60, d_date#26, 200), ENSURE_REQUIREMENTS, [plan_id=199]"]
	10 [label="nodeID(10) HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[])"]
	11 [label="nodeID(11) Project [c_last_name#61, c_first_name#60, d_date#26]"]
	12 [label="nodeID(12) SortMergeJoin [ss_customer_sk#4], [c_customer_sk#52], Inner"]
	13 [label="nodeID(13) Sort [ss_customer_sk#4 ASC NULLS FIRST], false, 0"]
	14 [label="nodeID(14) Exchange hashpartitioning(ss_customer_sk#4, 200), ENSURE_REQUIREMENTS, [plan_id=191]"]
	15 [label="nodeID(15) Project [ss_customer_sk#4, d_date#26]"]
	16 [label="nodeID(16) BroadcastHashJoin [ss_sold_date_sk#1], [d_date_sk#24], Inner, BuildRight, false"]
	17 [label="nodeID(17) Filter (isnotnull(ss_sold_date_sk#1) AND isnotnull(ss_customer_sk#4))"]
	18 [label="nodeID(18) FileScan parquet tpcds_500_parquet.store_sales[ss_sold_date_sk#1,ss_customer_sk#4"]
	19 [label="nodeID(19) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=186]"]
	20 [label="nodeID(20) Project [d_date_sk#24, d_date#26]"]
	21 [label="nodeID(21) Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1200)) AND (d_month_seq#27 <= 1211)) AND isnotnull(d_date_sk#24))"]
	22 [label="nodeID(22) FileScan parquet tpcds_500_parquet.date_dim[d_date_sk#24,d_date#26,d_month_seq#27"]
	23 [label="nodeID(23) Sort [c_customer_sk#52 ASC NULLS FIRST], false, 0"]
	24 [label="nodeID(24) Exchange hashpartitioning(c_customer_sk#52, 200), ENSURE_REQUIREMENTS, [plan_id=192]"]
	25 [label="nodeID(25) Filter isnotnull(c_customer_sk#52)"]
	26 [label="nodeID(26) FileScan parquet tpcds_500_parquet.customer[c_customer_sk#52,c_first_name#60,c_last_name#61"]
	27 [label="nodeID(27) Sort [coalesce(c_last_name#175, ) ASC NULLS FIRST, isnull(c_last_name#175) ASC NULLS FIRST, coalesce(c_first_name#174, ) ASC NULLS FIRST, isnull(c_first_name#174) ASC NULLS FIRST, coalesce(d_date#140, ) ASC NULLS FIRST, isnull(d_date#140) ASC NULLS FIRST], false, 0"]
	28 [label="nodeID(28) Exchange hashpartitioning(coalesce(c_last_name#175, ), isnull(c_last_name#175), coalesce(c_first_name#174, ), isnull(c_first_name#174), coalesce(d_date#140, ), isnull(d_date#140), 200), ENSURE_REQUIREMENTS, [plan_id=219]"]
	29 [label="nodeID(29) HashAggregate(keys=[c_last_name#175, c_first_name#174, d_date#140], functions=[])"]
	30 [label="nodeID(30) Exchange hashpartitioning(c_last_name#175, c_first_name#174, d_date#140, 200), ENSURE_REQUIREMENTS, [plan_id=214]"]
	31 [label="nodeID(31) HashAggregate(keys=[c_last_name#175, c_first_name#174, d_date#140], functions=[])"]
	32 [label="nodeID(32) Project [c_last_name#175, c_first_name#174, d_date#140]"]
	33 [label="nodeID(33) SortMergeJoin [cs_bill_customer_sk#73], [c_customer_sk#166], Inner"]
	34 [label="nodeID(34) Sort [cs_bill_customer_sk#73 ASC NULLS FIRST], false, 0"]
	35 [label="nodeID(35) Exchange hashpartitioning(cs_bill_customer_sk#73, 200), ENSURE_REQUIREMENTS, [plan_id=206]"]
	36 [label="nodeID(36) Project [cs_bill_customer_sk#73, d_date#140]"]
	37 [label="nodeID(37) BroadcastHashJoin [cs_sold_date_sk#70], [d_date_sk#138], Inner, BuildRight, false"]
	38 [label="nodeID(38) Filter (isnotnull(cs_sold_date_sk#70) AND isnotnull(cs_bill_customer_sk#73))"]
	39 [label="nodeID(39) FileScan parquet tpcds_500_parquet.catalog_sales[cs_sold_date_sk#70,cs_bill_customer_sk#73"]
	40 [label="nodeID(40) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=201]"]
	41 [label="nodeID(41) Project [d_date_sk#138, d_date#140]"]
	42 [label="nodeID(42) Filter (((isnotnull(d_month_seq#141) AND (d_month_seq#141 >= 1200)) AND (d_month_seq#141 <= 1211)) AND isnotnull(d_date_sk#138))"]
	43 [label="nodeID(43) FileScan parquet tpcds_500_parquet.date_dim[d_date_sk#138,d_date#140,d_month_seq#141"]
	44 [label="nodeID(44) Sort [c_customer_sk#166 ASC NULLS FIRST], false, 0"]
	45 [label="nodeID(45) Exchange hashpartitioning(c_customer_sk#166, 200), ENSURE_REQUIREMENTS, [plan_id=207]"]
	46 [label="nodeID(46) Filter isnotnull(c_customer_sk#166)"]
	47 [label="nodeID(47) FileScan parquet tpcds_500_parquet.customer[c_customer_sk#166,c_first_name#174,c_last_name#175"]
	48 [label="nodeID(48) Sort [coalesce(c_last_name#221, ) ASC NULLS FIRST, isnull(c_last_name#221) ASC NULLS FIRST, coalesce(c_first_name#220, ) ASC NULLS FIRST, isnull(c_first_name#220) ASC NULLS FIRST, coalesce(d_date#186, ) ASC NULLS FIRST, isnull(d_date#186) ASC NULLS FIRST], false, 0"]
	49 [label="nodeID(49) Exchange hashpartitioning(coalesce(c_last_name#221, ), isnull(c_last_name#221), coalesce(c_first_name#220, ), isnull(c_first_name#220), coalesce(d_date#186, ), isnull(d_date#186), 200), ENSURE_REQUIREMENTS, [plan_id=240]"]
	50 [label="nodeID(50) HashAggregate(keys=[c_last_name#221, c_first_name#220, d_date#186], functions=[])"]
	51 [label="nodeID(51) Exchange hashpartitioning(c_last_name#221, c_first_name#220, d_date#186, 200), ENSURE_REQUIREMENTS, [plan_id=236]"]
	52 [label="nodeID(52) HashAggregate(keys=[c_last_name#221, c_first_name#220, d_date#186], functions=[])"]
	53 [label="nodeID(53) Project [c_last_name#221, c_first_name#220, d_date#186]"]
	54 [label="nodeID(54) SortMergeJoin [ws_bill_customer_sk#108], [c_customer_sk#212], Inner"]
	55 [label="nodeID(55) Sort [ws_bill_customer_sk#108 ASC NULLS FIRST], false, 0"]
	56 [label="nodeID(56) Exchange hashpartitioning(ws_bill_customer_sk#108, 200), ENSURE_REQUIREMENTS, [plan_id=228]"]
	57 [label="nodeID(57) Project [ws_bill_customer_sk#108, d_date#186]"]
	58 [label="nodeID(58) BroadcastHashJoin [ws_sold_date_sk#104], [d_date_sk#184], Inner, BuildRight, false"]
	59 [label="nodeID(59) Filter (isnotnull(ws_sold_date_sk#104) AND isnotnull(ws_bill_customer_sk#108))"]
	60 [label="nodeID(60) FileScan parquet tpcds_500_parquet.web_sales[ws_sold_date_sk#104,ws_bill_customer_sk#108"]
	61 [label="nodeID(61) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=223]"]
	62 [label="nodeID(62) Project [d_date_sk#184, d_date#186]"]
	63 [label="nodeID(63) Filter (((isnotnull(d_month_seq#187) AND (d_month_seq#187 >= 1200)) AND (d_month_seq#187 <= 1211)) AND isnotnull(d_date_sk#184))"]
	64 [label="nodeID(64) FileScan parquet tpcds_500_parquet.date_dim[d_date_sk#184,d_date#186,d_month_seq#187"]
	65 [label="nodeID(65) Sort [c_customer_sk#212 ASC NULLS FIRST], false, 0"]
	66 [label="nodeID(66) Exchange hashpartitioning(c_customer_sk#212, 200), ENSURE_REQUIREMENTS, [plan_id=229]"]
	67 [label="nodeID(67) Filter isnotnull(c_customer_sk#212)"]
	68 [label="nodeID(68) FileScan parquet tpcds_500_parquet.customer[c_customer_sk#212,c_first_name#220,c_last_name#221"]
	1 -> 0
	2 -> 1
	3 -> 2
	4 -> 3
	5 -> 4
	6 -> 5
	7 -> 6
	8 -> 7
	9 -> 8
	10 -> 9
	11 -> 10
	12 -> 11
	13 -> 12
	14 -> 13
	15 -> 14
	16 -> 15
	17 -> 16
	18 -> 17
	19 -> 16
	20 -> 19
	21 -> 20
	22 -> 21
	23 -> 12
	24 -> 23
	25 -> 24
	26 -> 25
	27 -> 5
	28 -> 27
	29 -> 28
	30 -> 29
	31 -> 30
	32 -> 31
	33 -> 32
	34 -> 33
	35 -> 34
	36 -> 35
	37 -> 36
	38 -> 37
	39 -> 38
	40 -> 37
	41 -> 40
	42 -> 41
	43 -> 42
	44 -> 33
	45 -> 44
	46 -> 45
	47 -> 46
	48 -> 4
	49 -> 48
	50 -> 49
	51 -> 50
	52 -> 51
	53 -> 52
	54 -> 53
	55 -> 54
	56 -> 55
	57 -> 56
	58 -> 57
	59 -> 58
	60 -> 59
	61 -> 58
	62 -> 61
	63 -> 62
	64 -> 63
	65 -> 54
	66 -> 65
	67 -> 66
	68 -> 67
}
