== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- HashAggregate(keys=[], functions=[count(1)])
   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=246]
      +- HashAggregate(keys=[], functions=[partial_count(1)])
         +- Project
            +- SortMergeJoin [coalesce(c_last_name#61, ), isnull(c_last_name#61), coalesce(c_first_name#60, ), isnull(c_first_name#60), coalesce(d_date#26, ), isnull(d_date#26)], [coalesce(c_last_name#221, ), isnull(c_last_name#221), coalesce(c_first_name#220, ), isnull(c_first_name#220), coalesce(d_date#186, ), isnull(d_date#186)], LeftSemi
               :- SortMergeJoin [coalesce(c_last_name#61, ), isnull(c_last_name#61), coalesce(c_first_name#60, ), isnull(c_first_name#60), coalesce(d_date#26, ), isnull(d_date#26)], [coalesce(c_last_name#175, ), isnull(c_last_name#175), coalesce(c_first_name#174, ), isnull(c_first_name#174), coalesce(d_date#140, ), isnull(d_date#140)], LeftSemi
               :  :- Sort [coalesce(c_last_name#61, ) ASC NULLS FIRST, isnull(c_last_name#61) ASC NULLS FIRST, coalesce(c_first_name#60, ) ASC NULLS FIRST, isnull(c_first_name#60) ASC NULLS FIRST, coalesce(d_date#26, ) ASC NULLS FIRST, isnull(d_date#26) ASC NULLS FIRST], false, 0
               :  :  +- Exchange hashpartitioning(coalesce(c_last_name#61, ), isnull(c_last_name#61), coalesce(c_first_name#60, ), isnull(c_first_name#60), coalesce(d_date#26, ), isnull(d_date#26), 200), ENSURE_REQUIREMENTS, [plan_id=218]
               :  :     +- HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[])
               :  :        +- Exchange hashpartitioning(c_last_name#61, c_first_name#60, d_date#26, 200), ENSURE_REQUIREMENTS, [plan_id=199]
               :  :           +- HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[])
               :  :              +- Project [c_last_name#61, c_first_name#60, d_date#26]
               :  :                 +- SortMergeJoin [ss_customer_sk#4], [c_customer_sk#52], Inner
               :  :                    :- Sort [ss_customer_sk#4 ASC NULLS FIRST], false, 0
               :  :                    :  +- Exchange hashpartitioning(ss_customer_sk#4, 200), ENSURE_REQUIREMENTS, [plan_id=191]
               :  :                    :     +- Project [ss_customer_sk#4, d_date#26]
               :  :                    :        +- BroadcastHashJoin [ss_sold_date_sk#1], [d_date_sk#24], Inner, BuildRight, false
               :  :                    :           :- Filter (isnotnull(ss_sold_date_sk#1) AND isnotnull(ss_customer_sk#4))
               :  :                    :           :  +- FileScan parquet tpcds_100_parquet.store_sales[ss_sold_date_sk#1,ss_customer_sk#4] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#1), isnotnull(ss_customer_sk#4)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int>
               :  :                    :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=186]
               :  :                    :              +- Project [d_date_sk#24, d_date#26]
               :  :                    :                 +- Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1200)) AND (d_month_seq#27 <= 1211)) AND isnotnull(d_date_sk#24))
               :  :                    :                    +- FileScan parquet tpcds_100_parquet.date_dim[d_date_sk#24,d_date#26,d_month_seq#27] Batched: true, DataFilters: [isnotnull(d_month_seq#27), (d_month_seq#27 >= 1200), (d_month_seq#27 <= 1211), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211),..., ReadSchema: struct<d_date_sk:int,d_date:string,d_month_seq:int>
               :  :                    +- Sort [c_customer_sk#52 ASC NULLS FIRST], false, 0
               :  :                       +- Exchange hashpartitioning(c_customer_sk#52, 200), ENSURE_REQUIREMENTS, [plan_id=192]
               :  :                          +- Filter isnotnull(c_customer_sk#52)
               :  :                             +- FileScan parquet tpcds_100_parquet.customer[c_customer_sk#52,c_first_name#60,c_last_name#61] Batched: true, DataFilters: [isnotnull(c_customer_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>
               :  +- Sort [coalesce(c_last_name#175, ) ASC NULLS FIRST, isnull(c_last_name#175) ASC NULLS FIRST, coalesce(c_first_name#174, ) ASC NULLS FIRST, isnull(c_first_name#174) ASC NULLS FIRST, coalesce(d_date#140, ) ASC NULLS FIRST, isnull(d_date#140) ASC NULLS FIRST], false, 0
               :     +- Exchange hashpartitioning(coalesce(c_last_name#175, ), isnull(c_last_name#175), coalesce(c_first_name#174, ), isnull(c_first_name#174), coalesce(d_date#140, ), isnull(d_date#140), 200), ENSURE_REQUIREMENTS, [plan_id=219]
               :        +- HashAggregate(keys=[c_last_name#175, c_first_name#174, d_date#140], functions=[])
               :           +- Exchange hashpartitioning(c_last_name#175, c_first_name#174, d_date#140, 200), ENSURE_REQUIREMENTS, [plan_id=214]
               :              +- HashAggregate(keys=[c_last_name#175, c_first_name#174, d_date#140], functions=[])
               :                 +- Project [c_last_name#175, c_first_name#174, d_date#140]
               :                    +- SortMergeJoin [cs_bill_customer_sk#73], [c_customer_sk#166], Inner
               :                       :- Sort [cs_bill_customer_sk#73 ASC NULLS FIRST], false, 0
               :                       :  +- Exchange hashpartitioning(cs_bill_customer_sk#73, 200), ENSURE_REQUIREMENTS, [plan_id=206]
               :                       :     +- Project [cs_bill_customer_sk#73, d_date#140]
               :                       :        +- BroadcastHashJoin [cs_sold_date_sk#70], [d_date_sk#138], Inner, BuildRight, false
               :                       :           :- Filter (isnotnull(cs_sold_date_sk#70) AND isnotnull(cs_bill_customer_sk#73))
               :                       :           :  +- FileScan parquet tpcds_100_parquet.catalog_sales[cs_sold_date_sk#70,cs_bill_customer_sk#73] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#70), isnotnull(cs_bill_customer_sk#73)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/catalog_sa..., PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int>
               :                       :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=201]
               :                       :              +- Project [d_date_sk#138, d_date#140]
               :                       :                 +- Filter (((isnotnull(d_month_seq#141) AND (d_month_seq#141 >= 1200)) AND (d_month_seq#141 <= 1211)) AND isnotnull(d_date_sk#138))
               :                       :                    +- FileScan parquet tpcds_100_parquet.date_dim[d_date_sk#138,d_date#140,d_month_seq#141] Batched: true, DataFilters: [isnotnull(d_month_seq#141), (d_month_seq#141 >= 1200), (d_month_seq#141 <= 1211), isnotnull(d_da..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211),..., ReadSchema: struct<d_date_sk:int,d_date:string,d_month_seq:int>
               :                       +- Sort [c_customer_sk#166 ASC NULLS FIRST], false, 0
               :                          +- Exchange hashpartitioning(c_customer_sk#166, 200), ENSURE_REQUIREMENTS, [plan_id=207]
               :                             +- Filter isnotnull(c_customer_sk#166)
               :                                +- FileScan parquet tpcds_100_parquet.customer[c_customer_sk#166,c_first_name#174,c_last_name#175] Batched: true, DataFilters: [isnotnull(c_customer_sk#166)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>
               +- Sort [coalesce(c_last_name#221, ) ASC NULLS FIRST, isnull(c_last_name#221) ASC NULLS FIRST, coalesce(c_first_name#220, ) ASC NULLS FIRST, isnull(c_first_name#220) ASC NULLS FIRST, coalesce(d_date#186, ) ASC NULLS FIRST, isnull(d_date#186) ASC NULLS FIRST], false, 0
                  +- Exchange hashpartitioning(coalesce(c_last_name#221, ), isnull(c_last_name#221), coalesce(c_first_name#220, ), isnull(c_first_name#220), coalesce(d_date#186, ), isnull(d_date#186), 200), ENSURE_REQUIREMENTS, [plan_id=240]
                     +- HashAggregate(keys=[c_last_name#221, c_first_name#220, d_date#186], functions=[])
                        +- Exchange hashpartitioning(c_last_name#221, c_first_name#220, d_date#186, 200), ENSURE_REQUIREMENTS, [plan_id=236]
                           +- HashAggregate(keys=[c_last_name#221, c_first_name#220, d_date#186], functions=[])
                              +- Project [c_last_name#221, c_first_name#220, d_date#186]
                                 +- SortMergeJoin [ws_bill_customer_sk#108], [c_customer_sk#212], Inner
                                    :- Sort [ws_bill_customer_sk#108 ASC NULLS FIRST], false, 0
                                    :  +- Exchange hashpartitioning(ws_bill_customer_sk#108, 200), ENSURE_REQUIREMENTS, [plan_id=228]
                                    :     +- Project [ws_bill_customer_sk#108, d_date#186]
                                    :        +- BroadcastHashJoin [ws_sold_date_sk#104], [d_date_sk#184], Inner, BuildRight, false
                                    :           :- Filter (isnotnull(ws_sold_date_sk#104) AND isnotnull(ws_bill_customer_sk#108))
                                    :           :  +- FileScan parquet tpcds_100_parquet.web_sales[ws_sold_date_sk#104,ws_bill_customer_sk#108] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#104), isnotnull(ws_bill_customer_sk#108)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int>
                                    :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=223]
                                    :              +- Project [d_date_sk#184, d_date#186]
                                    :                 +- Filter (((isnotnull(d_month_seq#187) AND (d_month_seq#187 >= 1200)) AND (d_month_seq#187 <= 1211)) AND isnotnull(d_date_sk#184))
                                    :                    +- FileScan parquet tpcds_100_parquet.date_dim[d_date_sk#184,d_date#186,d_month_seq#187] Batched: true, DataFilters: [isnotnull(d_month_seq#187), (d_month_seq#187 >= 1200), (d_month_seq#187 <= 1211), isnotnull(d_da..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211),..., ReadSchema: struct<d_date_sk:int,d_date:string,d_month_seq:int>
                                    +- Sort [c_customer_sk#212 ASC NULLS FIRST], false, 0
                                       +- Exchange hashpartitioning(c_customer_sk#212, 200), ENSURE_REQUIREMENTS, [plan_id=229]
                                          +- Filter isnotnull(c_customer_sk#212)
                                             +- FileScan parquet tpcds_100_parquet.customer[c_customer_sk#212,c_first_name#220,c_last_name#221] Batched: true, DataFilters: [isnotnull(c_customer_sk#212)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>


