// The Round Table
digraph {
	0 [label="nodeID(0) "]
	1 [label="nodeID(1) HashAggregate(keys=[d_year#6, i_category_id#62, i_category#63], functions=[sum(ss_ext_sales_price#43)])"]
	2 [label="nodeID(2) Exchange hashpartitioning(d_year#6, i_category_id#62, i_category#63, 200), ENSURE_REQUIREMENTS, [plan_id=69]"]
	3 [label="nodeID(3) HashAggregate(keys=[d_year#6, i_category_id#62, i_category#63], functions=[partial_sum(ss_ext_sales_price#43)])"]
	4 [label="nodeID(4) Project [d_year#6, ss_ext_sales_price#43, i_category_id#62, i_category#63]"]
	5 [label="nodeID(5) BroadcastHashJoin [ss_item_sk#30], [i_item_sk#51], Inner, BuildRight, false"]
	6 [label="nodeID(6) Project [d_year#6, ss_item_sk#30, ss_ext_sales_price#43]"]
	7 [label="nodeID(7) BroadcastHashJoin [d_date_sk#0], [ss_sold_date_sk#28], Inner, BuildLeft, false"]
	8 [label="nodeID(8) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=60]"]
	9 [label="nodeID(9) Project [d_date_sk#0, d_year#6]"]
	10 [label="nodeID(10) Filter ((((isnotnull(d_moy#8) AND isnotnull(d_year#6)) AND (d_moy#8 = 11)) AND (d_year#6 = 2000)) AND isnotnull(d_date_sk#0))"]
	11 [label="nodeID(11) FileScan parquet tpcds_500_parquet.date_dim[d_date_sk#0,d_year#6,d_moy#8"]
	12 [label="nodeID(12) Filter (isnotnull(ss_sold_date_sk#28) AND isnotnull(ss_item_sk#30))"]
	13 [label="nodeID(13) FileScan parquet tpcds_500_parquet.store_sales[ss_sold_date_sk#28,ss_item_sk#30,ss_ext_sales_price#43"]
	14 [label="nodeID(14) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=64]"]
	15 [label="nodeID(15) Project [i_item_sk#51, i_category_id#62, i_category#63]"]
	16 [label="nodeID(16) Filter ((isnotnull(i_manager_id#71) AND (i_manager_id#71 = 1)) AND isnotnull(i_item_sk#51))"]
	17 [label="nodeID(17) FileScan parquet tpcds_500_parquet.item[i_item_sk#51,i_category_id#62,i_category#63,i_manager_id#71"]
	1 -> 0
	2 -> 1
	3 -> 2
	4 -> 3
	5 -> 4
	6 -> 5
	7 -> 6
	8 -> 7
	9 -> 8
	10 -> 9
	11 -> 10
	12 -> 7
	13 -> 12
	14 -> 5
	15 -> 14
	16 -> 15
	17 -> 16
}
