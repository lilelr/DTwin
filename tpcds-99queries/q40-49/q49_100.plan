== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[channel#5 ASC NULLS FIRST,return_rank#3 ASC NULLS FIRST,currency_rank#4 ASC NULLS FIRST], output=[channel#5,item#0,return_ratio#1,return_rank#3,currency_rank#4])
   +- HashAggregate(keys=[channel#5, item#0, return_ratio#1, return_rank#3, currency_rank#4], functions=[])
      +- Exchange hashpartitioning(channel#5, item#0, return_ratio#1, return_rank#3, currency_rank#4, 200), ENSURE_REQUIREMENTS, [plan_id=315]
         +- HashAggregate(keys=[channel#5, item#0, return_ratio#1, return_rank#3, currency_rank#4], functions=[])
            +- Union
               :- Project [web AS channel#5, item#0, return_ratio#1, return_rank#3, currency_rank#4]
               :  +- Filter ((return_rank#3 <= 10) OR (currency_rank#4 <= 10))
               :     +- Window [rank(currency_ratio#2) windowspecdefinition(currency_ratio#2 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS currency_rank#4], [currency_ratio#2 ASC NULLS FIRST]
               :        +- Sort [currency_ratio#2 ASC NULLS FIRST], false, 0
               :           +- Window [rank(return_ratio#1) windowspecdefinition(return_ratio#1 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS return_rank#3], [return_ratio#1 ASC NULLS FIRST]
               :              +- Sort [return_ratio#1 ASC NULLS FIRST], false, 0
               :                 +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=256]
               :                    +- HashAggregate(keys=[ws_item_sk#33], functions=[sum(coalesce(wr_return_quantity#78, 0)), sum(coalesce(ws_quantity#48, 0)), sum(coalesce(wr_return_amt#79, 0.0)), sum(coalesce(ws_net_paid#59, 0.0))])
               :                       +- Exchange hashpartitioning(ws_item_sk#33, 200), ENSURE_REQUIREMENTS, [plan_id=253]
               :                          +- HashAggregate(keys=[ws_item_sk#33], functions=[partial_sum(coalesce(wr_return_quantity#78, 0)), partial_sum(coalesce(ws_quantity#48, 0)), partial_sum(coalesce(wr_return_amt#79, 0.0)), partial_sum(coalesce(ws_net_paid#59, 0.0))])
               :                             +- Project [ws_item_sk#33, ws_quantity#48, ws_net_paid#59, wr_return_quantity#78, wr_return_amt#79]
               :                                +- BroadcastHashJoin [ws_sold_date_sk#30], [d_date_sk#88], Inner, BuildRight, false
               :                                   :- Project [ws_sold_date_sk#30, ws_item_sk#33, ws_quantity#48, ws_net_paid#59, wr_return_quantity#78, wr_return_amt#79]
               :                                   :  +- SortMergeJoin [ws_order_number#47L, ws_item_sk#33], [wr_order_number#77L, wr_item_sk#66], Inner
               :                                   :     :- Sort [ws_order_number#47L ASC NULLS FIRST, ws_item_sk#33 ASC NULLS FIRST], false, 0
               :                                   :     :  +- Exchange hashpartitioning(ws_order_number#47L, ws_item_sk#33, 200), ENSURE_REQUIREMENTS, [plan_id=241]
               :                                   :     :     +- Project [ws_sold_date_sk#30, ws_item_sk#33, ws_order_number#47L, ws_quantity#48, ws_net_paid#59]
               :                                   :     :        +- Filter ((((((((isnotnull(ws_net_profit#63) AND isnotnull(ws_net_paid#59)) AND isnotnull(ws_quantity#48)) AND (ws_net_profit#63 > 1.0)) AND (ws_net_paid#59 > 0.0)) AND (ws_quantity#48 > 0)) AND isnotnull(ws_order_number#47L)) AND isnotnull(ws_item_sk#33)) AND isnotnull(ws_sold_date_sk#30))
               :                                   :     :           +- FileScan parquet tpcds_100_parquet.web_sales[ws_sold_date_sk#30,ws_item_sk#33,ws_order_number#47L,ws_quantity#48,ws_net_paid#59,ws_net_profit#63] Batched: true, DataFilters: [isnotnull(ws_net_profit#63), isnotnull(ws_net_paid#59), isnotnull(ws_quantity#48), (ws_net_profi..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_net_profit), IsNotNull(ws_net_paid), IsNotNull(ws_quantity), GreaterThan(ws_net_pro..., ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_net_paid:doub...
               :                                   :     +- Sort [wr_order_number#77L ASC NULLS FIRST, wr_item_sk#66 ASC NULLS FIRST], false, 0
               :                                   :        +- Exchange hashpartitioning(wr_order_number#77L, wr_item_sk#66, 200), ENSURE_REQUIREMENTS, [plan_id=242]
               :                                   :           +- Filter (((isnotnull(wr_return_amt#79) AND (wr_return_amt#79 > 10000.0)) AND isnotnull(wr_order_number#77L)) AND isnotnull(wr_item_sk#66))
               :                                   :              +- FileScan parquet tpcds_100_parquet.web_returns[wr_item_sk#66,wr_order_number#77L,wr_return_quantity#78,wr_return_amt#79] Batched: true, DataFilters: [isnotnull(wr_return_amt#79), (wr_return_amt#79 > 10000.0), isnotnull(wr_order_number#77L), isnot..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/web_returns], PartitionFilters: [], PushedFilters: [IsNotNull(wr_return_amt), GreaterThan(wr_return_amt,10000.0), IsNotNull(wr_order_number), IsNotN..., ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:double>
               :                                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=248]
               :                                      +- Project [d_date_sk#88]
               :                                         +- Filter ((((isnotnull(d_year#94) AND isnotnull(d_moy#96)) AND (d_year#94 = 2001)) AND (d_moy#96 = 12)) AND isnotnull(d_date_sk#88))
               :                                            +- FileScan parquet tpcds_100_parquet.date_dim[d_date_sk#88,d_year#94,d_moy#96] Batched: true, DataFilters: [isnotnull(d_year#94), isnotnull(d_moy#96), (d_year#94 = 2001), (d_moy#96 = 12), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,12), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
               :- Project [catalog AS channel#11, item#6, return_ratio#7, return_rank#9, currency_rank#10]
               :  +- Filter ((return_rank#9 <= 10) OR (currency_rank#10 <= 10))
               :     +- Window [rank(currency_ratio#8) windowspecdefinition(currency_ratio#8 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS currency_rank#10], [currency_ratio#8 ASC NULLS FIRST]
               :        +- Sort [currency_ratio#8 ASC NULLS FIRST], false, 0
               :           +- Window [rank(return_ratio#7) windowspecdefinition(return_ratio#7 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS return_rank#9], [return_ratio#7 ASC NULLS FIRST]
               :              +- Sort [return_ratio#7 ASC NULLS FIRST], false, 0
               :                 +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=280]
               :                    +- HashAggregate(keys=[cs_item_sk#131], functions=[sum(coalesce(cr_return_quantity#167, 0)), sum(coalesce(cs_quantity#134, 0)), sum(coalesce(cr_return_amount#168, 0.0)), sum(coalesce(cs_net_paid#145, 0.0))])
               :                       +- Exchange hashpartitioning(cs_item_sk#131, 200), ENSURE_REQUIREMENTS, [plan_id=277]
               :                          +- HashAggregate(keys=[cs_item_sk#131], functions=[partial_sum(coalesce(cr_return_quantity#167, 0)), partial_sum(coalesce(cs_quantity#134, 0)), partial_sum(coalesce(cr_return_amount#168, 0.0)), partial_sum(coalesce(cs_net_paid#145, 0.0))])
               :                             +- Project [cs_item_sk#131, cs_quantity#134, cs_net_paid#145, cr_return_quantity#167, cr_return_amount#168]
               :                                +- BroadcastHashJoin [cs_sold_date_sk#116], [d_date_sk#220], Inner, BuildRight, false
               :                                   :- Project [cs_sold_date_sk#116, cs_item_sk#131, cs_quantity#134, cs_net_paid#145, cr_return_quantity#167, cr_return_amount#168]
               :                                   :  +- SortMergeJoin [cs_order_number#133L, cs_item_sk#131], [cr_order_number#166L, cr_item_sk#152], Inner
               :                                   :     :- Sort [cs_order_number#133L ASC NULLS FIRST, cs_item_sk#131 ASC NULLS FIRST], false, 0
               :                                   :     :  +- Exchange hashpartitioning(cs_order_number#133L, cs_item_sk#131, 200), ENSURE_REQUIREMENTS, [plan_id=265]
               :                                   :     :     +- Project [cs_sold_date_sk#116, cs_item_sk#131, cs_order_number#133L, cs_quantity#134, cs_net_paid#145]
               :                                   :     :        +- Filter ((((((((isnotnull(cs_net_profit#149) AND isnotnull(cs_net_paid#145)) AND isnotnull(cs_quantity#134)) AND (cs_net_profit#149 > 1.0)) AND (cs_net_paid#145 > 0.0)) AND (cs_quantity#134 > 0)) AND isnotnull(cs_order_number#133L)) AND isnotnull(cs_item_sk#131)) AND isnotnull(cs_sold_date_sk#116))
               :                                   :     :           +- FileScan parquet tpcds_100_parquet.catalog_sales[cs_sold_date_sk#116,cs_item_sk#131,cs_order_number#133L,cs_quantity#134,cs_net_paid#145,cs_net_profit#149] Batched: true, DataFilters: [isnotnull(cs_net_profit#149), isnotnull(cs_net_paid#145), isnotnull(cs_quantity#134), (cs_net_pr..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/catalog_sa..., PartitionFilters: [], PushedFilters: [IsNotNull(cs_net_profit), IsNotNull(cs_net_paid), IsNotNull(cs_quantity), GreaterThan(cs_net_pro..., ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_net_paid:doub...
               :                                   :     +- Sort [cr_order_number#166L ASC NULLS FIRST, cr_item_sk#152 ASC NULLS FIRST], false, 0
               :                                   :        +- Exchange hashpartitioning(cr_order_number#166L, cr_item_sk#152, 200), ENSURE_REQUIREMENTS, [plan_id=266]
               :                                   :           +- Filter (((isnotnull(cr_return_amount#168) AND (cr_return_amount#168 > 10000.0)) AND isnotnull(cr_order_number#166L)) AND isnotnull(cr_item_sk#152))
               :                                   :              +- FileScan parquet tpcds_100_parquet.catalog_returns[cr_item_sk#152,cr_order_number#166L,cr_return_quantity#167,cr_return_amount#168] Batched: true, DataFilters: [isnotnull(cr_return_amount#168), (cr_return_amount#168 > 10000.0), isnotnull(cr_order_number#166..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/catalog_re..., PartitionFilters: [], PushedFilters: [IsNotNull(cr_return_amount), GreaterThan(cr_return_amount,10000.0), IsNotNull(cr_order_number), ..., ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:double>
               :                                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=272]
               :                                      +- Project [d_date_sk#220]
               :                                         +- Filter ((((isnotnull(d_year#226) AND isnotnull(d_moy#228)) AND (d_year#226 = 2001)) AND (d_moy#228 = 12)) AND isnotnull(d_date_sk#220))
               :                                            +- FileScan parquet tpcds_100_parquet.date_dim[d_date_sk#220,d_year#226,d_moy#228] Batched: true, DataFilters: [isnotnull(d_year#226), isnotnull(d_moy#228), (d_year#226 = 2001), (d_moy#228 = 12), isnotnull(d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,12), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
               +- Project [store AS channel#17, item#12, return_ratio#13, return_rank#15, currency_rank#16]
                  +- Filter ((return_rank#15 <= 10) OR (currency_rank#16 <= 10))
                     +- Window [rank(currency_ratio#14) windowspecdefinition(currency_ratio#14 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS currency_rank#16], [currency_ratio#14 ASC NULLS FIRST]
                        +- Sort [currency_ratio#14 ASC NULLS FIRST], false, 0
                           +- Window [rank(return_ratio#13) windowspecdefinition(return_ratio#13 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS return_rank#15], [return_ratio#13 ASC NULLS FIRST]
                              +- Sort [return_ratio#13 ASC NULLS FIRST], false, 0
                                 +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=304]
                                    +- HashAggregate(keys=[ss_item_sk#179], functions=[sum(coalesce(sr_return_quantity#210, 0)), sum(coalesce(ss_quantity#187, 0)), sum(coalesce(sr_return_amt#211, 0.0)), sum(coalesce(ss_net_paid#197, 0.0))])
                                       +- Exchange hashpartitioning(ss_item_sk#179, 200), ENSURE_REQUIREMENTS, [plan_id=301]
                                          +- HashAggregate(keys=[ss_item_sk#179], functions=[partial_sum(coalesce(sr_return_quantity#210, 0)), partial_sum(coalesce(ss_quantity#187, 0)), partial_sum(coalesce(sr_return_amt#211, 0.0)), partial_sum(coalesce(ss_net_paid#197, 0.0))])
                                             +- Project [ss_item_sk#179, ss_quantity#187, ss_net_paid#197, sr_return_quantity#210, sr_return_amt#211]
                                                +- BroadcastHashJoin [ss_sold_date_sk#177], [d_date_sk#248], Inner, BuildRight, false
                                                   :- Project [ss_sold_date_sk#177, ss_item_sk#179, ss_quantity#187, ss_net_paid#197, sr_return_quantity#210, sr_return_amt#211]
                                                   :  +- SortMergeJoin [ss_ticket_number#186L, ss_item_sk#179], [sr_ticket_number#209L, sr_item_sk#202], Inner
                                                   :     :- Sort [ss_ticket_number#186L ASC NULLS FIRST, ss_item_sk#179 ASC NULLS FIRST], false, 0
                                                   :     :  +- Exchange hashpartitioning(ss_ticket_number#186L, ss_item_sk#179, 200), ENSURE_REQUIREMENTS, [plan_id=289]
                                                   :     :     +- Project [ss_sold_date_sk#177, ss_item_sk#179, ss_ticket_number#186L, ss_quantity#187, ss_net_paid#197]
                                                   :     :        +- Filter ((((((((isnotnull(ss_net_profit#199) AND isnotnull(ss_net_paid#197)) AND isnotnull(ss_quantity#187)) AND (ss_net_profit#199 > 1.0)) AND (ss_net_paid#197 > 0.0)) AND (ss_quantity#187 > 0)) AND isnotnull(ss_ticket_number#186L)) AND isnotnull(ss_item_sk#179)) AND isnotnull(ss_sold_date_sk#177))
                                                   :     :           +- FileScan parquet tpcds_100_parquet.store_sales[ss_sold_date_sk#177,ss_item_sk#179,ss_ticket_number#186L,ss_quantity#187,ss_net_paid#197,ss_net_profit#199] Batched: true, DataFilters: [isnotnull(ss_net_profit#199), isnotnull(ss_net_paid#197), isnotnull(ss_quantity#187), (ss_net_pr..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_net_profit), IsNotNull(ss_net_paid), IsNotNull(ss_quantity), GreaterThan(ss_net_pro..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_net_paid:dou...
                                                   :     +- Sort [sr_ticket_number#209L ASC NULLS FIRST, sr_item_sk#202 ASC NULLS FIRST], false, 0
                                                   :        +- Exchange hashpartitioning(sr_ticket_number#209L, sr_item_sk#202, 200), ENSURE_REQUIREMENTS, [plan_id=290]
                                                   :           +- Filter (((isnotnull(sr_return_amt#211) AND (sr_return_amt#211 > 10000.0)) AND isnotnull(sr_ticket_number#209L)) AND isnotnull(sr_item_sk#202))
                                                   :              +- FileScan parquet tpcds_100_parquet.store_returns[sr_item_sk#202,sr_ticket_number#209L,sr_return_quantity#210,sr_return_amt#211] Batched: true, DataFilters: [isnotnull(sr_return_amt#211), (sr_return_amt#211 > 10000.0), isnotnull(sr_ticket_number#209L), i..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/store_retu..., PartitionFilters: [], PushedFilters: [IsNotNull(sr_return_amt), GreaterThan(sr_return_amt,10000.0), IsNotNull(sr_ticket_number), IsNot..., ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:double>
                                                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=296]
                                                      +- Project [d_date_sk#248]
                                                         +- Filter ((((isnotnull(d_year#254) AND isnotnull(d_moy#256)) AND (d_year#254 = 2001)) AND (d_moy#256 = 12)) AND isnotnull(d_date_sk#248))
                                                            +- FileScan parquet tpcds_100_parquet.date_dim[d_date_sk#248,d_year#254,d_moy#256] Batched: true, DataFilters: [isnotnull(d_year#254), isnotnull(d_moy#256), (d_year#254 = 2001), (d_moy#256 = 12), isnotnull(d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,12), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>


