== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[(sum_sales#0 - avg_monthly_sales#1) ASC NULLS FIRST,s_store_name#85 ASC NULLS FIRST], output=[i_category#19,i_brand#15,s_store_name#85,s_company_name#97,d_year#58,d_moy#60,avg_monthly_sales#1,sum_sales#0,psum#3,nsum#4])
   +- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, avg_monthly_sales#1, sum_sales#0, sum_sales#131 AS psum#3, sum_sales#140 AS nsum#4]
      +- SortMergeJoin [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, rn#2], [i_category#486, i_brand#482, s_store_name#552, s_company_name#564, (rn#580 - 1)], Inner
         :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#0, avg_monthly_sales#1, rn#2, sum_sales#131]
         :  +- SortMergeJoin [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, rn#2], [i_category#379, i_brand#375, s_store_name#445, s_company_name#457, (rn#473 + 1)], Inner
         :     :- Sort [i_category#19 ASC NULLS FIRST, i_brand#15 ASC NULLS FIRST, s_store_name#85 ASC NULLS FIRST, s_company_name#97 ASC NULLS FIRST, rn#2 ASC NULLS FIRST], false, 0
         :     :  +- Exchange hashpartitioning(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, rn#2, 200), ENSURE_REQUIREMENTS, [plan_id=330]
         :     :     +- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#0, avg_monthly_sales#1, rn#2]
         :     :        +- Filter ((isnotnull(avg_monthly_sales#1) AND (avg_monthly_sales#1 > 0.0)) AND CASE WHEN (avg_monthly_sales#1 > 0.0) THEN ((abs((sum_sales#0 - avg_monthly_sales#1)) / avg_monthly_sales#1) > 0.1) END)
         :     :           +- Window [avg(_w0#124) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#1], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58]
         :     :              +- Filter (isnotnull(d_year#58) AND (d_year#58 = 1999))
         :     :                 +- Window [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#2], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST]
         :     :                    +- Sort [i_category#19 ASC NULLS FIRST, i_brand#15 ASC NULLS FIRST, s_store_name#85 ASC NULLS FIRST, s_company_name#97 ASC NULLS FIRST, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST], false, 0
         :     :                       +- Exchange hashpartitioning(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, 200), ENSURE_REQUIREMENTS, [plan_id=301]
         :     :                          +- HashAggregate(keys=[i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], functions=[sum(ss_sales_price#42)])
         :     :                             +- Exchange hashpartitioning(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, 200), ENSURE_REQUIREMENTS, [plan_id=298]
         :     :                                +- HashAggregate(keys=[i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], functions=[partial_sum(ss_sales_price#42)])
         :     :                                   +- Project [i_brand#15, i_category#19, ss_sales_price#42, d_year#58, d_moy#60, s_store_name#85, s_company_name#97]
         :     :                                      +- BroadcastHashJoin [ss_store_sk#36], [s_store_sk#80], Inner, BuildRight, false
         :     :                                         :- Project [i_brand#15, i_category#19, ss_store_sk#36, ss_sales_price#42, d_year#58, d_moy#60]
         :     :                                         :  +- BroadcastHashJoin [ss_sold_date_sk#29], [d_date_sk#52], Inner, BuildRight, false
         :     :                                         :     :- Project [i_brand#15, i_category#19, ss_sold_date_sk#29, ss_store_sk#36, ss_sales_price#42]
         :     :                                         :     :  +- BroadcastHashJoin [i_item_sk#7], [ss_item_sk#31], Inner, BuildLeft, false
         :     :                                         :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=285]
         :     :                                         :     :     :  +- Filter ((isnotnull(i_item_sk#7) AND isnotnull(i_category#19)) AND isnotnull(i_brand#15))
         :     :                                         :     :     :     +- FileScan parquet tpcds_500_parquet.item[i_item_sk#7,i_brand#15,i_category#19] Batched: true, DataFilters: [isnotnull(i_item_sk#7), isnotnull(i_category#19), isnotnull(i_brand#15)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_500/tpcds_parquet/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
         :     :                                         :     :     +- Filter ((isnotnull(ss_item_sk#31) AND isnotnull(ss_sold_date_sk#29)) AND isnotnull(ss_store_sk#36))
         :     :                                         :     :        +- FileScan parquet tpcds_500_parquet.store_sales[ss_sold_date_sk#29,ss_item_sk#31,ss_store_sk#36,ss_sales_price#42] Batched: true, DataFilters: [isnotnull(ss_item_sk#31), isnotnull(ss_sold_date_sk#29), isnotnull(ss_store_sk#36)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_500/tpcds_parquet/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:double>
         :     :                                         :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=289]
         :     :                                         :        +- Filter ((((d_year#58 = 1999) OR ((d_year#58 = 1998) AND (d_moy#60 = 12))) OR ((d_year#58 = 2000) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))
         :     :                                         :           +- FileScan parquet tpcds_500_parquet.date_dim[d_date_sk#52,d_year#58,d_moy#60] Batched: true, DataFilters: [(((d_year#58 = 1999) OR ((d_year#58 = 1998) AND (d_moy#60 = 12))) OR ((d_year#58 = 2000) AND (d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_500/tpcds_parquet/date_dim], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,1999),And(EqualTo(d_year,1998),EqualTo(d_moy,12))),And(EqualTo(d_year,2000)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
         :     :                                         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=293]
         :     :                                            +- Filter ((isnotnull(s_store_sk#80) AND isnotnull(s_store_name#85)) AND isnotnull(s_company_name#97))
         :     :                                               +- FileScan parquet tpcds_500_parquet.store[s_store_sk#80,s_store_name#85,s_company_name#97] Batched: true, DataFilters: [isnotnull(s_store_sk#80), isnotnull(s_store_name#85), isnotnull(s_company_name#97)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_500/tpcds_parquet/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_name), IsNotNull(s_company_name)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>
         :     +- Sort [i_category#379 ASC NULLS FIRST, i_brand#375 ASC NULLS FIRST, s_store_name#445 ASC NULLS FIRST, s_company_name#457 ASC NULLS FIRST, (rn#473 + 1) ASC NULLS FIRST], false, 0
         :        +- Exchange hashpartitioning(i_category#379, i_brand#375, s_store_name#445, s_company_name#457, (rn#473 + 1), 200), ENSURE_REQUIREMENTS, [plan_id=331]
         :           +- Project [i_category#379, i_brand#375, s_store_name#445, s_company_name#457, sum_sales#0 AS sum_sales#131, rn#473]
         :              +- Window [rank(d_year#418, d_moy#420) windowspecdefinition(i_category#379, i_brand#375, s_store_name#445, s_company_name#457, d_year#418 ASC NULLS FIRST, d_moy#420 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#473], [i_category#379, i_brand#375, s_store_name#445, s_company_name#457], [d_year#418 ASC NULLS FIRST, d_moy#420 ASC NULLS FIRST]
         :                 +- Sort [i_category#379 ASC NULLS FIRST, i_brand#375 ASC NULLS FIRST, s_store_name#445 ASC NULLS FIRST, s_company_name#457 ASC NULLS FIRST, d_year#418 ASC NULLS FIRST, d_moy#420 ASC NULLS FIRST], false, 0
         :                    +- Exchange hashpartitioning(i_category#379, i_brand#375, s_store_name#445, s_company_name#457, 200), ENSURE_REQUIREMENTS, [plan_id=324]
         :                       +- HashAggregate(keys=[i_category#379, i_brand#375, s_store_name#445, s_company_name#457, d_year#418, d_moy#420], functions=[sum(ss_sales_price#402)])
         :                          +- Exchange hashpartitioning(i_category#379, i_brand#375, s_store_name#445, s_company_name#457, d_year#418, d_moy#420, 200), ENSURE_REQUIREMENTS, [plan_id=321]
         :                             +- HashAggregate(keys=[i_category#379, i_brand#375, s_store_name#445, s_company_name#457, d_year#418, d_moy#420], functions=[partial_sum(ss_sales_price#402)])
         :                                +- Project [i_brand#375, i_category#379, ss_sales_price#402, d_year#418, d_moy#420, s_store_name#445, s_company_name#457]
         :                                   +- BroadcastHashJoin [ss_store_sk#396], [s_store_sk#440], Inner, BuildRight, false
         :                                      :- Project [i_brand#375, i_category#379, ss_store_sk#396, ss_sales_price#402, d_year#418, d_moy#420]
         :                                      :  +- BroadcastHashJoin [ss_sold_date_sk#389], [d_date_sk#412], Inner, BuildRight, false
         :                                      :     :- Project [i_brand#375, i_category#379, ss_sold_date_sk#389, ss_store_sk#396, ss_sales_price#402]
         :                                      :     :  +- BroadcastHashJoin [i_item_sk#367], [ss_item_sk#391], Inner, BuildLeft, false
         :                                      :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=308]
         :                                      :     :     :  +- Filter ((isnotnull(i_item_sk#367) AND isnotnull(i_category#379)) AND isnotnull(i_brand#375))
         :                                      :     :     :     +- FileScan parquet tpcds_500_parquet.item[i_item_sk#367,i_brand#375,i_category#379] Batched: true, DataFilters: [isnotnull(i_item_sk#367), isnotnull(i_category#379), isnotnull(i_brand#375)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_500/tpcds_parquet/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
         :                                      :     :     +- Filter ((isnotnull(ss_item_sk#391) AND isnotnull(ss_sold_date_sk#389)) AND isnotnull(ss_store_sk#396))
         :                                      :     :        +- FileScan parquet tpcds_500_parquet.store_sales[ss_sold_date_sk#389,ss_item_sk#391,ss_store_sk#396,ss_sales_price#402] Batched: true, DataFilters: [isnotnull(ss_item_sk#391), isnotnull(ss_sold_date_sk#389), isnotnull(ss_store_sk#396)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_500/tpcds_parquet/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:double>
         :                                      :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=312]
         :                                      :        +- Filter ((((d_year#418 = 1999) OR ((d_year#418 = 1998) AND (d_moy#420 = 12))) OR ((d_year#418 = 2000) AND (d_moy#420 = 1))) AND isnotnull(d_date_sk#412))
         :                                      :           +- FileScan parquet tpcds_500_parquet.date_dim[d_date_sk#412,d_year#418,d_moy#420] Batched: true, DataFilters: [(((d_year#418 = 1999) OR ((d_year#418 = 1998) AND (d_moy#420 = 12))) OR ((d_year#418 = 2000) AND..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_500/tpcds_parquet/date_dim], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,1999),And(EqualTo(d_year,1998),EqualTo(d_moy,12))),And(EqualTo(d_year,2000)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
         :                                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=316]
         :                                         +- Filter ((isnotnull(s_store_sk#440) AND isnotnull(s_store_name#445)) AND isnotnull(s_company_name#457))
         :                                            +- FileScan parquet tpcds_500_parquet.store[s_store_sk#440,s_store_name#445,s_company_name#457] Batched: true, DataFilters: [isnotnull(s_store_sk#440), isnotnull(s_store_name#445), isnotnull(s_company_name#457)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_500/tpcds_parquet/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_name), IsNotNull(s_company_name)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>
         +- Sort [i_category#486 ASC NULLS FIRST, i_brand#482 ASC NULLS FIRST, s_store_name#552 ASC NULLS FIRST, s_company_name#564 ASC NULLS FIRST, (rn#580 - 1) ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(i_category#486, i_brand#482, s_store_name#552, s_company_name#564, (rn#580 - 1), 200), ENSURE_REQUIREMENTS, [plan_id=358]
               +- Project [i_category#486, i_brand#482, s_store_name#552, s_company_name#564, sum_sales#0 AS sum_sales#140, rn#580]
                  +- Window [rank(d_year#525, d_moy#527) windowspecdefinition(i_category#486, i_brand#482, s_store_name#552, s_company_name#564, d_year#525 ASC NULLS FIRST, d_moy#527 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#580], [i_category#486, i_brand#482, s_store_name#552, s_company_name#564], [d_year#525 ASC NULLS FIRST, d_moy#527 ASC NULLS FIRST]
                     +- Sort [i_category#486 ASC NULLS FIRST, i_brand#482 ASC NULLS FIRST, s_store_name#552 ASC NULLS FIRST, s_company_name#564 ASC NULLS FIRST, d_year#525 ASC NULLS FIRST, d_moy#527 ASC NULLS FIRST], false, 0
                        +- Exchange hashpartitioning(i_category#486, i_brand#482, s_store_name#552, s_company_name#564, 200), ENSURE_REQUIREMENTS, [plan_id=352]
                           +- HashAggregate(keys=[i_category#486, i_brand#482, s_store_name#552, s_company_name#564, d_year#525, d_moy#527], functions=[sum(ss_sales_price#509)])
                              +- Exchange hashpartitioning(i_category#486, i_brand#482, s_store_name#552, s_company_name#564, d_year#525, d_moy#527, 200), ENSURE_REQUIREMENTS, [plan_id=349]
                                 +- HashAggregate(keys=[i_category#486, i_brand#482, s_store_name#552, s_company_name#564, d_year#525, d_moy#527], functions=[partial_sum(ss_sales_price#509)])
                                    +- Project [i_brand#482, i_category#486, ss_sales_price#509, d_year#525, d_moy#527, s_store_name#552, s_company_name#564]
                                       +- BroadcastHashJoin [ss_store_sk#503], [s_store_sk#547], Inner, BuildRight, false
                                          :- Project [i_brand#482, i_category#486, ss_store_sk#503, ss_sales_price#509, d_year#525, d_moy#527]
                                          :  +- BroadcastHashJoin [ss_sold_date_sk#496], [d_date_sk#519], Inner, BuildRight, false
                                          :     :- Project [i_brand#482, i_category#486, ss_sold_date_sk#496, ss_store_sk#503, ss_sales_price#509]
                                          :     :  +- BroadcastHashJoin [i_item_sk#474], [ss_item_sk#498], Inner, BuildLeft, false
                                          :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=336]
                                          :     :     :  +- Filter ((isnotnull(i_item_sk#474) AND isnotnull(i_category#486)) AND isnotnull(i_brand#482))
                                          :     :     :     +- FileScan parquet tpcds_500_parquet.item[i_item_sk#474,i_brand#482,i_category#486] Batched: true, DataFilters: [isnotnull(i_item_sk#474), isnotnull(i_category#486), isnotnull(i_brand#482)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_500/tpcds_parquet/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
                                          :     :     +- Filter ((isnotnull(ss_item_sk#498) AND isnotnull(ss_sold_date_sk#496)) AND isnotnull(ss_store_sk#503))
                                          :     :        +- FileScan parquet tpcds_500_parquet.store_sales[ss_sold_date_sk#496,ss_item_sk#498,ss_store_sk#503,ss_sales_price#509] Batched: true, DataFilters: [isnotnull(ss_item_sk#498), isnotnull(ss_sold_date_sk#496), isnotnull(ss_store_sk#503)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_500/tpcds_parquet/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:double>
                                          :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=340]
                                          :        +- Filter ((((d_year#525 = 1999) OR ((d_year#525 = 1998) AND (d_moy#527 = 12))) OR ((d_year#525 = 2000) AND (d_moy#527 = 1))) AND isnotnull(d_date_sk#519))
                                          :           +- FileScan parquet tpcds_500_parquet.date_dim[d_date_sk#519,d_year#525,d_moy#527] Batched: true, DataFilters: [(((d_year#525 = 1999) OR ((d_year#525 = 1998) AND (d_moy#527 = 12))) OR ((d_year#525 = 2000) AND..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_500/tpcds_parquet/date_dim], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,1999),And(EqualTo(d_year,1998),EqualTo(d_moy,12))),And(EqualTo(d_year,2000)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=344]
                                             +- Filter ((isnotnull(s_store_sk#547) AND isnotnull(s_store_name#552)) AND isnotnull(s_company_name#564))
                                                +- FileScan parquet tpcds_500_parquet.store[s_store_sk#547,s_store_name#552,s_company_name#564] Batched: true, DataFilters: [isnotnull(s_store_sk#547), isnotnull(s_store_name#552), isnotnull(s_company_name#564)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_500/tpcds_parquet/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_name), IsNotNull(s_company_name)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>


