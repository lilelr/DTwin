== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[substr(r_reason_desc, 1, 20)#145 ASC NULLS FIRST,avg(ws_quantity)#146 ASC NULLS FIRST,avg(wr_refunded_cash)#147 ASC NULLS FIRST,avg(wr_fee)#148 ASC NULLS FIRST], output=[substr(r_reason_desc, 1, 20)#145,avg(ws_quantity)#146,avg(wr_refunded_cash)#147,avg(wr_fee)#148])
   +- HashAggregate(keys=[r_reason_desc#124], functions=[avg(ws_quantity#18), avg(wr_refunded_cash#54), avg(wr_fee#52)])
      +- Exchange hashpartitioning(r_reason_desc#124, 200), ENSURE_REQUIREMENTS, [plan_id=187]
         +- HashAggregate(keys=[r_reason_desc#124], functions=[partial_avg(ws_quantity#18), partial_avg(wr_refunded_cash#54), partial_avg(wr_fee#52)])
            +- Project [ws_quantity#18, wr_fee#52, wr_refunded_cash#54, r_reason_desc#124]
               +- BroadcastHashJoin [wr_reason_sk#46], [r_reason_sk#122], Inner, BuildRight, false
                  :- Project [ws_quantity#18, wr_reason_sk#46, wr_fee#52, wr_refunded_cash#54]
                  :  +- BroadcastHashJoin [ws_sold_date_sk#0], [d_date_sk#94], Inner, BuildRight, false
                  :     :- Project [ws_sold_date_sk#0, ws_quantity#18, wr_reason_sk#46, wr_fee#52, wr_refunded_cash#54]
                  :     :  +- SortMergeJoin [wr_refunded_addr_sk#40], [ca_address_sk#81], Inner, ((((ca_state#89 IN (IN,OH,NJ) AND (ws_net_profit#33 >= 100.0)) AND (ws_net_profit#33 <= 200.0)) OR ((ca_state#89 IN (WI,CT,KY) AND (ws_net_profit#33 >= 150.0)) AND (ws_net_profit#33 <= 300.0))) OR ((ca_state#89 IN (LA,IA,AR) AND (ws_net_profit#33 >= 50.0)) AND (ws_net_profit#33 <= 250.0)))
                  :     :     :- Sort [wr_refunded_addr_sk#40 ASC NULLS FIRST], false, 0
                  :     :     :  +- Exchange hashpartitioning(wr_refunded_addr_sk#40, 200), ENSURE_REQUIREMENTS, [plan_id=171]
                  :     :     :     +- Project [ws_sold_date_sk#0, ws_quantity#18, ws_net_profit#33, wr_refunded_addr_sk#40, wr_reason_sk#46, wr_fee#52, wr_refunded_cash#54]
                  :     :     :        +- BroadcastHashJoin [wr_returning_cdemo_sk#42, cd_marital_status#74, cd_education_status#75], [cd_demo_sk#125, cd_marital_status#127, cd_education_status#128], Inner, BuildRight, false
                  :     :     :           :- Project [ws_sold_date_sk#0, ws_quantity#18, ws_net_profit#33, wr_refunded_addr_sk#40, wr_returning_cdemo_sk#42, wr_reason_sk#46, wr_fee#52, wr_refunded_cash#54, cd_marital_status#74, cd_education_status#75]
                  :     :     :           :  +- BroadcastHashJoin [wr_refunded_cdemo_sk#38], [cd_demo_sk#72], Inner, BuildRight, ((((((cd_marital_status#74 = M) AND (cd_education_status#75 = Advanced Degree)) AND (ws_sales_price#21 >= 100.0)) AND (ws_sales_price#21 <= 150.0)) OR ((((cd_marital_status#74 = S) AND (cd_education_status#75 = College)) AND (ws_sales_price#21 >= 50.0)) AND (ws_sales_price#21 <= 100.0))) OR ((((cd_marital_status#74 = W) AND (cd_education_status#75 = 2 yr Degree)) AND (ws_sales_price#21 >= 150.0)) AND (ws_sales_price#21 <= 200.0))), false
                  :     :     :           :     :- Project [ws_sold_date_sk#0, ws_quantity#18, ws_sales_price#21, ws_net_profit#33, wr_refunded_cdemo_sk#38, wr_refunded_addr_sk#40, wr_returning_cdemo_sk#42, wr_reason_sk#46, wr_fee#52, wr_refunded_cash#54]
                  :     :     :           :     :  +- BroadcastHashJoin [ws_web_page_sk#12], [wp_web_page_sk#58], Inner, BuildRight, false
                  :     :     :           :     :     :- Project [ws_sold_date_sk#0, ws_web_page_sk#12, ws_quantity#18, ws_sales_price#21, ws_net_profit#33, wr_refunded_cdemo_sk#38, wr_refunded_addr_sk#40, wr_returning_cdemo_sk#42, wr_reason_sk#46, wr_fee#52, wr_refunded_cash#54]
                  :     :     :           :     :     :  +- SortMergeJoin [ws_item_sk#3, ws_order_number#17L], [wr_item_sk#36, wr_order_number#47L], Inner
                  :     :     :           :     :     :     :- Sort [ws_item_sk#3 ASC NULLS FIRST, ws_order_number#17L ASC NULLS FIRST], false, 0
                  :     :     :           :     :     :     :  +- Exchange hashpartitioning(ws_item_sk#3, ws_order_number#17L, 200), ENSURE_REQUIREMENTS, [plan_id=151]
                  :     :     :           :     :     :     :     +- Filter (((((isnotnull(ws_item_sk#3) AND isnotnull(ws_order_number#17L)) AND isnotnull(ws_web_page_sk#12)) AND isnotnull(ws_sold_date_sk#0)) AND ((((ws_sales_price#21 >= 100.0) AND (ws_sales_price#21 <= 150.0)) OR ((ws_sales_price#21 >= 50.0) AND (ws_sales_price#21 <= 100.0))) OR ((ws_sales_price#21 >= 150.0) AND (ws_sales_price#21 <= 200.0)))) AND ((((ws_net_profit#33 >= 100.0) AND (ws_net_profit#33 <= 200.0)) OR ((ws_net_profit#33 >= 150.0) AND (ws_net_profit#33 <= 300.0))) OR ((ws_net_profit#33 >= 50.0) AND (ws_net_profit#33 <= 250.0))))
                  :     :     :           :     :     :     :        +- FileScan parquet tpcds_1000_parquet.web_sales[ws_sold_date_sk#0,ws_item_sk#3,ws_web_page_sk#12,ws_order_number#17L,ws_quantity#18,ws_sales_price#21,ws_net_profit#33] Batched: true, DataFilters: [isnotnull(ws_item_sk#3), isnotnull(ws_order_number#17L), isnotnull(ws_web_page_sk#12), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_order_number), IsNotNull(ws_web_page_sk), IsNotNull(ws_sold_..., ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_web_page_sk:int,ws_order_number:bigint,ws_quantity:i...
                  :     :     :           :     :     :     +- Sort [wr_item_sk#36 ASC NULLS FIRST, wr_order_number#47L ASC NULLS FIRST], false, 0
                  :     :     :           :     :     :        +- Exchange hashpartitioning(wr_item_sk#36, wr_order_number#47L, 200), ENSURE_REQUIREMENTS, [plan_id=152]
                  :     :     :           :     :     :           +- Filter (((((isnotnull(wr_item_sk#36) AND isnotnull(wr_order_number#47L)) AND isnotnull(wr_refunded_cdemo_sk#38)) AND isnotnull(wr_returning_cdemo_sk#42)) AND isnotnull(wr_refunded_addr_sk#40)) AND isnotnull(wr_reason_sk#46))
                  :     :     :           :     :     :              +- FileScan parquet tpcds_1000_parquet.web_returns[wr_item_sk#36,wr_refunded_cdemo_sk#38,wr_refunded_addr_sk#40,wr_returning_cdemo_sk#42,wr_reason_sk#46,wr_order_number#47L,wr_fee#52,wr_refunded_cash#54] Batched: true, DataFilters: [isnotnull(wr_item_sk#36), isnotnull(wr_order_number#47L), isnotnull(wr_refunded_cdemo_sk#38), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/web_returns], PartitionFilters: [], PushedFilters: [IsNotNull(wr_item_sk), IsNotNull(wr_order_number), IsNotNull(wr_refunded_cdemo_sk), IsNotNull(wr..., ReadSchema: struct<wr_item_sk:int,wr_refunded_cdemo_sk:int,wr_refunded_addr_sk:int,wr_returning_cdemo_sk:int,...
                  :     :     :           :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=158]
                  :     :     :           :     :        +- Filter isnotnull(wp_web_page_sk#58)
                  :     :     :           :     :           +- FileScan parquet tpcds_1000_parquet.web_page[wp_web_page_sk#58] Batched: true, DataFilters: [isnotnull(wp_web_page_sk#58)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/web_page], PartitionFilters: [], PushedFilters: [IsNotNull(wp_web_page_sk)], ReadSchema: struct<wp_web_page_sk:int>
                  :     :     :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=162]
                  :     :     :           :        +- Filter (((isnotnull(cd_demo_sk#72) AND isnotnull(cd_marital_status#74)) AND isnotnull(cd_education_status#75)) AND ((((cd_marital_status#74 = M) AND (cd_education_status#75 = Advanced Degree)) OR ((cd_marital_status#74 = S) AND (cd_education_status#75 = College))) OR ((cd_marital_status#74 = W) AND (cd_education_status#75 = 2 yr Degree))))
                  :     :     :           :           +- FileScan parquet tpcds_1000_parquet.customer_demographics[cd_demo_sk#72,cd_marital_status#74,cd_education_status#75] Batched: true, DataFilters: [isnotnull(cd_demo_sk#72), isnotnull(cd_marital_status#74), isnotnull(cd_education_status#75), ((..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk), IsNotNull(cd_marital_status), IsNotNull(cd_education_status), Or(Or(And(E..., ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>
                  :     :     :           +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, int, false], input[1, string, false], input[2, string, false]),false), [plan_id=166]
                  :     :     :              +- Filter ((isnotnull(cd_demo_sk#125) AND isnotnull(cd_marital_status#127)) AND isnotnull(cd_education_status#128))
                  :     :     :                 +- FileScan parquet tpcds_1000_parquet.customer_demographics[cd_demo_sk#125,cd_marital_status#127,cd_education_status#128] Batched: true, DataFilters: [isnotnull(cd_demo_sk#125), isnotnull(cd_marital_status#127), isnotnull(cd_education_status#128)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk), IsNotNull(cd_marital_status), IsNotNull(cd_education_status)], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>
                  :     :     +- Sort [ca_address_sk#81 ASC NULLS FIRST], false, 0
                  :     :        +- Exchange hashpartitioning(ca_address_sk#81, 200), ENSURE_REQUIREMENTS, [plan_id=172]
                  :     :           +- Project [ca_address_sk#81, ca_state#89]
                  :     :              +- Filter (((isnotnull(ca_country#91) AND (ca_country#91 = United States)) AND isnotnull(ca_address_sk#81)) AND ((ca_state#89 IN (IN,OH,NJ) OR ca_state#89 IN (WI,CT,KY)) OR ca_state#89 IN (LA,IA,AR)))
                  :     :                 +- FileScan parquet tpcds_1000_parquet.customer_address[ca_address_sk#81,ca_state#89,ca_country#91] Batched: true, DataFilters: [isnotnull(ca_country#91), (ca_country#91 = United States), isnotnull(ca_address_sk#81), ((ca_sta..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_country), EqualTo(ca_country,United States), IsNotNull(ca_address_sk), Or(Or(In(ca_..., ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_country:string>
                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=178]
                  :        +- Project [d_date_sk#94]
                  :           +- Filter ((isnotnull(d_year#100) AND (d_year#100 = 2000)) AND isnotnull(d_date_sk#94))
                  :              +- FileScan parquet tpcds_1000_parquet.date_dim[d_date_sk#94,d_year#100] Batched: true, DataFilters: [isnotnull(d_year#100), (d_year#100 = 2000), isnotnull(d_date_sk#94)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=182]
                     +- Filter isnotnull(r_reason_sk#122)
                        +- FileScan parquet tpcds_1000_parquet.reason[r_reason_sk#122,r_reason_desc#124] Batched: true, DataFilters: [isnotnull(r_reason_sk#122)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_1000/tpcds_parquet/reason], PartitionFilters: [], PushedFilters: [IsNotNull(r_reason_sk)], ReadSchema: struct<r_reason_sk:int,r_reason_desc:string>


