== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[customer_id#169 ASC NULLS FIRST,customer_id#169 ASC NULLS FIRST,customer_id#169 ASC NULLS FIRST], output=[customer_id#169,customer_first_name#170,customer_last_name#171])
   +- Project [customer_id#169, customer_first_name#170, customer_last_name#171]
      +- SortMergeJoin [customer_id#0], [customer_id#181], Inner, (CASE WHEN (year_total#10 > 0.0) THEN (year_total#185 / year_total#10) END > CASE WHEN (year_total#4 > 0.0) THEN (year_total#173 / year_total#4) END)
         :- Project [customer_id#0, year_total#4, customer_id#169, customer_first_name#170, customer_last_name#171, year_total#173, year_total#10]
         :  +- SortMergeJoin [customer_id#0], [customer_id#6], Inner
         :     :- SortMergeJoin [customer_id#0], [customer_id#169], Inner
         :     :  :- Sort [customer_id#0 ASC NULLS FIRST], false, 0
         :     :  :  +- Exchange hashpartitioning(customer_id#0, 200), ENSURE_REQUIREMENTS, [plan_id=287]
         :     :  :     +- Filter (isnotnull(year_total#4) AND (year_total#4 > 0.0))
         :     :  :        +- HashAggregate(keys=[c_customer_id#13, c_first_name#20, c_last_name#21, d_year#59], functions=[sum(ss_net_paid#50)])
         :     :  :           +- Exchange hashpartitioning(c_customer_id#13, c_first_name#20, c_last_name#21, d_year#59, 200), ENSURE_REQUIREMENTS, [plan_id=267]
         :     :  :              +- HashAggregate(keys=[c_customer_id#13, c_first_name#20, c_last_name#21, d_year#59], functions=[partial_sum(ss_net_paid#50)])
         :     :  :                 +- Project [c_customer_id#13, c_first_name#20, c_last_name#21, ss_net_paid#50, d_year#59]
         :     :  :                    +- BroadcastHashJoin [ss_sold_date_sk#30], [d_date_sk#53], Inner, BuildRight, false
         :     :  :                       :- Project [c_customer_id#13, c_first_name#20, c_last_name#21, ss_sold_date_sk#30, ss_net_paid#50]
         :     :  :                       :  +- SortMergeJoin [c_customer_sk#12], [ss_customer_sk#33], Inner
         :     :  :                       :     :- Sort [c_customer_sk#12 ASC NULLS FIRST], false, 0
         :     :  :                       :     :  +- Exchange hashpartitioning(c_customer_sk#12, 200), ENSURE_REQUIREMENTS, [plan_id=255]
         :     :  :                       :     :     +- Filter (isnotnull(c_customer_sk#12) AND isnotnull(c_customer_id#13))
         :     :  :                       :     :        +- FileScan parquet tpcds_100_parquet.customer[c_customer_sk#12,c_customer_id#13,c_first_name#20,c_last_name#21] Batched: true, DataFilters: [isnotnull(c_customer_sk#12), isnotnull(c_customer_id#13)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string>
         :     :  :                       :     +- Sort [ss_customer_sk#33 ASC NULLS FIRST], false, 0
         :     :  :                       :        +- Exchange hashpartitioning(ss_customer_sk#33, 200), ENSURE_REQUIREMENTS, [plan_id=256]
         :     :  :                       :           +- Filter (isnotnull(ss_customer_sk#33) AND isnotnull(ss_sold_date_sk#30))
         :     :  :                       :              +- FileScan parquet tpcds_100_parquet.store_sales[ss_sold_date_sk#30,ss_customer_sk#33,ss_net_paid#50] Batched: true, DataFilters: [isnotnull(ss_customer_sk#33), isnotnull(ss_sold_date_sk#30)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_net_paid:double>
         :     :  :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=262]
         :     :  :                          +- Filter (((isnotnull(d_year#59) AND (d_year#59 = 2001)) AND d_year#59 IN (2001,2002)) AND isnotnull(d_date_sk#53))
         :     :  :                             +- FileScan parquet tpcds_100_parquet.date_dim[d_date_sk#53,d_year#59] Batched: true, DataFilters: [isnotnull(d_year#59), (d_year#59 = 2001), d_year#59 IN (2001,2002), isnotnull(d_date_sk#53)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), In(d_year, [2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     :  +- Sort [customer_id#169 ASC NULLS FIRST], false, 0
         :     :     +- Exchange hashpartitioning(customer_id#169, 200), ENSURE_REQUIREMENTS, [plan_id=288]
         :     :        +- HashAggregate(keys=[c_customer_id#656, c_first_name#663, c_last_name#664, d_year#702], functions=[sum(ss_net_paid#693)])
         :     :           +- Exchange hashpartitioning(c_customer_id#656, c_first_name#663, c_last_name#664, d_year#702, 200), ENSURE_REQUIREMENTS, [plan_id=283]
         :     :              +- HashAggregate(keys=[c_customer_id#656, c_first_name#663, c_last_name#664, d_year#702], functions=[partial_sum(ss_net_paid#693)])
         :     :                 +- Project [c_customer_id#656, c_first_name#663, c_last_name#664, ss_net_paid#693, d_year#702]
         :     :                    +- BroadcastHashJoin [ss_sold_date_sk#673], [d_date_sk#696], Inner, BuildRight, false
         :     :                       :- Project [c_customer_id#656, c_first_name#663, c_last_name#664, ss_sold_date_sk#673, ss_net_paid#693]
         :     :                       :  +- SortMergeJoin [c_customer_sk#655], [ss_customer_sk#676], Inner
         :     :                       :     :- Sort [c_customer_sk#655 ASC NULLS FIRST], false, 0
         :     :                       :     :  +- Exchange hashpartitioning(c_customer_sk#655, 200), ENSURE_REQUIREMENTS, [plan_id=271]
         :     :                       :     :     +- Filter (isnotnull(c_customer_sk#655) AND isnotnull(c_customer_id#656))
         :     :                       :     :        +- FileScan parquet tpcds_100_parquet.customer[c_customer_sk#655,c_customer_id#656,c_first_name#663,c_last_name#664] Batched: true, DataFilters: [isnotnull(c_customer_sk#655), isnotnull(c_customer_id#656)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string>
         :     :                       :     +- Sort [ss_customer_sk#676 ASC NULLS FIRST], false, 0
         :     :                       :        +- Exchange hashpartitioning(ss_customer_sk#676, 200), ENSURE_REQUIREMENTS, [plan_id=272]
         :     :                       :           +- Filter (isnotnull(ss_customer_sk#676) AND isnotnull(ss_sold_date_sk#673))
         :     :                       :              +- FileScan parquet tpcds_100_parquet.store_sales[ss_sold_date_sk#673,ss_customer_sk#676,ss_net_paid#693] Batched: true, DataFilters: [isnotnull(ss_customer_sk#676), isnotnull(ss_sold_date_sk#673)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_net_paid:double>
         :     :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=278]
         :     :                          +- Filter (((isnotnull(d_year#702) AND (d_year#702 = 2002)) AND d_year#702 IN (2001,2002)) AND isnotnull(d_date_sk#696))
         :     :                             +- FileScan parquet tpcds_100_parquet.date_dim[d_date_sk#696,d_year#702] Batched: true, DataFilters: [isnotnull(d_year#702), (d_year#702 = 2002), d_year#702 IN (2001,2002), isnotnull(d_date_sk#696)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), In(d_year, [2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     +- Sort [customer_id#6 ASC NULLS FIRST], false, 0
         :        +- Exchange hashpartitioning(customer_id#6, 200), ENSURE_REQUIREMENTS, [plan_id=310]
         :           +- Filter (isnotnull(year_total#10) AND (year_total#10 > 0.0))
         :              +- HashAggregate(keys=[c_customer_id#880, c_first_name#887, c_last_name#888, d_year#937], functions=[sum(ws_net_paid#926)])
         :                 +- Exchange hashpartitioning(c_customer_id#880, c_first_name#887, c_last_name#888, d_year#937, 200), ENSURE_REQUIREMENTS, [plan_id=305]
         :                    +- HashAggregate(keys=[c_customer_id#880, c_first_name#887, c_last_name#888, d_year#937], functions=[partial_sum(ws_net_paid#926)])
         :                       +- Project [c_customer_id#880, c_first_name#887, c_last_name#888, ws_net_paid#926, d_year#937]
         :                          +- BroadcastHashJoin [ws_sold_date_sk#897], [d_date_sk#931], Inner, BuildRight, false
         :                             :- Project [c_customer_id#880, c_first_name#887, c_last_name#888, ws_sold_date_sk#897, ws_net_paid#926]
         :                             :  +- SortMergeJoin [c_customer_sk#879], [ws_bill_customer_sk#901], Inner
         :                             :     :- Sort [c_customer_sk#879 ASC NULLS FIRST], false, 0
         :                             :     :  +- Exchange hashpartitioning(c_customer_sk#879, 200), ENSURE_REQUIREMENTS, [plan_id=293]
         :                             :     :     +- Filter (isnotnull(c_customer_sk#879) AND isnotnull(c_customer_id#880))
         :                             :     :        +- FileScan parquet tpcds_100_parquet.customer[c_customer_sk#879,c_customer_id#880,c_first_name#887,c_last_name#888] Batched: true, DataFilters: [isnotnull(c_customer_sk#879), isnotnull(c_customer_id#880)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string>
         :                             :     +- Sort [ws_bill_customer_sk#901 ASC NULLS FIRST], false, 0
         :                             :        +- Exchange hashpartitioning(ws_bill_customer_sk#901, 200), ENSURE_REQUIREMENTS, [plan_id=294]
         :                             :           +- Filter (isnotnull(ws_bill_customer_sk#901) AND isnotnull(ws_sold_date_sk#897))
         :                             :              +- FileScan parquet tpcds_100_parquet.web_sales[ws_sold_date_sk#897,ws_bill_customer_sk#901,ws_net_paid#926] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#901), isnotnull(ws_sold_date_sk#897)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int,ws_net_paid:double>
         :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=300]
         :                                +- Filter (((isnotnull(d_year#937) AND (d_year#937 = 2001)) AND d_year#937 IN (2001,2002)) AND isnotnull(d_date_sk#931))
         :                                   +- FileScan parquet tpcds_100_parquet.date_dim[d_date_sk#931,d_year#937] Batched: true, DataFilters: [isnotnull(d_year#937), (d_year#937 = 2001), d_year#937 IN (2001,2002), isnotnull(d_date_sk#931)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), In(d_year, [2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         +- Sort [customer_id#181 ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(customer_id#181, 200), ENSURE_REQUIREMENTS, [plan_id=331]
               +- HashAggregate(keys=[c_customer_id#1035, c_first_name#1042, c_last_name#1043, d_year#1092], functions=[sum(ws_net_paid#1081)])
                  +- Exchange hashpartitioning(c_customer_id#1035, c_first_name#1042, c_last_name#1043, d_year#1092, 200), ENSURE_REQUIREMENTS, [plan_id=327]
                     +- HashAggregate(keys=[c_customer_id#1035, c_first_name#1042, c_last_name#1043, d_year#1092], functions=[partial_sum(ws_net_paid#1081)])
                        +- Project [c_customer_id#1035, c_first_name#1042, c_last_name#1043, ws_net_paid#1081, d_year#1092]
                           +- BroadcastHashJoin [ws_sold_date_sk#1052], [d_date_sk#1086], Inner, BuildRight, false
                              :- Project [c_customer_id#1035, c_first_name#1042, c_last_name#1043, ws_sold_date_sk#1052, ws_net_paid#1081]
                              :  +- SortMergeJoin [c_customer_sk#1034], [ws_bill_customer_sk#1056], Inner
                              :     :- Sort [c_customer_sk#1034 ASC NULLS FIRST], false, 0
                              :     :  +- Exchange hashpartitioning(c_customer_sk#1034, 200), ENSURE_REQUIREMENTS, [plan_id=315]
                              :     :     +- Filter (isnotnull(c_customer_sk#1034) AND isnotnull(c_customer_id#1035))
                              :     :        +- FileScan parquet tpcds_100_parquet.customer[c_customer_sk#1034,c_customer_id#1035,c_first_name#1042,c_last_name#1043] Batched: true, DataFilters: [isnotnull(c_customer_sk#1034), isnotnull(c_customer_id#1035)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string>
                              :     +- Sort [ws_bill_customer_sk#1056 ASC NULLS FIRST], false, 0
                              :        +- Exchange hashpartitioning(ws_bill_customer_sk#1056, 200), ENSURE_REQUIREMENTS, [plan_id=316]
                              :           +- Filter (isnotnull(ws_bill_customer_sk#1056) AND isnotnull(ws_sold_date_sk#1052))
                              :              +- FileScan parquet tpcds_100_parquet.web_sales[ws_sold_date_sk#1052,ws_bill_customer_sk#1056,ws_net_paid#1081] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#1056), isnotnull(ws_sold_date_sk#1052)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int,ws_net_paid:double>
                              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=322]
                                 +- Filter (((isnotnull(d_year#1092) AND (d_year#1092 = 2002)) AND d_year#1092 IN (2001,2002)) AND isnotnull(d_date_sk#1086))
                                    +- FileScan parquet tpcds_100_parquet.date_dim[d_date_sk#1086,d_year#1092] Batched: true, DataFilters: [isnotnull(d_year#1092), (d_year#1092 = 2002), d_year#1092 IN (2001,2002), isnotnull(d_date_sk#10..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), In(d_year, [2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>


