// The Round Table
digraph {
	0 [label="nodeID(0) "]
	1 [label="nodeID(1) HashAggregate(keys=[ss_customer_sk#5], functions=[sum(act_sales#0)])"]
	2 [label="nodeID(2) Exchange hashpartitioning(ss_customer_sk#5, 200), ENSURE_REQUIREMENTS, [plan_id=69]"]
	3 [label="nodeID(3) HashAggregate(keys=[ss_customer_sk#5], functions=[partial_sum(act_sales#0)])"]
	4 [label="nodeID(4) Project [ss_customer_sk#5, CASE WHEN isnotnull(sr_return_quantity#35) THEN (cast((ss_quantity#12 - sr_return_quantity#35) as double) * ss_sales_price#15) ELSE (cast(ss_quantity#12 as double) * ss_sales_price#15) END AS act_sales#0]"]
	5 [label="nodeID(5) BroadcastHashJoin [sr_reason_sk#33], [r_reason_sk#45], Inner, BuildRight, false"]
	6 [label="nodeID(6) Project [ss_customer_sk#5, ss_quantity#12, ss_sales_price#15, sr_reason_sk#33, sr_return_quantity#35]"]
	7 [label="nodeID(7) SortMergeJoin [ss_item_sk#4, ss_ticket_number#11L], [sr_item_sk#27, sr_ticket_number#34L], Inner"]
	8 [label="nodeID(8) Sort [ss_item_sk#4 ASC NULLS FIRST, ss_ticket_number#11L ASC NULLS FIRST], false, 0"]
	9 [label="nodeID(9) Exchange hashpartitioning(ss_item_sk#4, ss_ticket_number#11L, 200), ENSURE_REQUIREMENTS, [plan_id=57]"]
	10 [label="nodeID(10) FileScan parquet tpcds_500_parquet.store_sales[ss_item_sk#4,ss_customer_sk#5,ss_ticket_number#11L,ss_quantity#12,ss_sales_price#15"]
	11 [label="nodeID(11) Sort [sr_item_sk#27 ASC NULLS FIRST, sr_ticket_number#34L ASC NULLS FIRST], false, 0"]
	12 [label="nodeID(12) Exchange hashpartitioning(sr_item_sk#27, sr_ticket_number#34L, 200), ENSURE_REQUIREMENTS, [plan_id=58]"]
	13 [label="nodeID(13) Filter ((isnotnull(sr_item_sk#27) AND isnotnull(sr_ticket_number#34L)) AND isnotnull(sr_reason_sk#33))"]
	14 [label="nodeID(14) FileScan parquet tpcds_500_parquet.store_returns[sr_item_sk#27,sr_reason_sk#33,sr_ticket_number#34L,sr_return_quantity#35"]
	15 [label="nodeID(15) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=64]"]
	16 [label="nodeID(16) Project [r_reason_sk#45]"]
	17 [label="nodeID(17) Filter ((isnotnull(r_reason_desc#47) AND (r_reason_desc#47 = reason 28)) AND isnotnull(r_reason_sk#45))"]
	18 [label="nodeID(18) FileScan parquet tpcds_500_parquet.reason[r_reason_sk#45,r_reason_desc#47"]
	1 -> 0
	2 -> 1
	3 -> 2
	4 -> 3
	5 -> 4
	6 -> 5
	7 -> 6
	8 -> 7
	9 -> 8
	10 -> 9
	11 -> 7
	12 -> 11
	13 -> 12
	14 -> 13
	15 -> 5
	16 -> 15
	17 -> 16
	18 -> 17
}
