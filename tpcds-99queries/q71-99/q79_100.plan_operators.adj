// The Round Table
digraph {
	0 [label="nodeID(0) "]
	1 [label="nodeID(1) TakeOrderedAndProject(limit=100, orderBy=[c_last_name#96 ASC NULLS FIRST,c_first_name#95 ASC NULLS FIRST,substr(s_city#75, 1, 30) ASC NULLS FIRST,profit#1 ASC NULLS FIRST], output=[c_last_name#96,c_first_name#95,substr(s_city, 1, 30)#111,ss_ticket_number#11L,amt#0,profit#1])"]
	2 [label="nodeID(2) Project [c_last_name#96, c_first_name#95, substr(s_city#75, 1, 30) AS substr(s_city, 1, 30)#111, ss_ticket_number#11L, amt#0, profit#1, s_city#75]"]
	3 [label="nodeID(3) SortMergeJoin [ss_customer_sk#5], [c_customer_sk#87], Inner"]
	4 [label="nodeID(4) Sort [ss_customer_sk#5 ASC NULLS FIRST], false, 0"]
	5 [label="nodeID(5) Exchange hashpartitioning(ss_customer_sk#5, 200), ENSURE_REQUIREMENTS, [plan_id=113]"]
	6 [label="nodeID(6) HashAggregate(keys=[ss_ticket_number#11L, ss_customer_sk#5, ss_addr_sk#8, s_city#75], functions=[sum(ss_coupon_amt#21), sum(ss_net_profit#24)])"]
	7 [label="nodeID(7) Exchange hashpartitioning(ss_ticket_number#11L, ss_customer_sk#5, ss_addr_sk#8, s_city#75, 200), ENSURE_REQUIREMENTS, [plan_id=109]"]
	8 [label="nodeID(8) HashAggregate(keys=[ss_ticket_number#11L, ss_customer_sk#5, ss_addr_sk#8, s_city#75], functions=[partial_sum(ss_coupon_amt#21), partial_sum(ss_net_profit#24)])"]
	9 [label="nodeID(9) Project [ss_customer_sk#5, ss_addr_sk#8, ss_ticket_number#11L, ss_coupon_amt#21, ss_net_profit#24, s_city#75]"]
	10 [label="nodeID(10) BroadcastHashJoin [ss_hdemo_sk#7], [hd_demo_sk#82], Inner, BuildRight, false"]
	11 [label="nodeID(11) Project [ss_customer_sk#5, ss_hdemo_sk#7, ss_addr_sk#8, ss_ticket_number#11L, ss_coupon_amt#21, ss_net_profit#24, s_city#75]"]
	12 [label="nodeID(12) BroadcastHashJoin [ss_store_sk#9], [s_store_sk#53], Inner, BuildRight, false"]
	13 [label="nodeID(13) Project [ss_customer_sk#5, ss_hdemo_sk#7, ss_addr_sk#8, ss_store_sk#9, ss_ticket_number#11L, ss_coupon_amt#21, ss_net_profit#24]"]
	14 [label="nodeID(14) BroadcastHashJoin [ss_sold_date_sk#2], [d_date_sk#25], Inner, BuildRight, false"]
	15 [label="nodeID(15) Filter (((isnotnull(ss_sold_date_sk#2) AND isnotnull(ss_store_sk#9)) AND isnotnull(ss_hdemo_sk#7)) AND isnotnull(ss_customer_sk#5))"]
	16 [label="nodeID(16) FileScan parquet tpcds_100_parquet.store_sales[ss_sold_date_sk#2,ss_customer_sk#5,ss_hdemo_sk#7,ss_addr_sk#8,ss_store_sk#9,ss_ticket_number#11L,ss_coupon_amt#21,ss_net_profit#24]"]
	17 [label="nodeID(17) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=96]"]
	18 [label="nodeID(18) Project [d_date_sk#25]"]
	19 [label="nodeID(19) Filter (((isnotnull(d_dow#32) AND (d_dow#32 = 1)) AND d_year#31 IN (1999,2000,2001)) AND isnotnull(d_date_sk#25))"]
	20 [label="nodeID(20) FileScan parquet tpcds_100_parquet.date_dim[d_date_sk#25,d_year#31,d_dow#32]"]
	21 [label="nodeID(21) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=100]"]
	22 [label="nodeID(22) Project [s_store_sk#53, s_city#75]"]
	23 [label="nodeID(23) Filter (((isnotnull(s_number_employees#59) AND (s_number_employees#59 >= 200)) AND (s_number_employees#59 <= 295)) AND isnotnull(s_store_sk#53))"]
	24 [label="nodeID(24) FileScan parquet tpcds_100_parquet.store[s_store_sk#53,s_number_employees#59,s_city#75]"]
	25 [label="nodeID(25) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=104]"]
	26 [label="nodeID(26) Project [hd_demo_sk#82]"]
	27 [label="nodeID(27) Filter (((hd_dep_count#85 = 6) OR (hd_vehicle_count#86 > 2)) AND isnotnull(hd_demo_sk#82))"]
	28 [label="nodeID(28) FileScan parquet tpcds_100_parquet.household_demographics[hd_demo_sk#82,hd_dep_count#85,hd_vehicle_count#86]"]
	29 [label="nodeID(29) Sort [c_customer_sk#87 ASC NULLS FIRST], false, 0"]
	30 [label="nodeID(30) Exchange hashpartitioning(c_customer_sk#87, 200), ENSURE_REQUIREMENTS, [plan_id=114]"]
	31 [label="nodeID(31) Filter isnotnull(c_customer_sk#87)"]
	32 [label="nodeID(32) FileScan parquet tpcds_100_parquet.customer[c_customer_sk#87,c_first_name#95,c_last_name#96]"]
	1 -> 0
	2 -> 1
	3 -> 2
	4 -> 3
	5 -> 4
	6 -> 5
	7 -> 6
	8 -> 7
	9 -> 8
	10 -> 9
	11 -> 10
	12 -> 11
	13 -> 12
	14 -> 13
	15 -> 14
	16 -> 15
	17 -> 14
	18 -> 17
	19 -> 18
	20 -> 19
	21 -> 12
	22 -> 21
	23 -> 22
	24 -> 23
	25 -> 10
	26 -> 25
	27 -> 26
	28 -> 27
	29 -> 3
	30 -> 29
	31 -> 30
	32 -> 31
}
