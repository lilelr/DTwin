// The Round Table
digraph {
	0 [label="nodeID(0) "]
	1 [label="nodeID(1) HashAggregate(keys=[], functions=[count(1)])"]
	2 [label="nodeID(2) Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=246]"]
	3 [label="nodeID(3) HashAggregate(keys=[], functions=[partial_count(1)])"]
	4 [label="nodeID(4) Project"]
	5 [label="nodeID(5) SortMergeJoin [coalesce(c_last_name#61, ), isnull(c_last_name#61), coalesce(c_first_name#60, ), isnull(c_first_name#60), coalesce(d_date#26, ), isnull(d_date#26)], [coalesce(c_last_name#221, ), isnull(c_last_name#221), coalesce(c_first_name#220, ), isnull(c_first_name#220), coalesce(d_date#186, ), isnull(d_date#186)], LeftAnti"]
	6 [label="nodeID(6) SortMergeJoin [coalesce(c_last_name#61, ), isnull(c_last_name#61), coalesce(c_first_name#60, ), isnull(c_first_name#60), coalesce(d_date#26, ), isnull(d_date#26)], [coalesce(c_last_name#175, ), isnull(c_last_name#175), coalesce(c_first_name#174, ), isnull(c_first_name#174), coalesce(d_date#140, ), isnull(d_date#140)], LeftAnti"]
	7 [label="nodeID(7) Sort [coalesce(c_last_name#61, ) ASC NULLS FIRST, isnull(c_last_name#61) ASC NULLS FIRST, coalesce(c_first_name#60, ) ASC NULLS FIRST, isnull(c_first_name#60) ASC NULLS FIRST, coalesce(d_date#26, ) ASC NULLS FIRST, isnull(d_date#26) ASC NULLS FIRST], false, 0"]
	8 [label="nodeID(8) Exchange hashpartitioning(coalesce(c_last_name#61, ), isnull(c_last_name#61), coalesce(c_first_name#60, ), isnull(c_first_name#60), coalesce(d_date#26, ), isnull(d_date#26), 200), ENSURE_REQUIREMENTS, [plan_id=218]"]
	9 [label="nodeID(9) HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[])"]
	10 [label="nodeID(10) Exchange hashpartitioning(c_last_name#61, c_first_name#60, d_date#26, 200), ENSURE_REQUIREMENTS, [plan_id=199]"]
	11 [label="nodeID(11) HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[])"]
	12 [label="nodeID(12) Project [c_last_name#61, c_first_name#60, d_date#26]"]
	13 [label="nodeID(13) SortMergeJoin [ss_customer_sk#4], [c_customer_sk#52], Inner"]
	14 [label="nodeID(14) Sort [ss_customer_sk#4 ASC NULLS FIRST], false, 0"]
	15 [label="nodeID(15) Exchange hashpartitioning(ss_customer_sk#4, 200), ENSURE_REQUIREMENTS, [plan_id=191]"]
	16 [label="nodeID(16) Project [ss_customer_sk#4, d_date#26]"]
	17 [label="nodeID(17) BroadcastHashJoin [ss_sold_date_sk#1], [d_date_sk#24], Inner, BuildRight, false"]
	18 [label="nodeID(18) Filter (isnotnull(ss_sold_date_sk#1) AND isnotnull(ss_customer_sk#4))"]
	19 [label="nodeID(19) FileScan parquet tpcds_100_parquet.store_sales[ss_sold_date_sk#1,ss_customer_sk#4]"]
	20 [label="nodeID(20) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=186]"]
	21 [label="nodeID(21) Project [d_date_sk#24, d_date#26]"]
	22 [label="nodeID(22) Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1200)) AND (d_month_seq#27 <= 1211)) AND isnotnull(d_date_sk#24))"]
	23 [label="nodeID(23) FileScan parquet tpcds_100_parquet.date_dim[d_date_sk#24,d_date#26,d_month_seq#27]"]
	24 [label="nodeID(24) Sort [c_customer_sk#52 ASC NULLS FIRST], false, 0"]
	25 [label="nodeID(25) Exchange hashpartitioning(c_customer_sk#52, 200), ENSURE_REQUIREMENTS, [plan_id=192]"]
	26 [label="nodeID(26) Filter isnotnull(c_customer_sk#52)"]
	27 [label="nodeID(27) FileScan parquet tpcds_100_parquet.customer[c_customer_sk#52,c_first_name#60,c_last_name#61]"]
	28 [label="nodeID(28) Sort [coalesce(c_last_name#175, ) ASC NULLS FIRST, isnull(c_last_name#175) ASC NULLS FIRST, coalesce(c_first_name#174, ) ASC NULLS FIRST, isnull(c_first_name#174) ASC NULLS FIRST, coalesce(d_date#140, ) ASC NULLS FIRST, isnull(d_date#140) ASC NULLS FIRST], false, 0"]
	29 [label="nodeID(29) Exchange hashpartitioning(coalesce(c_last_name#175, ), isnull(c_last_name#175), coalesce(c_first_name#174, ), isnull(c_first_name#174), coalesce(d_date#140, ), isnull(d_date#140), 200), ENSURE_REQUIREMENTS, [plan_id=219]"]
	30 [label="nodeID(30) HashAggregate(keys=[c_last_name#175, c_first_name#174, d_date#140], functions=[])"]
	31 [label="nodeID(31) Exchange hashpartitioning(c_last_name#175, c_first_name#174, d_date#140, 200), ENSURE_REQUIREMENTS, [plan_id=214]"]
	32 [label="nodeID(32) HashAggregate(keys=[c_last_name#175, c_first_name#174, d_date#140], functions=[])"]
	33 [label="nodeID(33) Project [c_last_name#175, c_first_name#174, d_date#140]"]
	34 [label="nodeID(34) SortMergeJoin [cs_bill_customer_sk#73], [c_customer_sk#166], Inner"]
	35 [label="nodeID(35) Sort [cs_bill_customer_sk#73 ASC NULLS FIRST], false, 0"]
	36 [label="nodeID(36) Exchange hashpartitioning(cs_bill_customer_sk#73, 200), ENSURE_REQUIREMENTS, [plan_id=206]"]
	37 [label="nodeID(37) Project [cs_bill_customer_sk#73, d_date#140]"]
	38 [label="nodeID(38) BroadcastHashJoin [cs_sold_date_sk#70], [d_date_sk#138], Inner, BuildRight, false"]
	39 [label="nodeID(39) Filter (isnotnull(cs_sold_date_sk#70) AND isnotnull(cs_bill_customer_sk#73))"]
	40 [label="nodeID(40) FileScan parquet tpcds_100_parquet.catalog_sales[cs_sold_date_sk#70,cs_bill_customer_sk#73]"]
	41 [label="nodeID(41) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=201]"]
	42 [label="nodeID(42) Project [d_date_sk#138, d_date#140]"]
	43 [label="nodeID(43) Filter (((isnotnull(d_month_seq#141) AND (d_month_seq#141 >= 1200)) AND (d_month_seq#141 <= 1211)) AND isnotnull(d_date_sk#138))"]
	44 [label="nodeID(44) FileScan parquet tpcds_100_parquet.date_dim[d_date_sk#138,d_date#140,d_month_seq#141]"]
	45 [label="nodeID(45) Sort [c_customer_sk#166 ASC NULLS FIRST], false, 0"]
	46 [label="nodeID(46) Exchange hashpartitioning(c_customer_sk#166, 200), ENSURE_REQUIREMENTS, [plan_id=207]"]
	47 [label="nodeID(47) Filter isnotnull(c_customer_sk#166)"]
	48 [label="nodeID(48) FileScan parquet tpcds_100_parquet.customer[c_customer_sk#166,c_first_name#174,c_last_name#175]"]
	49 [label="nodeID(49) Sort [coalesce(c_last_name#221, ) ASC NULLS FIRST, isnull(c_last_name#221) ASC NULLS FIRST, coalesce(c_first_name#220, ) ASC NULLS FIRST, isnull(c_first_name#220) ASC NULLS FIRST, coalesce(d_date#186, ) ASC NULLS FIRST, isnull(d_date#186) ASC NULLS FIRST], false, 0"]
	50 [label="nodeID(50) Exchange hashpartitioning(coalesce(c_last_name#221, ), isnull(c_last_name#221), coalesce(c_first_name#220, ), isnull(c_first_name#220), coalesce(d_date#186, ), isnull(d_date#186), 200), ENSURE_REQUIREMENTS, [plan_id=240]"]
	51 [label="nodeID(51) HashAggregate(keys=[c_last_name#221, c_first_name#220, d_date#186], functions=[])"]
	52 [label="nodeID(52) Exchange hashpartitioning(c_last_name#221, c_first_name#220, d_date#186, 200), ENSURE_REQUIREMENTS, [plan_id=236]"]
	53 [label="nodeID(53) HashAggregate(keys=[c_last_name#221, c_first_name#220, d_date#186], functions=[])"]
	54 [label="nodeID(54) Project [c_last_name#221, c_first_name#220, d_date#186]"]
	55 [label="nodeID(55) SortMergeJoin [ws_bill_customer_sk#108], [c_customer_sk#212], Inner"]
	56 [label="nodeID(56) Sort [ws_bill_customer_sk#108 ASC NULLS FIRST], false, 0"]
	57 [label="nodeID(57) Exchange hashpartitioning(ws_bill_customer_sk#108, 200), ENSURE_REQUIREMENTS, [plan_id=228]"]
	58 [label="nodeID(58) Project [ws_bill_customer_sk#108, d_date#186]"]
	59 [label="nodeID(59) BroadcastHashJoin [ws_sold_date_sk#104], [d_date_sk#184], Inner, BuildRight, false"]
	60 [label="nodeID(60) Filter (isnotnull(ws_sold_date_sk#104) AND isnotnull(ws_bill_customer_sk#108))"]
	61 [label="nodeID(61) FileScan parquet tpcds_100_parquet.web_sales[ws_sold_date_sk#104,ws_bill_customer_sk#108]"]
	62 [label="nodeID(62) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=223]"]
	63 [label="nodeID(63) Project [d_date_sk#184, d_date#186]"]
	64 [label="nodeID(64) Filter (((isnotnull(d_month_seq#187) AND (d_month_seq#187 >= 1200)) AND (d_month_seq#187 <= 1211)) AND isnotnull(d_date_sk#184))"]
	65 [label="nodeID(65) FileScan parquet tpcds_100_parquet.date_dim[d_date_sk#184,d_date#186,d_month_seq#187]"]
	66 [label="nodeID(66) Sort [c_customer_sk#212 ASC NULLS FIRST], false, 0"]
	67 [label="nodeID(67) Exchange hashpartitioning(c_customer_sk#212, 200), ENSURE_REQUIREMENTS, [plan_id=229]"]
	68 [label="nodeID(68) Filter isnotnull(c_customer_sk#212)"]
	69 [label="nodeID(69) FileScan parquet tpcds_100_parquet.customer[c_customer_sk#212,c_first_name#220,c_last_name#221]"]
	1 -> 0
	2 -> 1
	3 -> 2
	4 -> 3
	5 -> 4
	6 -> 5
	7 -> 6
	8 -> 7
	9 -> 8
	10 -> 9
	11 -> 10
	12 -> 11
	13 -> 12
	14 -> 13
	15 -> 14
	16 -> 15
	17 -> 16
	18 -> 17
	19 -> 18
	20 -> 17
	21 -> 20
	22 -> 21
	23 -> 22
	24 -> 13
	25 -> 24
	26 -> 25
	27 -> 26
	28 -> 6
	29 -> 28
	30 -> 29
	31 -> 30
	32 -> 31
	33 -> 32
	34 -> 33
	35 -> 34
	36 -> 35
	37 -> 36
	38 -> 37
	39 -> 38
	40 -> 39
	41 -> 38
	42 -> 41
	43 -> 42
	44 -> 43
	45 -> 34
	46 -> 45
	47 -> 46
	48 -> 47
	49 -> 5
	50 -> 49
	51 -> 50
	52 -> 51
	53 -> 52
	54 -> 53
	55 -> 54
	56 -> 55
	57 -> 56
	58 -> 57
	59 -> 58
	60 -> 59
	61 -> 60
	62 -> 59
	63 -> 62
	64 -> 63
	65 -> 64
	66 -> 55
	67 -> 66
	68 -> 67
	69 -> 68
}
