== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[c_last_name#96 ASC NULLS FIRST,c_first_name#95 ASC NULLS FIRST,substr(s_city#75, 1, 30) ASC NULLS FIRST,profit#1 ASC NULLS FIRST], output=[c_last_name#96,c_first_name#95,substr(s_city, 1, 30)#111,ss_ticket_number#11L,amt#0,profit#1])
   +- Project [c_last_name#96, c_first_name#95, substr(s_city#75, 1, 30) AS substr(s_city, 1, 30)#111, ss_ticket_number#11L, amt#0, profit#1, s_city#75]
      +- SortMergeJoin [ss_customer_sk#5], [c_customer_sk#87], Inner
         :- Sort [ss_customer_sk#5 ASC NULLS FIRST], false, 0
         :  +- Exchange hashpartitioning(ss_customer_sk#5, 200), ENSURE_REQUIREMENTS, [plan_id=113]
         :     +- HashAggregate(keys=[ss_ticket_number#11L, ss_customer_sk#5, ss_addr_sk#8, s_city#75], functions=[sum(ss_coupon_amt#21), sum(ss_net_profit#24)])
         :        +- Exchange hashpartitioning(ss_ticket_number#11L, ss_customer_sk#5, ss_addr_sk#8, s_city#75, 200), ENSURE_REQUIREMENTS, [plan_id=109]
         :           +- HashAggregate(keys=[ss_ticket_number#11L, ss_customer_sk#5, ss_addr_sk#8, s_city#75], functions=[partial_sum(ss_coupon_amt#21), partial_sum(ss_net_profit#24)])
         :              +- Project [ss_customer_sk#5, ss_addr_sk#8, ss_ticket_number#11L, ss_coupon_amt#21, ss_net_profit#24, s_city#75]
         :                 +- BroadcastHashJoin [ss_hdemo_sk#7], [hd_demo_sk#82], Inner, BuildRight, false
         :                    :- Project [ss_customer_sk#5, ss_hdemo_sk#7, ss_addr_sk#8, ss_ticket_number#11L, ss_coupon_amt#21, ss_net_profit#24, s_city#75]
         :                    :  +- BroadcastHashJoin [ss_store_sk#9], [s_store_sk#53], Inner, BuildRight, false
         :                    :     :- Project [ss_customer_sk#5, ss_hdemo_sk#7, ss_addr_sk#8, ss_store_sk#9, ss_ticket_number#11L, ss_coupon_amt#21, ss_net_profit#24]
         :                    :     :  +- BroadcastHashJoin [ss_sold_date_sk#2], [d_date_sk#25], Inner, BuildRight, false
         :                    :     :     :- Filter (((isnotnull(ss_sold_date_sk#2) AND isnotnull(ss_store_sk#9)) AND isnotnull(ss_hdemo_sk#7)) AND isnotnull(ss_customer_sk#5))
         :                    :     :     :  +- FileScan parquet tpcds_100_parquet.store_sales[ss_sold_date_sk#2,ss_customer_sk#5,ss_hdemo_sk#7,ss_addr_sk#8,ss_store_sk#9,ss_ticket_number#11L,ss_coupon_amt#21,ss_net_profit#24] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#2), isnotnull(ss_store_sk#9), isnotnull(ss_hdemo_sk#7), isnotnull(ss_c..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_hdemo_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_t...
         :                    :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=96]
         :                    :     :        +- Project [d_date_sk#25]
         :                    :     :           +- Filter (((isnotnull(d_dow#32) AND (d_dow#32 = 1)) AND d_year#31 IN (1999,2000,2001)) AND isnotnull(d_date_sk#25))
         :                    :     :              +- FileScan parquet tpcds_100_parquet.date_dim[d_date_sk#25,d_year#31,d_dow#32] Batched: true, DataFilters: [isnotnull(d_dow#32), (d_dow#32 = 1), d_year#31 IN (1999,2000,2001), isnotnull(d_date_sk#25)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_dow), EqualTo(d_dow,1), In(d_year, [1999,2000,2001]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_dow:int>
         :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=100]
         :                    :        +- Project [s_store_sk#53, s_city#75]
         :                    :           +- Filter (((isnotnull(s_number_employees#59) AND (s_number_employees#59 >= 200)) AND (s_number_employees#59 <= 295)) AND isnotnull(s_store_sk#53))
         :                    :              +- FileScan parquet tpcds_100_parquet.store[s_store_sk#53,s_number_employees#59,s_city#75] Batched: true, DataFilters: [isnotnull(s_number_employees#59), (s_number_employees#59 >= 200), (s_number_employees#59 <= 295)..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_number_employees), GreaterThanOrEqual(s_number_employees,200), LessThanOrEqual(s_num..., ReadSchema: struct<s_store_sk:int,s_number_employees:int,s_city:string>
         :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=104]
         :                       +- Project [hd_demo_sk#82]
         :                          +- Filter (((hd_dep_count#85 = 6) OR (hd_vehicle_count#86 > 2)) AND isnotnull(hd_demo_sk#82))
         :                             +- FileScan parquet tpcds_100_parquet.household_demographics[hd_demo_sk#82,hd_dep_count#85,hd_vehicle_count#86] Batched: true, DataFilters: [((hd_dep_count#85 = 6) OR (hd_vehicle_count#86 > 2)), isnotnull(hd_demo_sk#82)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/household_..., PartitionFilters: [], PushedFilters: [Or(EqualTo(hd_dep_count,6),GreaterThan(hd_vehicle_count,2)), IsNotNull(hd_demo_sk)], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>
         +- Sort [c_customer_sk#87 ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(c_customer_sk#87, 200), ENSURE_REQUIREMENTS, [plan_id=114]
               +- Filter isnotnull(c_customer_sk#87)
                  +- FileScan parquet tpcds_100_parquet.customer[c_customer_sk#87,c_first_name#95,c_last_name#96] Batched: true, DataFilters: [isnotnull(c_customer_sk#87)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://p09:8999/BenchmarkData/Tpcds/tpcds_100/tpcds_parquet/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>


