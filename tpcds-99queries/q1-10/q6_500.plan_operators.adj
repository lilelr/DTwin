// The Round Table
digraph {
	0 [label="nodeID(0) "]
	1 [label="nodeID(1) Filter (cnt#1L >= 10)"]
	2 [label="nodeID(2) HashAggregate(keys=[ca_state#13], functions=[count(1)])"]
	3 [label="nodeID(3) Exchange hashpartitioning(ca_state#13, 200), ENSURE_REQUIREMENTS, [plan_id=188]"]
	4 [label="nodeID(4) HashAggregate(keys=[ca_state#13], functions=[partial_count(1)])"]
	5 [label="nodeID(5) Project [ca_state#13]"]
	6 [label="nodeID(6) SortMergeJoin [ss_item_sk#38], [i_item_sk#87], Inner"]
	7 [label="nodeID(7) Sort [ss_item_sk#38 ASC NULLS FIRST], false, 0"]
	8 [label="nodeID(8) Exchange hashpartitioning(ss_item_sk#38, 200), ENSURE_REQUIREMENTS, [plan_id=180]"]
	9 [label="nodeID(9) Project [ca_state#13, ss_item_sk#38]"]
	10 [label="nodeID(10) BroadcastHashJoin [ss_sold_date_sk#36], [d_date_sk#59], Inner, BuildRight, false"]
	11 [label="nodeID(11) Project [ca_state#13, ss_sold_date_sk#36, ss_item_sk#38]"]
	12 [label="nodeID(12) SortMergeJoin [c_customer_sk#18], [ss_customer_sk#39], Inner"]
	13 [label="nodeID(13) Sort [c_customer_sk#18 ASC NULLS FIRST], false, 0"]
	14 [label="nodeID(14) Exchange hashpartitioning(c_customer_sk#18, 200), ENSURE_REQUIREMENTS, [plan_id=161]"]
	15 [label="nodeID(15) Project [ca_state#13, c_customer_sk#18]"]
	16 [label="nodeID(16) BroadcastHashJoin [ca_address_sk#5], [c_current_addr_sk#22], Inner, BuildLeft, false"]
	17 [label="nodeID(17) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=156]"]
	18 [label="nodeID(18) Filter isnotnull(ca_address_sk#5)"]
	19 [label="nodeID(19) FileScan parquet tpcds_500_parquet.customer_address[ca_address_sk#5,ca_state#13"]
	20 [label="nodeID(20) Filter (isnotnull(c_current_addr_sk#22) AND isnotnull(c_customer_sk#18))"]
	21 [label="nodeID(21) FileScan parquet tpcds_500_parquet.customer[c_customer_sk#18,c_current_addr_sk#22"]
	22 [label="nodeID(22) Sort [ss_customer_sk#39 ASC NULLS FIRST], false, 0"]
	23 [label="nodeID(23) Exchange hashpartitioning(ss_customer_sk#39, 200), ENSURE_REQUIREMENTS, [plan_id=162]"]
	24 [label="nodeID(24) Filter ((isnotnull(ss_customer_sk#39) AND isnotnull(ss_sold_date_sk#36)) AND isnotnull(ss_item_sk#38))"]
	25 [label="nodeID(25) FileScan parquet tpcds_500_parquet.store_sales[ss_sold_date_sk#36,ss_item_sk#38,ss_customer_sk#39"]
	26 [label="nodeID(26) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=168]"]
	27 [label="nodeID(27) Project [d_date_sk#59]"]
	28 [label="nodeID(28) Filter ((isnotnull(d_month_seq#62) AND (d_month_seq#62 = Subquery subquery#2, [id=#127])) AND isnotnull(d_date_sk#59))"]
	29 [label="nodeID(29) Subquery subquery#2, [id=#127]"]
	30 [label="nodeID(30) AdaptiveSparkPlan isFinalPlan=false"]
	31 [label="nodeID(31) HashAggregate(keys=[d_month_seq#119], functions=[])"]
	32 [label="nodeID(32) Exchange hashpartitioning(d_month_seq#119, 200), ENSURE_REQUIREMENTS, [plan_id=125]"]
	33 [label="nodeID(33) HashAggregate(keys=[d_month_seq#119], functions=[])"]
	34 [label="nodeID(34) Project [d_month_seq#119]"]
	35 [label="nodeID(35) Filter (((isnotnull(d_year#122) AND isnotnull(d_moy#124)) AND (d_year#122 = 2001)) AND (d_moy#124 = 1))"]
	36 [label="nodeID(36) FileScan parquet tpcds_500_parquet.date_dim[d_month_seq#119,d_year#122,d_moy#124"]
	37 [label="nodeID(37) FileScan parquet tpcds_500_parquet.date_dim[d_date_sk#59,d_month_seq#62"]
	38 [label="nodeID(38) Sort [i_item_sk#87 ASC NULLS FIRST], false, 0"]
	39 [label="nodeID(39) Exchange hashpartitioning(i_item_sk#87, 200), ENSURE_REQUIREMENTS, [plan_id=181]"]
	40 [label="nodeID(40) Project [i_item_sk#87]"]
	41 [label="nodeID(41) BroadcastHashJoin [i_category#99], [i_category#156], Inner, BuildRight, (i_current_price#92 > (1.2 * avg(i_current_price)#112)), false"]
	42 [label="nodeID(42) Filter ((isnotnull(i_current_price#92) AND isnotnull(i_category#99)) AND isnotnull(i_item_sk#87))"]
	43 [label="nodeID(43) FileScan parquet tpcds_500_parquet.item[i_item_sk#87,i_current_price#92,i_category#99"]
	44 [label="nodeID(44) BroadcastExchange HashedRelationBroadcastMode(List(input[1, string, true]),false), [plan_id=175]"]
	45 [label="nodeID(45) Filter isnotnull(avg(i_current_price)#112)"]
	46 [label="nodeID(46) HashAggregate(keys=[i_category#156], functions=[avg(i_current_price#149)])"]
	47 [label="nodeID(47) Exchange hashpartitioning(i_category#156, 200), ENSURE_REQUIREMENTS, [plan_id=171]"]
	48 [label="nodeID(48) HashAggregate(keys=[i_category#156], functions=[partial_avg(i_current_price#149)])"]
	49 [label="nodeID(49) Filter isnotnull(i_category#156)"]
	50 [label="nodeID(50) FileScan parquet tpcds_500_parquet.item[i_current_price#149,i_category#156"]
	1 -> 0
	2 -> 1
	3 -> 2
	4 -> 3
	5 -> 4
	6 -> 5
	7 -> 6
	8 -> 7
	9 -> 8
	10 -> 9
	11 -> 10
	12 -> 11
	13 -> 12
	14 -> 13
	15 -> 14
	16 -> 15
	17 -> 16
	18 -> 17
	19 -> 18
	20 -> 16
	21 -> 20
	22 -> 12
	23 -> 22
	24 -> 23
	25 -> 24
	26 -> 10
	27 -> 26
	28 -> 27
	29 -> 28
	30 -> 29
	31 -> 30
	32 -> 31
	33 -> 32
	34 -> 33
	35 -> 34
	36 -> 35
	37 -> 28
	38 -> 6
	39 -> 38
	40 -> 39
	41 -> 40
	42 -> 41
	43 -> 42
	44 -> 41
	45 -> 44
	46 -> 45
	47 -> 46
	48 -> 47
	49 -> 48
	50 -> 49
}
