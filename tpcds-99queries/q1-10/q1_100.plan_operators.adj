// The Round Table
digraph {
	0 [label="nodeID(0) "]
	1 [label="nodeID(1) TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#82 ASC NULLS FIRST], output=[c_customer_id#82])"]
	2 [label="nodeID(2) Project [c_customer_id#82]"]
	3 [label="nodeID(3) SortMergeJoin [ctr_customer_sk#1], [c_customer_sk#81], Inner"]
	4 [label="nodeID(4) Sort [ctr_customer_sk#1 ASC NULLS FIRST], false, 0"]
	5 [label="nodeID(5) Exchange hashpartitioning(ctr_customer_sk#1, 200), ENSURE_REQUIREMENTS, [plan_id=175]"]
	6 [label="nodeID(6) Project [ctr_customer_sk#1]"]
	7 [label="nodeID(7) BroadcastHashJoin [ctr_store_sk#2], [s_store_sk#52], Inner, BuildRight, false"]
	8 [label="nodeID(8) Project [ctr_customer_sk#1, ctr_store_sk#2]"]
	9 [label="nodeID(9) SortMergeJoin [ctr_store_sk#2], [ctr_store_sk#2#107], Inner, (ctr_total_return#3 > (avg(ctr_total_return) * 1.2)#103)"]
	10 [label="nodeID(10) Sort [ctr_store_sk#2 ASC NULLS FIRST], false, 0"]
	11 [label="nodeID(11) Exchange hashpartitioning(ctr_store_sk#2, 200), ENSURE_REQUIREMENTS, [plan_id=164]"]
	12 [label="nodeID(12) Filter isnotnull(ctr_total_return#3)"]
	13 [label="nodeID(13) HashAggregate(keys=[sr_customer_sk#7, sr_store_sk#11], functions=[sum(sr_return_amt#15)])"]
	14 [label="nodeID(14) Exchange hashpartitioning(sr_customer_sk#7, sr_store_sk#11, 200), ENSURE_REQUIREMENTS, [plan_id=147]"]
	15 [label="nodeID(15) HashAggregate(keys=[sr_customer_sk#7, sr_store_sk#11], functions=[partial_sum(sr_return_amt#15)])"]
	16 [label="nodeID(16) Project [sr_customer_sk#7, sr_store_sk#11, sr_return_amt#15]"]
	17 [label="nodeID(17) BroadcastHashJoin [sr_returned_date_sk#4], [d_date_sk#24], Inner, BuildRight, false"]
	18 [label="nodeID(18) Filter ((isnotnull(sr_returned_date_sk#4) AND isnotnull(sr_store_sk#11)) AND isnotnull(sr_customer_sk#7))"]
	19 [label="nodeID(19) FileScan parquet tpcds_100_parquet.store_returns[sr_returned_date_sk#4,sr_customer_sk#7,sr_store_sk#11,sr_return_amt#15]"]
	20 [label="nodeID(20) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=142]"]
	21 [label="nodeID(21) Project [d_date_sk#24]"]
	22 [label="nodeID(22) Filter ((isnotnull(d_year#30) AND (d_year#30 = 2000)) AND isnotnull(d_date_sk#24))"]
	23 [label="nodeID(23) FileScan parquet tpcds_100_parquet.date_dim[d_date_sk#24,d_year#30]"]
	24 [label="nodeID(24) Sort [ctr_store_sk#2#107 ASC NULLS FIRST], false, 0"]
	25 [label="nodeID(25) Filter isnotnull((avg(ctr_total_return) * 1.2)#103)"]
	26 [label="nodeID(26) HashAggregate(keys=[ctr_store_sk#2], functions=[avg(ctr_total_return#3)])"]
	27 [label="nodeID(27) Exchange hashpartitioning(ctr_store_sk#2, 200), ENSURE_REQUIREMENTS, [plan_id=159]"]
	28 [label="nodeID(28) HashAggregate(keys=[ctr_store_sk#2], functions=[partial_avg(ctr_total_return#3)])"]
	29 [label="nodeID(29) HashAggregate(keys=[sr_customer_sk#7, sr_store_sk#11], functions=[sum(sr_return_amt#15)])"]
	30 [label="nodeID(30) Exchange hashpartitioning(sr_customer_sk#7, sr_store_sk#11, 200), ENSURE_REQUIREMENTS, [plan_id=155]"]
	31 [label="nodeID(31) HashAggregate(keys=[sr_customer_sk#7, sr_store_sk#11], functions=[partial_sum(sr_return_amt#15)])"]
	32 [label="nodeID(32) Project [sr_customer_sk#7, sr_store_sk#11, sr_return_amt#15]"]
	33 [label="nodeID(33) BroadcastHashJoin [sr_returned_date_sk#4], [d_date_sk#24], Inner, BuildRight, false"]
	34 [label="nodeID(34) Filter (isnotnull(sr_returned_date_sk#4) AND isnotnull(sr_store_sk#11))"]
	35 [label="nodeID(35) FileScan parquet tpcds_100_parquet.store_returns[sr_returned_date_sk#4,sr_customer_sk#7,sr_store_sk#11,sr_return_amt#15]"]
	36 [label="nodeID(36) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=150]"]
	37 [label="nodeID(37) Project [d_date_sk#24]"]
	38 [label="nodeID(38) Filter ((isnotnull(d_year#30) AND (d_year#30 = 2000)) AND isnotnull(d_date_sk#24))"]
	39 [label="nodeID(39) FileScan parquet tpcds_100_parquet.date_dim[d_date_sk#24,d_year#30]"]
	40 [label="nodeID(40) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=170]"]
	41 [label="nodeID(41) Project [s_store_sk#52]"]
	42 [label="nodeID(42) Filter ((isnotnull(s_state#76) AND (s_state#76 = TN)) AND isnotnull(s_store_sk#52))"]
	43 [label="nodeID(43) FileScan parquet tpcds_100_parquet.store[s_store_sk#52,s_state#76]"]
	44 [label="nodeID(44) Sort [c_customer_sk#81 ASC NULLS FIRST], false, 0"]
	45 [label="nodeID(45) Exchange hashpartitioning(c_customer_sk#81, 200), ENSURE_REQUIREMENTS, [plan_id=176]"]
	46 [label="nodeID(46) Filter isnotnull(c_customer_sk#81)"]
	47 [label="nodeID(47) FileScan parquet tpcds_100_parquet.customer[c_customer_sk#81,c_customer_id#82]"]
	1 -> 0
	2 -> 1
	3 -> 2
	4 -> 3
	5 -> 4
	6 -> 5
	7 -> 6
	8 -> 7
	9 -> 8
	10 -> 9
	11 -> 10
	12 -> 11
	13 -> 12
	14 -> 13
	15 -> 14
	16 -> 15
	17 -> 16
	18 -> 17
	19 -> 18
	20 -> 17
	21 -> 20
	22 -> 21
	23 -> 22
	24 -> 9
	25 -> 24
	26 -> 25
	27 -> 26
	28 -> 27
	29 -> 28
	30 -> 29
	31 -> 30
	32 -> 31
	33 -> 32
	34 -> 33
	35 -> 34
	36 -> 33
	37 -> 36
	38 -> 37
	39 -> 38
	40 -> 7
	41 -> 40
	42 -> 41
	43 -> 42
	44 -> 3
	45 -> 44
	46 -> 45
	47 -> 46
}
