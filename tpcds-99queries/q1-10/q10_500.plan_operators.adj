// The Round Table
digraph {
	0 [label="nodeID(0) "]
	1 [label="nodeID(1) HashAggregate(keys=[cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], functions=[count(1)])"]
	2 [label="nodeID(2) Exchange hashpartitioning(cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54, 200), ENSURE_REQUIREMENTS, [plan_id=201]"]
	3 [label="nodeID(3) HashAggregate(keys=[cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], functions=[partial_count(1)])"]
	4 [label="nodeID(4) Project [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54]"]
	5 [label="nodeID(5) BroadcastHashJoin [c_current_cdemo_sk#17], [cd_demo_sk#46], Inner, BuildRight, false"]
	6 [label="nodeID(6) Project [c_current_cdemo_sk#17]"]
	7 [label="nodeID(7) BroadcastHashJoin [c_current_addr_sk#19], [ca_address_sk#33], Inner, BuildRight, false"]
	8 [label="nodeID(8) Project [c_current_cdemo_sk#17, c_current_addr_sk#19]"]
	9 [label="nodeID(9) Filter (exists#251 OR exists#252)"]
	10 [label="nodeID(10) SortMergeJoin [c_customer_sk#15], [cs_ship_customer_sk#150], ExistenceJoin(exists#252)"]
	11 [label="nodeID(11) SortMergeJoin [c_customer_sk#15], [ws_bill_customer_sk#112], ExistenceJoin(exists#251)"]
	12 [label="nodeID(12) SortMergeJoin [c_customer_sk#15], [ss_customer_sk#58], LeftSemi"]
	13 [label="nodeID(13) Sort [c_customer_sk#15 ASC NULLS FIRST], false, 0"]
	14 [label="nodeID(14) Exchange hashpartitioning(c_customer_sk#15, 200), ENSURE_REQUIREMENTS, [plan_id=168]"]
	15 [label="nodeID(15) Filter (isnotnull(c_current_addr_sk#19) AND isnotnull(c_current_cdemo_sk#17))"]
	16 [label="nodeID(16) FileScan parquet tpcds_500_parquet.customer[c_customer_sk#15,c_current_cdemo_sk#17,c_current_addr_sk#19"]
	17 [label="nodeID(17) Sort [ss_customer_sk#58 ASC NULLS FIRST], false, 0"]
	18 [label="nodeID(18) Exchange hashpartitioning(ss_customer_sk#58, 200), ENSURE_REQUIREMENTS, [plan_id=169]"]
	19 [label="nodeID(19) Project [ss_customer_sk#58]"]
	20 [label="nodeID(20) BroadcastHashJoin [ss_sold_date_sk#55], [d_date_sk#78], Inner, BuildRight, false"]
	21 [label="nodeID(21) Filter isnotnull(ss_sold_date_sk#55)"]
	22 [label="nodeID(22) FileScan parquet tpcds_500_parquet.store_sales[ss_sold_date_sk#55,ss_customer_sk#58"]
	23 [label="nodeID(23) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=163]"]
	24 [label="nodeID(24) Project [d_date_sk#78]"]
	25 [label="nodeID(25) Filter (((((isnotnull(d_year#84) AND isnotnull(d_moy#86)) AND (d_year#84 = 2002)) AND (d_moy#86 >= 1)) AND (d_moy#86 <= 4)) AND isnotnull(d_date_sk#78))"]
	26 [label="nodeID(26) FileScan parquet tpcds_500_parquet.date_dim[d_date_sk#78,d_year#84,d_moy#86"]
	27 [label="nodeID(27) Sort [ws_bill_customer_sk#112 ASC NULLS FIRST], false, 0"]
	28 [label="nodeID(28) Exchange hashpartitioning(ws_bill_customer_sk#112, 200), ENSURE_REQUIREMENTS, [plan_id=178]"]
	29 [label="nodeID(29) Project [ws_bill_customer_sk#112]"]
	30 [label="nodeID(30) BroadcastHashJoin [ws_sold_date_sk#108], [d_date_sk#181], Inner, BuildRight, false"]
	31 [label="nodeID(31) Filter isnotnull(ws_sold_date_sk#108)"]
	32 [label="nodeID(32) FileScan parquet tpcds_500_parquet.web_sales[ws_sold_date_sk#108,ws_bill_customer_sk#112"]
	33 [label="nodeID(33) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=173]"]
	34 [label="nodeID(34) Project [d_date_sk#181]"]
	35 [label="nodeID(35) Filter (((((isnotnull(d_year#187) AND isnotnull(d_moy#189)) AND (d_year#187 = 2002)) AND (d_moy#189 >= 1)) AND (d_moy#189 <= 4)) AND isnotnull(d_date_sk#181))"]
	36 [label="nodeID(36) FileScan parquet tpcds_500_parquet.date_dim[d_date_sk#181,d_year#187,d_moy#189"]
	37 [label="nodeID(37) Sort [cs_ship_customer_sk#150 ASC NULLS FIRST], false, 0"]
	38 [label="nodeID(38) Exchange hashpartitioning(cs_ship_customer_sk#150, 200), ENSURE_REQUIREMENTS, [plan_id=186]"]
	39 [label="nodeID(39) Project [cs_ship_customer_sk#150]"]
	40 [label="nodeID(40) BroadcastHashJoin [cs_sold_date_sk#143], [d_date_sk#209], Inner, BuildRight, false"]
	41 [label="nodeID(41) Filter isnotnull(cs_sold_date_sk#143)"]
	42 [label="nodeID(42) FileScan parquet tpcds_500_parquet.catalog_sales[cs_sold_date_sk#143,cs_ship_customer_sk#150"]
	43 [label="nodeID(43) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=181]"]
	44 [label="nodeID(44) Project [d_date_sk#209]"]
	45 [label="nodeID(45) Filter (((((isnotnull(d_year#215) AND isnotnull(d_moy#217)) AND (d_year#215 = 2002)) AND (d_moy#217 >= 1)) AND (d_moy#217 <= 4)) AND isnotnull(d_date_sk#209))"]
	46 [label="nodeID(46) FileScan parquet tpcds_500_parquet.date_dim[d_date_sk#209,d_year#215,d_moy#217"]
	47 [label="nodeID(47) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=192]"]
	48 [label="nodeID(48) Project [ca_address_sk#33]"]
	49 [label="nodeID(49) Filter (ca_county#40 IN (Rush County,Toole County,Jefferson County,Dona Ana County,La Porte County) AND isnotnull(ca_address_sk#33))"]
	50 [label="nodeID(50) FileScan parquet tpcds_500_parquet.customer_address[ca_address_sk#33,ca_county#40"]
	51 [label="nodeID(51) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=196]"]
	52 [label="nodeID(52) Filter isnotnull(cd_demo_sk#46)"]
	53 [label="nodeID(53) FileScan parquet tpcds_500_parquet.customer_demographics[cd_demo_sk#46,cd_gender#47,cd_marital_status#48,cd_education_status#49,cd_purchase_estimate#50,cd_credit_rating#51,cd_dep_count#52,cd_dep_employed_count#53,cd_dep_college_count#54"]
	1 -> 0
	2 -> 1
	3 -> 2
	4 -> 3
	5 -> 4
	6 -> 5
	7 -> 6
	8 -> 7
	9 -> 8
	10 -> 9
	11 -> 10
	12 -> 11
	13 -> 12
	14 -> 13
	15 -> 14
	16 -> 15
	17 -> 12
	18 -> 17
	19 -> 18
	20 -> 19
	21 -> 20
	22 -> 21
	23 -> 20
	24 -> 23
	25 -> 24
	26 -> 25
	27 -> 11
	28 -> 27
	29 -> 28
	30 -> 29
	31 -> 30
	32 -> 31
	33 -> 30
	34 -> 33
	35 -> 34
	36 -> 35
	37 -> 10
	38 -> 37
	39 -> 38
	40 -> 39
	41 -> 40
	42 -> 41
	43 -> 40
	44 -> 43
	45 -> 44
	46 -> 45
	47 -> 7
	48 -> 47
	49 -> 48
	50 -> 49
	51 -> 5
	52 -> 51
	53 -> 52
}
