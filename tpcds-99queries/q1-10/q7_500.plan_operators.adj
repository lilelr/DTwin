// The Round Table
digraph {
	0 [label="nodeID(0) "]
	1 [label="nodeID(1) HashAggregate(keys=[i_item_id#65], functions=[avg(ss_quantity#14), avg(ss_list_price#16), avg(ss_coupon_amt#23), avg(ss_sales_price#17)])"]
	2 [label="nodeID(2) Exchange hashpartitioning(i_item_id#65, 200), ENSURE_REQUIREMENTS, [plan_id=113]"]
	3 [label="nodeID(3) HashAggregate(keys=[i_item_id#65], functions=[partial_avg(ss_quantity#14), partial_avg(ss_list_price#16), partial_avg(ss_coupon_amt#23), partial_avg(ss_sales_price#17)])"]
	4 [label="nodeID(4) Project [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#65]"]
	5 [label="nodeID(5) BroadcastHashJoin [ss_promo_sk#12], [p_promo_sk#86], Inner, BuildRight, false"]
	6 [label="nodeID(6) Project [ss_promo_sk#12, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#65]"]
	7 [label="nodeID(7) BroadcastHashJoin [ss_item_sk#6], [i_item_sk#64], Inner, BuildRight, false"]
	8 [label="nodeID(8) Project [ss_item_sk#6, ss_promo_sk#12, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23]"]
	9 [label="nodeID(9) BroadcastHashJoin [ss_sold_date_sk#4], [d_date_sk#36], Inner, BuildRight, false"]
	10 [label="nodeID(10) Project [ss_sold_date_sk#4, ss_item_sk#6, ss_promo_sk#12, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23]"]
	11 [label="nodeID(11) BroadcastHashJoin [ss_cdemo_sk#8], [cd_demo_sk#27], Inner, BuildRight, false"]
	12 [label="nodeID(12) Filter (((isnotnull(ss_cdemo_sk#8) AND isnotnull(ss_sold_date_sk#4)) AND isnotnull(ss_item_sk#6)) AND isnotnull(ss_promo_sk#12))"]
	13 [label="nodeID(13) FileScan parquet tpcds_500_parquet.store_sales[ss_sold_date_sk#4,ss_item_sk#6,ss_cdemo_sk#8,ss_promo_sk#12,ss_quantity#14,ss_list_price#16,ss_sales_price#17,ss_coupon_amt#23"]
	14 [label="nodeID(14) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=96]"]
	15 [label="nodeID(15) Project [cd_demo_sk#27]"]
	16 [label="nodeID(16) Filter ((((((isnotnull(cd_gender#28) AND isnotnull(cd_marital_status#29)) AND isnotnull(cd_education_status#30)) AND (cd_gender#28 = M)) AND (cd_marital_status#29 = S)) AND (cd_education_status#30 = College)) AND isnotnull(cd_demo_sk#27))"]
	17 [label="nodeID(17) FileScan parquet tpcds_500_parquet.customer_demographics[cd_demo_sk#27,cd_gender#28,cd_marital_status#29,cd_education_status#30"]
	18 [label="nodeID(18) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=100]"]
	19 [label="nodeID(19) Project [d_date_sk#36]"]
	20 [label="nodeID(20) Filter ((isnotnull(d_year#42) AND (d_year#42 = 2000)) AND isnotnull(d_date_sk#36))"]
	21 [label="nodeID(21) FileScan parquet tpcds_500_parquet.date_dim[d_date_sk#36,d_year#42"]
	22 [label="nodeID(22) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=104]"]
	23 [label="nodeID(23) Filter isnotnull(i_item_sk#64)"]
	24 [label="nodeID(24) FileScan parquet tpcds_500_parquet.item[i_item_sk#64,i_item_id#65"]
	25 [label="nodeID(25) BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=108]"]
	26 [label="nodeID(26) Project [p_promo_sk#86]"]
	27 [label="nodeID(27) Filter (((p_channel_email#95 = N) OR (p_channel_event#100 = N)) AND isnotnull(p_promo_sk#86))"]
	28 [label="nodeID(28) FileScan parquet tpcds_500_parquet.promotion[p_promo_sk#86,p_channel_email#95,p_channel_event#100"]
	1 -> 0
	2 -> 1
	3 -> 2
	4 -> 3
	5 -> 4
	6 -> 5
	7 -> 6
	8 -> 7
	9 -> 8
	10 -> 9
	11 -> 10
	12 -> 11
	13 -> 12
	14 -> 11
	15 -> 14
	16 -> 15
	17 -> 16
	18 -> 9
	19 -> 18
	20 -> 19
	21 -> 20
	22 -> 7
	23 -> 22
	24 -> 23
	25 -> 5
	26 -> 25
	27 -> 26
	28 -> 27
}
